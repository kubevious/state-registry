{
    "date": "2020-05-01T23:11:29.037Z",
    "items": {
        "8c8feaac704708a2d93d961790e0812032e716dc1421a0c589ba7691680be45a": {
            "dn": "root",
            "kind": "root",
            "config_kind": "node",
            "config": {
                "rn": "root",
                "kind": "root",
                "order": 100,
                "alertCount": {},
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "c4a7642e93b0997d9aa3a55357d078374a655a4815f0b9c9cea35368e667d8a3": {
            "dn": "root/ns-[berlioz]",
            "kind": "ns",
            "config_kind": "node",
            "config": {
                "rn": "ns-[berlioz]",
                "name": "berlioz",
                "kind": "ns",
                "order": 100,
                "alertCount": {},
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "5861f590821e7d73291090927812b8ae7f5e5362dfa9c3aba103a45b184bab8f": {
            "dn": "root/ns-[berlioz]",
            "kind": "ns",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:21:47Z",
                        "labels": {
                            "istio-injection": "enabled"
                        },
                        "name": "berlioz",
                        "resourceVersion": "962",
                        "selfLink": "/api/v1/namespaces/berlioz",
                        "uid": "44edbf14-04c9-11ea-bc78-42010a8a0172"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "f70f9d1ccda7f14a4c15b204db16407273b0608ce150d53ca9b13adc95085fe1": {
            "dn": "root/ns-[berlioz]",
            "kind": "ns",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Applications": 2,
                    "Ingresses": 0,
                    "Secrets": 2
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "63454c9bb73871c3148b6481aaa7a83cd7b9404a2913befd4e274926a1c4288d": {
            "dn": "root/ns-[berlioz]",
            "kind": "ns",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 6,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage for all pod replicas within the namespace."
            }
        },
        "4419488b5a7795e8232b03d33453b1eee6661eab6af616bd9007784a17c1ac4c": {
            "dn": "root/ns-[berlioz]",
            "kind": "ns",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 7,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "ee92b0e9342b6bcf039475b46163daefc9f6b68e8dcb7f729d6797dd9ce20ddc": {
            "dn": "root/ns-[berlioz]",
            "kind": "ns",
            "config_kind": "props",
            "name": "app-consumption",
            "config": {
                "kind": "table",
                "id": "app-consumption",
                "title": "Application Consumption",
                "order": 8,
                "config": {
                    "headers": [
                        {
                            "id": "dn",
                            "label": "Application",
                            "kind": "shortcut"
                        },
                        "cpu",
                        "memory"
                    ],
                    "rows": []
                },
                "tooltip": "List of apps and resources they consume. Apps that tame most resources are on the top."
            }
        },
        "0cd8ae47a5b60712cba54f7c216e157d2496efc0e6d827876065ebe21900ad06": {
            "dn": "root/ns-[default]",
            "kind": "ns",
            "config_kind": "node",
            "config": {
                "rn": "ns-[default]",
                "name": "default",
                "kind": "ns",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "ce27c21a71423d484d24ce8b346c38074276e3ebccb4dbc0a1ad9e974d628b30": {
            "dn": "root/ns-[default]",
            "kind": "ns",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:19:38Z",
                        "name": "default",
                        "resourceVersion": "5",
                        "selfLink": "/api/v1/namespaces/default",
                        "uid": "f7a56cb3-04c8-11ea-bc78-42010a8a0172"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "deed233febe51e7f92c4da300ce25e401e416f58d3168f39f229b7b7021eb7f7": {
            "dn": "root/ns-[default]",
            "kind": "ns",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Applications": 0,
                    "Ingresses": 0,
                    "Secrets": 0
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "1ebb93e39f7b5494d6ace061ca0cde6b60bb2b73f0c2b7d2e5dcdd0fc26831f1": {
            "dn": "root/ns-[default]",
            "kind": "ns",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 6,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage for all pod replicas within the namespace."
            }
        },
        "91a54f8b26c46599527d6cbf7fa2c8ea3699d10e784956573687b08a736713ee": {
            "dn": "root/ns-[default]",
            "kind": "ns",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 7,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "99c723ae4e851dbba530e3f72cee16c81cfea37eb40ee138c8d4ae524eb0546d": {
            "dn": "root/ns-[default]",
            "kind": "ns",
            "config_kind": "props",
            "name": "app-consumption",
            "config": {
                "kind": "table",
                "id": "app-consumption",
                "title": "Application Consumption",
                "order": 8,
                "config": {
                    "headers": [
                        {
                            "id": "dn",
                            "label": "Application",
                            "kind": "shortcut"
                        },
                        "cpu",
                        "memory"
                    ],
                    "rows": []
                },
                "tooltip": "List of apps and resources they consume. Apps that tame most resources are on the top."
            }
        },
        "b9cddc2dc964ee5ff84447a9a6e54477364f6ada3cf5665d40a276fce0995482": {
            "dn": "root/ns-[istio-system]",
            "kind": "ns",
            "config_kind": "node",
            "config": {
                "rn": "ns-[istio-system]",
                "name": "istio-system",
                "kind": "ns",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "028a4e25f1d779ffebc529d21eb66c94a2affc3bcd772a1173c2403091212e24": {
            "dn": "root/ns-[istio-system]",
            "kind": "ns",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:29:17Z",
                        "labels": {
                            "name": "istio-system"
                        },
                        "name": "istio-system",
                        "resourceVersion": "1631",
                        "selfLink": "/api/v1/namespaces/istio-system",
                        "uid": "5120b367-04ca-11ea-b9e5-42010a8a0197"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "905d8bab066d8a17f481ec59353dc43a32af4b7ebeba13ed15a02291f8c9d06d": {
            "dn": "root/ns-[istio-system]",
            "kind": "ns",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Applications": 0,
                    "Ingresses": 0,
                    "Secrets": 0
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "04a927659c891d992c230791a6907814baaa437c6295c9a87458e2b55d78d7f2": {
            "dn": "root/ns-[istio-system]",
            "kind": "ns",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 6,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage for all pod replicas within the namespace."
            }
        },
        "2dc2dc84e2c5ba6f2eb160b505a58bee82cbf4c646d4d259dec90dfb42bbec05": {
            "dn": "root/ns-[istio-system]",
            "kind": "ns",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 7,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "41b8b81d7b219d4bb58774c2a2dee82da7040bbbd8a1d5c5a7511e7c4b552e76": {
            "dn": "root/ns-[istio-system]",
            "kind": "ns",
            "config_kind": "props",
            "name": "app-consumption",
            "config": {
                "kind": "table",
                "id": "app-consumption",
                "title": "Application Consumption",
                "order": 8,
                "config": {
                    "headers": [
                        {
                            "id": "dn",
                            "label": "Application",
                            "kind": "shortcut"
                        },
                        "cpu",
                        "memory"
                    ],
                    "rows": []
                },
                "tooltip": "List of apps and resources they consume. Apps that tame most resources are on the top."
            }
        },
        "ef193c226f9484353c128053245e047f6d63d9a6d7eb6e4bb58c3864a76c4fce": {
            "dn": "root/ns-[kube-public]",
            "kind": "ns",
            "config_kind": "node",
            "config": {
                "rn": "ns-[kube-public]",
                "name": "kube-public",
                "kind": "ns",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "13437db6bc5b4525943fb1ede8f0a29eeff59d61ef2474768787f826f2a4ae86": {
            "dn": "root/ns-[kube-public]",
            "kind": "ns",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:19:38Z",
                        "name": "kube-public",
                        "resourceVersion": "37",
                        "selfLink": "/api/v1/namespaces/kube-public",
                        "uid": "f7bcff5e-04c8-11ea-bc78-42010a8a0172"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "7671d953aa48338098507d048fe5d623d323dbffb76455289e881fa364cca0a7": {
            "dn": "root/ns-[kube-public]",
            "kind": "ns",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Applications": 0,
                    "Ingresses": 0,
                    "Secrets": 0
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "b4d224862768cb711154f38da4f2f19ac09e6f6cf80717cb9af2efe444d2c94b": {
            "dn": "root/ns-[kube-public]",
            "kind": "ns",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 6,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage for all pod replicas within the namespace."
            }
        },
        "51ee5e5172f0bf3d00d2e55c406224adfa8482aa7ed7495201ddc0658525aeaf": {
            "dn": "root/ns-[kube-public]",
            "kind": "ns",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 7,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "0783bff089c4108fd185ba46f212a4f187edc936983caf67007a27e5d467418b": {
            "dn": "root/ns-[kube-public]",
            "kind": "ns",
            "config_kind": "props",
            "name": "app-consumption",
            "config": {
                "kind": "table",
                "id": "app-consumption",
                "title": "Application Consumption",
                "order": 8,
                "config": {
                    "headers": [
                        {
                            "id": "dn",
                            "label": "Application",
                            "kind": "shortcut"
                        },
                        "cpu",
                        "memory"
                    ],
                    "rows": []
                },
                "tooltip": "List of apps and resources they consume. Apps that tame most resources are on the top."
            }
        },
        "43d4afc3039017a7059c4627f608616303b590e767c961244f6c09ad96863bed": {
            "dn": "root/ns-[kube-system]",
            "kind": "ns",
            "config_kind": "node",
            "config": {
                "rn": "ns-[kube-system]",
                "name": "kube-system",
                "kind": "ns",
                "order": 100,
                "alertCount": {},
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "53a27093aecf6eb9b21caae0575b9007ca3ce1bfb7d7cd48130872b0520cd7d7": {
            "dn": "root/ns-[kube-system]",
            "kind": "ns",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{},\"name\":\"kube-system\",\"namespace\":\"\"}}\n"
                        },
                        "creationTimestamp": "2019-11-11T21:19:38Z",
                        "name": "kube-system",
                        "resourceVersion": "211",
                        "selfLink": "/api/v1/namespaces/kube-system",
                        "uid": "f7b5be00-04c8-11ea-bc78-42010a8a0172"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "dc43ee68e5a45867dc71a97993c2a2c178a08e821f4b36eadb22e64d5e7c811e": {
            "dn": "root/ns-[kube-system]",
            "kind": "ns",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Applications": 11,
                    "Ingresses": 0,
                    "Secrets": 0
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "c734e09b96c5438bd9b67a0c31c001c162d5b24e7fa80b18dfe6e9ef3702ba57": {
            "dn": "root/ns-[kube-system]",
            "kind": "ns",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 6,
                "config": {
                    "cpu request": "64.80%",
                    "memory request": "445.78 MB"
                },
                "tooltip": "Resource usage for all pod replicas within the namespace."
            }
        },
        "bcee88431488029725cfbf2b536fecb589aacd92681ce97aac110006c0f74447": {
            "dn": "root/ns-[kube-system]",
            "kind": "ns",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 7,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "0cbdc79009e0a3570f545840ac976d668ec5104622e38287e2978e55137be8ca": {
            "dn": "root/ns-[kube-system]",
            "kind": "ns",
            "config_kind": "props",
            "name": "app-consumption",
            "config": {
                "kind": "table",
                "id": "app-consumption",
                "title": "Application Consumption",
                "order": 8,
                "config": {
                    "headers": [
                        {
                            "id": "dn",
                            "label": "Application",
                            "kind": "shortcut"
                        },
                        "cpu",
                        "memory"
                    ],
                    "rows": []
                },
                "tooltip": "List of apps and resources they consume. Apps that tame most resources are on the top."
            }
        },
        "3c4a120bf2eeb4a030ae6b54646210a2e7484b8b20edb10912bfec53404c213e": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[fluentd-gcp-v3.2.0]",
                "name": "fluentd-gcp-v3.2.0",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "c4efced030452c781f82c94d54f98aeb3a0db0184816fd751ee35443dd0e71dd": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "No",
                    "Launcher": "DaemonSet",
                    "Container Count": 2,
                    "Init Container Count": 0,
                    "Volumes": 3
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "48fc2370e263306d95e6082c0fe15fafae544174d52f9d8644266e82163cfafc": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "200 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "1e3b6d0e11ff7cb10005f4bc719db4e57a1f49c423f3dc276b295dcec25b5d47": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "36c0467318463ec619233415fa52a858137d026d873f615ca54d2efd9c370d51": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "9bab00ee02bb1c826c76af3cf8aeae4de843e2839c16c7b7ca7a8d206c1030c5": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[DaemonSet]",
                "name": "DaemonSet",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "3e7be2cb6151b32eafb39855bdf3723cc3a565e09b58587acb3bb0bc963956c4": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "DaemonSet",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "fluentd-gcp-v3.2.0",
                        "namespace": "kube-system",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/fluentd-gcp-v3.2.0",
                        "uid": "438eb962-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "798",
                        "generation": 2,
                        "creationTimestamp": "2019-11-26T21:11:07Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "fluentd-gcp",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v3.2.0"
                        },
                        "annotations": {
                            "deprecated.daemonset.template.generation": "2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"fluentd-gcp\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v3.2.0\"},\"name\":\"fluentd-gcp-v3.2.0\",\"namespace\":\"kube-system\"},\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"scheduler.alpha.kubernetes.io/critical-pod\":\"\"},\"labels\":{\"k8s-app\":\"fluentd-gcp\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v3.2.0\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"STACKDRIVER_METADATA_AGENT_URL\",\"value\":\"http://$(NODE_NAME):8799\"}],\"image\":\"gcr.io/stackdriver-agents/stackdriver-logging-agent:1.6.8\",\"livenessProbe\":{\"exec\":{\"command\":[\"/bin/sh\",\"-c\",\"LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then\\n  exit 1;\\nfi; touch -d \\\"${STUCK_THRESHOLD_SECONDS} seconds ago\\\" /tmp/marker-stuck; if [[ -z \\\"$(find /var/log/fluentd-buffers -type f -newer /tmp/marker-stuck -print -quit)\\\" ]]; then\\n  rm -rf /var/log/fluentd-buffers;\\n  exit 1;\\nfi; touch -d \\\"${LIVENESS_THRESHOLD_SECONDS} seconds ago\\\" /tmp/marker-liveness; if [[ -z \\\"$(find /var/log/fluentd-buffers -type f -newer /tmp/marker-liveness -print -quit)\\\" ]]; then\\n  exit 1;\\nfi;\\n\"]},\"initialDelaySeconds\":600,\"periodSeconds\":60},\"name\":\"fluentd-gcp\",\"volumeMounts\":[{\"mountPath\":\"/var/log\",\"name\":\"varlog\"},{\"mountPath\":\"/var/lib/docker/containers\",\"name\":\"varlibdockercontainers\",\"readOnly\":true},{\"mountPath\":\"/etc/google-fluentd/config.d\",\"name\":\"config-volume\"}]},{\"command\":[\"/monitor\",\"--stackdriver-prefix=container.googleapis.com/internal/addons\",\"--api-override=https://monitoring.googleapis.com/\",\"--source=fluentd:http://localhost:24231?whitelisted=stackdriver_successful_requests_count,stackdriver_failed_requests_count,stackdriver_ingested_entries_count,stackdriver_dropped_entries_count\",\"--pod-id=$(POD_NAME)\",\"--namespace-id=$(POD_NAMESPACE)\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"k8s.gcr.io/prometheus-to-sd:v0.5.0\",\"name\":\"prometheus-to-sd-exporter\"}],\"dnsPolicy\":\"Default\",\"hostNetwork\":true,\"nodeSelector\":{\"beta.kubernetes.io/fluentd-ds-ready\":\"true\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"fluentd-gcp\",\"terminationGracePeriodSeconds\":60,\"tolerations\":[{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"varlog\"},{\"hostPath\":{\"path\":\"/var/lib/docker/containers\"},\"name\":\"varlibdockercontainers\"},{\"configMap\":{\"name\":\"fluentd-gcp-config-old-v1.2.5\"},\"name\":\"config-volume\"}]}},\"updateStrategy\":{\"type\":\"RollingUpdate\"}}}\n"
                        }
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "fluentd-gcp",
                                "kubernetes.io/cluster-service": "true",
                                "version": "v3.2.0"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "k8s-app": "fluentd-gcp",
                                    "kubernetes.io/cluster-service": "true",
                                    "version": "v3.2.0"
                                },
                                "annotations": {
                                    "scheduler.alpha.kubernetes.io/critical-pod": ""
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "varlog",
                                        "hostPath": {
                                            "path": "/var/log",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "varlibdockercontainers",
                                        "hostPath": {
                                            "path": "/var/lib/docker/containers",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "config-volume",
                                        "configMap": {
                                            "name": "fluentd-gcp-config-old-v1.2.5",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "fluentd-gcp",
                                        "image": "gcr.io/stackdriver-agents/stackdriver-logging-agent:1.6.8",
                                        "env": [
                                            {
                                                "name": "NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "STACKDRIVER_METADATA_AGENT_URL",
                                                "value": "http://$(NODE_NAME):8799"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "500Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "200Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "varlog",
                                                "mountPath": "/var/log"
                                            },
                                            {
                                                "name": "varlibdockercontainers",
                                                "readOnly": true,
                                                "mountPath": "/var/lib/docker/containers"
                                            },
                                            {
                                                "name": "config-volume",
                                                "mountPath": "/etc/google-fluentd/config.d"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "exec": {
                                                "command": [
                                                    "/bin/sh",
                                                    "-c",
                                                    "LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then\n  exit 1;\nfi; touch -d \"${STUCK_THRESHOLD_SECONDS} seconds ago\" /tmp/marker-stuck; if [[ -z \"$(find /var/log/fluentd-buffers -type f -newer /tmp/marker-stuck -print -quit)\" ]]; then\n  rm -rf /var/log/fluentd-buffers;\n  exit 1;\nfi; touch -d \"${LIVENESS_THRESHOLD_SECONDS} seconds ago\" /tmp/marker-liveness; if [[ -z \"$(find /var/log/fluentd-buffers -type f -newer /tmp/marker-liveness -print -quit)\" ]]; then\n  exit 1;\nfi;\n"
                                                ]
                                            },
                                            "initialDelaySeconds": 600,
                                            "timeoutSeconds": 1,
                                            "periodSeconds": 60,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    },
                                    {
                                        "name": "prometheus-to-sd-exporter",
                                        "image": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                                        "command": [
                                            "/monitor",
                                            "--stackdriver-prefix=container.googleapis.com/internal/addons",
                                            "--api-override=https://monitoring.googleapis.com/",
                                            "--source=fluentd:http://localhost:24231?whitelisted=stackdriver_successful_requests_count,stackdriver_failed_requests_count,stackdriver_ingested_entries_count,stackdriver_dropped_entries_count",
                                            "--pod-id=$(POD_NAME)",
                                            "--namespace-id=$(POD_NAMESPACE)"
                                        ],
                                        "env": [
                                            {
                                                "name": "POD_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "POD_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 60,
                                "dnsPolicy": "Default",
                                "nodeSelector": {
                                    "beta.kubernetes.io/fluentd-ds-ready": "true"
                                },
                                "serviceAccountName": "fluentd-gcp",
                                "serviceAccount": "fluentd-gcp",
                                "hostNetwork": true,
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    }
                                ],
                                "priorityClassName": "system-node-critical"
                            }
                        },
                        "updateStrategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": 1
                            }
                        },
                        "revisionHistoryLimit": 10
                    },
                    "status": {
                        "currentNumberScheduled": 3,
                        "numberMisscheduled": 0,
                        "desiredNumberScheduled": 3,
                        "numberReady": 3,
                        "observedGeneration": 2,
                        "updatedNumberScheduled": 3,
                        "numberAvailable": 3
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "43cd691bc01e2b0960bc7ec0d025a7a84dcb6fa98dd71dedad20b048f6a4b9b8": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "radioactive",
            "config": {
                "kind": "key-value",
                "id": "radioactive",
                "title": "Radioactivity",
                "order": 7,
                "config": {
                    "hostNetwork": true
                }
            }
        },
        "7f2dd29a7ce4a237de5bac20400c97164c62726b8c33b5d2655e0e563c92c5c4": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[gprod-berlioz-main-agent]",
                "name": "gprod-berlioz-main-agent",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "59543eeb5677899454297b80e5e120859f9dfd865febb9955864a5617fa6341b": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "No",
                    "Launcher": "DaemonSet",
                    "Container Count": 1,
                    "Init Container Count": 0,
                    "Volumes": 2
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "32dcff87b3fdc9d173855d4140fdde3c6444489bb4f33904728cdc7d80172e2d": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "3df9fac1415754f853212f2add84051bf0bae0fe29f327306592c8dbb08a1f64": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "15525124c60986dbd97b1718763d693cc353f8281178756ae8058e57a8706b86": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "9cd10fda06cae8164af88816b1b90c1c0f9d2c7f8aa505e128b194d088d8d596": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[DaemonSet]",
                "name": "DaemonSet",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "f98c4d23c16696b5336e8e6610359ea69164a76c4c43572bcc6f5a2a4a11ea7f": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "DaemonSet",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "gprod-berlioz-main-agent",
                        "namespace": "berlioz",
                        "selfLink": "/apis/apps/v1/namespaces/berlioz/daemonsets/gprod-berlioz-main-agent",
                        "uid": "63f0b736-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "938",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:12:02Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "berlioz",
                            "deployment": "gprod",
                            "name": "gprod-berlioz-main-agent",
                            "sector": "main",
                            "service": "agent"
                        },
                        "annotations": {
                            "deprecated.daemonset.template.generation": "1"
                        }
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "name": "gprod-berlioz-main-agent"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "berlioz_managed": "true",
                                    "cluster": "berlioz",
                                    "deployment": "gprod",
                                    "name": "gprod-berlioz-main-agent",
                                    "sector": "main",
                                    "service": "agent"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "google-cloud-key",
                                        "secret": {
                                            "secretName": "gprod-berlioz-main-agent",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "var-run-docker-sock",
                                        "hostPath": {
                                            "path": "/var/run/docker.sock",
                                            "type": ""
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "gprod-berlioz-main-agent",
                                        "image": "berliozcloud/agent",
                                        "ports": [
                                            {
                                                "name": "ws",
                                                "hostPort": 55555,
                                                "containerPort": 55555,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "name": "mon",
                                                "hostPort": 55556,
                                                "containerPort": 55556,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "BERLIOZ_TASK_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.uid"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_ADDRESS",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.podIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_INSTANCE_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMES_PATH",
                                                "value": "/etc/berlioz/consumes"
                                            },
                                            {
                                                "name": "BERLIOZ_AGENT_PATH",
                                                "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_ADDRESS",
                                                "value": "0.0.0.0"
                                            },
                                            {
                                                "name": "BERLIOZ_INFRA",
                                                "value": "k8s"
                                            },
                                            {
                                                "name": "BERLIOZ_REGION",
                                                "value": "us-west1"
                                            },
                                            {
                                                "name": "BERLIOZ_CLUSTER",
                                                "value": "berlioz"
                                            },
                                            {
                                                "name": "BERLIOZ_SECTOR",
                                                "value": "main"
                                            },
                                            {
                                                "name": "BERLIOZ_SERVICE",
                                                "value": "agent"
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY_PREFIX",
                                                "value": "gprod-berlioz-main-agent-"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_PORT_WS",
                                                "value": "55555"
                                            },
                                            {
                                                "name": "BERLIOZ_PROVIDED_PORT_WS",
                                                "value": "55555"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_PORT_MON",
                                                "value": "55556"
                                            },
                                            {
                                                "name": "BERLIOZ_PROVIDED_PORT_MON",
                                                "value": "55556"
                                            },
                                            {
                                                "name": "GOOGLE_APPLICATION_CREDENTIALS",
                                                "value": "/var/secrets/google/service-key.json"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "google-cloud-key",
                                                "mountPath": "/var/secrets/google"
                                            },
                                            {
                                                "name": "var-run-docker-sock",
                                                "mountPath": "/var/run/docker.sock"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "Always"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "hostNetwork": true,
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "priorityClassName": "berlioz-high-priority"
                            }
                        },
                        "updateStrategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": 1
                            }
                        },
                        "revisionHistoryLimit": 10
                    },
                    "status": {
                        "currentNumberScheduled": 3,
                        "numberMisscheduled": 0,
                        "desiredNumberScheduled": 3,
                        "numberReady": 3,
                        "observedGeneration": 1,
                        "updatedNumberScheduled": 3,
                        "numberAvailable": 3
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "962da2b8821f079be0e9478dad3b550029987ac7c199ed98078348d918d61d00": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "radioactive",
            "config": {
                "kind": "key-value",
                "id": "radioactive",
                "title": "Radioactivity",
                "order": 7,
                "config": {
                    "hostNetwork": true
                }
            }
        },
        "5e98b93e7dc2ae5b242f9df2879800fb0ca7930e5875eb410fcadd7899838ef0": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[metadata-proxy-v0.1]",
                "name": "metadata-proxy-v0.1",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "0fce49d32399eab25fc47990800b13b459db5acd6c2c8cfbc4bffe1a68583764": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "No",
                    "Launcher": "DaemonSet",
                    "Container Count": 2,
                    "Init Container Count": 0,
                    "Volumes": 0
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "b0c373fc0f6faebd370a259eef631909a24d73cf4d280a7062f99998c67e7c49": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "3.20%",
                    "memory request": "45 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "27aa872e1939cbe5f1d39364be49d7805a5d83ed2be54dcb1d9178d502d09648": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "f465526a100d7c859c6c517175293b0aba36b5bb2103270dbca73b2a26597d51": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "35eb6c0e8d3f0471bf3cac71be35acdf8837f61d13dd32a3f77fbb7f63e84eb4": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[DaemonSet]",
                "name": "DaemonSet",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "c8a2fc764149374b04ca28002e88cd50885661bc3b8824015bfaa9595babadb0": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "DaemonSet",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "metadata-proxy-v0.1",
                        "namespace": "kube-system",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/metadata-proxy-v0.1",
                        "uid": "4412d965-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "393",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:11:08Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "metadata-proxy",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v0.1"
                        },
                        "annotations": {
                            "deprecated.daemonset.template.generation": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"metadata-proxy\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v0.1\"},\"name\":\"metadata-proxy-v0.1\",\"namespace\":\"kube-system\"},\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"scheduler.alpha.kubernetes.io/critical-pod\":\"\"},\"labels\":{\"k8s-app\":\"metadata-proxy\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v0.1\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/metadata-proxy:v0.1.10\",\"name\":\"metadata-proxy\",\"resources\":{\"limits\":{\"cpu\":\"30m\",\"memory\":\"25Mi\"},\"requests\":{\"cpu\":\"30m\",\"memory\":\"25Mi\"}},\"securityContext\":{\"privileged\":true}},{\"command\":[\"/monitor\",\"--stackdriver-prefix=container.googleapis.com/internal/addons\",\"--api-override=https://monitoring.googleapis.com/\",\"--source=metadata_proxy:http://127.0.0.1:989?whitelisted=request_count\",\"--pod-id=$(POD_NAME)\",\"--namespace-id=$(POD_NAMESPACE)\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"k8s.gcr.io/prometheus-to-sd:v0.5.0\",\"name\":\"prometheus-to-sd-exporter\",\"resources\":{\"limits\":{\"cpu\":\"2m\",\"memory\":\"20Mi\"},\"requests\":{\"cpu\":\"2m\",\"memory\":\"20Mi\"}}}],\"dnsPolicy\":\"Default\",\"hostNetwork\":true,\"nodeSelector\":{\"beta.kubernetes.io/metadata-proxy-ready\":\"true\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"metadata-proxy\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}},\"updateStrategy\":{\"type\":\"RollingUpdate\"}}}\n"
                        }
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "metadata-proxy",
                                "kubernetes.io/cluster-service": "true",
                                "version": "v0.1"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "k8s-app": "metadata-proxy",
                                    "kubernetes.io/cluster-service": "true",
                                    "version": "v0.1"
                                },
                                "annotations": {
                                    "scheduler.alpha.kubernetes.io/critical-pod": ""
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "name": "metadata-proxy",
                                        "image": "k8s.gcr.io/metadata-proxy:v0.1.10",
                                        "resources": {
                                            "limits": {
                                                "cpu": "30m",
                                                "memory": "25Mi"
                                            },
                                            "requests": {
                                                "cpu": "30m",
                                                "memory": "25Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "privileged": true
                                        }
                                    },
                                    {
                                        "name": "prometheus-to-sd-exporter",
                                        "image": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                                        "command": [
                                            "/monitor",
                                            "--stackdriver-prefix=container.googleapis.com/internal/addons",
                                            "--api-override=https://monitoring.googleapis.com/",
                                            "--source=metadata_proxy:http://127.0.0.1:989?whitelisted=request_count",
                                            "--pod-id=$(POD_NAME)",
                                            "--namespace-id=$(POD_NAMESPACE)"
                                        ],
                                        "env": [
                                            {
                                                "name": "POD_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "POD_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "2m",
                                                "memory": "20Mi"
                                            },
                                            "requests": {
                                                "cpu": "2m",
                                                "memory": "20Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "Default",
                                "nodeSelector": {
                                    "beta.kubernetes.io/metadata-proxy-ready": "true"
                                },
                                "serviceAccountName": "metadata-proxy",
                                "serviceAccount": "metadata-proxy",
                                "hostNetwork": true,
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    }
                                ],
                                "priorityClassName": "system-node-critical"
                            }
                        },
                        "updateStrategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": 1
                            }
                        },
                        "revisionHistoryLimit": 10
                    },
                    "status": {
                        "currentNumberScheduled": 0,
                        "numberMisscheduled": 0,
                        "desiredNumberScheduled": 0,
                        "numberReady": 0,
                        "observedGeneration": 1
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "3b41ef600b226515d220f6dfa493408ea4a750c51664e3f74d66ec936203ec88": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "radioactive",
            "config": {
                "kind": "key-value",
                "id": "radioactive",
                "title": "Radioactivity",
                "order": 7,
                "config": {
                    "hostNetwork": true
                }
            }
        },
        "4c41abe2d9a0de4c57c6d6e34b4a40dccc3d8544f0959fc4639b2f31f540250f": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[nvidia-gpu-device-plugin]",
                "name": "nvidia-gpu-device-plugin",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "e4bbcc6e47655a8dc7f378426bb2479c13e707b71e6260d66adf06e6ee655c21": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "No",
                    "Launcher": "DaemonSet",
                    "Container Count": 1,
                    "Init Container Count": 0,
                    "Volumes": 2
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "5ebcbf57e45228f8343ea722e6e7536a4f0ee45bad33f0429157130254f254c2": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "5.00%",
                    "memory request": "10 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "5bc857e4006b0440b1c37adcd0052e5552001ee0a28c5ef4a31ae67e30714d7f": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "3189fee92e9d1bf19ba3eea0133d865139795794fefe4270c26a1c5dd9d2b179": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "eab742123675491641f943e30e344d33af918de452aa9e3228f0df828cdb3217": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[DaemonSet]",
                "name": "DaemonSet",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f6cf455764b8a5553f8fb89fab1647eeb1dee0f742f59eefc4b580b17cbacfcb": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "DaemonSet",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "nvidia-gpu-device-plugin",
                        "namespace": "kube-system",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/nvidia-gpu-device-plugin",
                        "uid": "4996406a-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "456",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:11:17Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "nvidia-gpu-device-plugin"
                        },
                        "annotations": {
                            "deprecated.daemonset.template.generation": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"nvidia-gpu-device-plugin\"},\"name\":\"nvidia-gpu-device-plugin\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"nvidia-gpu-device-plugin\"}},\"template\":{\"metadata\":{\"annotations\":{\"scheduler.alpha.kubernetes.io/critical-pod\":\"\"},\"labels\":{\"k8s-app\":\"nvidia-gpu-device-plugin\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"cloud.google.com/gke-accelerator\",\"operator\":\"Exists\"}]}]}}},\"containers\":[{\"command\":[\"/usr/bin/nvidia-gpu-device-plugin\",\"-logtostderr\"],\"image\":\"k8s.gcr.io/nvidia-gpu-device-plugin@sha256:4b036e8844920336fa48f36edeb7d4398f426d6a934ba022848deed2edbf09aa\",\"name\":\"nvidia-gpu-device-plugin\",\"resources\":{\"limits\":{\"cpu\":\"50m\",\"memory\":\"10Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/device-plugin\",\"name\":\"device-plugin\"},{\"mountPath\":\"/dev\",\"name\":\"dev\"}]}],\"priorityClassName\":\"system-node-critical\",\"tolerations\":[{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/lib/kubelet/device-plugins\"},\"name\":\"device-plugin\"},{\"hostPath\":{\"path\":\"/dev\"},\"name\":\"dev\"}]}},\"updateStrategy\":{\"type\":\"RollingUpdate\"}}}\n"
                        }
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "nvidia-gpu-device-plugin"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "k8s-app": "nvidia-gpu-device-plugin"
                                },
                                "annotations": {
                                    "scheduler.alpha.kubernetes.io/critical-pod": ""
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "device-plugin",
                                        "hostPath": {
                                            "path": "/var/lib/kubelet/device-plugins",
                                            "type": ""
                                        }
                                    },
                                    {
                                        "name": "dev",
                                        "hostPath": {
                                            "path": "/dev",
                                            "type": ""
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "nvidia-gpu-device-plugin",
                                        "image": "k8s.gcr.io/nvidia-gpu-device-plugin@sha256:4b036e8844920336fa48f36edeb7d4398f426d6a934ba022848deed2edbf09aa",
                                        "command": [
                                            "/usr/bin/nvidia-gpu-device-plugin",
                                            "-logtostderr"
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "50m",
                                                "memory": "10Mi"
                                            },
                                            "requests": {
                                                "cpu": "50m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "device-plugin",
                                                "mountPath": "/device-plugin"
                                            },
                                            {
                                                "name": "dev",
                                                "mountPath": "/dev"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "privileged": true
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "cloud.google.com/gke-accelerator",
                                                            "operator": "Exists"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "operator": "Exists",
                                        "effect": "NoExecute"
                                    },
                                    {
                                        "operator": "Exists",
                                        "effect": "NoSchedule"
                                    }
                                ],
                                "priorityClassName": "system-node-critical"
                            }
                        },
                        "updateStrategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": 1
                            }
                        },
                        "revisionHistoryLimit": 10
                    },
                    "status": {
                        "currentNumberScheduled": 0,
                        "numberMisscheduled": 0,
                        "desiredNumberScheduled": 0,
                        "numberReady": 0,
                        "observedGeneration": 1
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "72b66db80df5258f800104aa752b24026cc7330d35600e373717a0ceb22bb338": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[prometheus-to-sd]",
                "name": "prometheus-to-sd",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "3a212c26a1f683ec761ec0dba831fb0df1f78874b69884ec7da5133cc488ac1c": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "No",
                    "Launcher": "DaemonSet",
                    "Container Count": 2,
                    "Init Container Count": 0,
                    "Volumes": 0
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "f44dc8def4ece151d3653ceac5d60ba689c7e29f71668ba6467a62bfbc46465a": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "0.10%",
                    "memory request": "20 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "794130ef7ca8a21809fd8713e67fc758f575b232524e38e3410ce46cf4d2503a": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "04d4271e8596ccd4c7a8a56d5d604c82e66af32ab8a1b862bbb564506064f869": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "ed5c81e620d826972ffe7a77589571a3449fd7753e8be9c052bb5508dee018c7": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[DaemonSet]",
                "name": "DaemonSet",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "9dec7eef4c6e9fb7c15d99d0ed059c1e2e7e81288ab40f991b6bd68385a3009c": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "DaemonSet",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "prometheus-to-sd",
                        "namespace": "kube-system",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/prometheus-to-sd",
                        "uid": "43ff76ba-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "742",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:11:08Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "kubernetes.io/cluster-service": "true"
                        },
                        "annotations": {
                            "deprecated.daemonset.template.generation": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"prometheus-to-sd\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"prometheus-to-sd\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"prometheus-to-sd\"}},\"spec\":{\"containers\":[{\"command\":[\"/monitor\",\"--source=kube-proxy:http://localhost:10249?whitelisted=sync_proxy_rules_latency_microseconds\\u0026metricsPrefix=container.googleapis.com/internal/addons\",\"--source=kubelet:http://localhost:10255?whitelisted=docker_operations,docker_operations_errors,runtime_operations,runtime_operations_errors,runtime_operations_latency_microseconds,pleg_relist_latency_microseconds,pod_start_latency_microseconds,rest_client_requests_total,storage_operation_duration_seconds,storage_operation_errors_total,run_podsandbox_duration_seconds,run_podsandbox_errors_total,storage_operation_status_count\",\"--source=kubelet:http://localhost:10255/metrics/probes?whitelisted=prober_probe_total\\u0026podIdLabel=pod\\u0026namespaceIdLabel=namespace\\u0026containerNameLabel=container\",\"--stackdriver-prefix=container.googleapis.com/internal/nodes\",\"--api-override=https://monitoring.googleapis.com/\",\"--export-interval=120s\"],\"image\":\"k8s.gcr.io/prometheus-to-sd:v0.8.2\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"prometheus-to-sd\"},{\"command\":[\"/monitor\",\"--source=kube-proxy:http://localhost:10249?whitelisted=sync_proxy_rules_latency_microseconds\\u0026metricsPrefix=kubernetes.io/internal/addons\",\"--source=kubelet:http://localhost:10255?whitelisted=docker_operations,docker_operations_errors,runtime_operations,runtime_operations_errors,runtime_operations_latency_microseconds,pleg_relist_latency_microseconds,pod_start_latency_microseconds,rest_client_requests_total,storage_operation_duration_seconds,storage_operation_errors_total,run_podsandbox_duration_seconds,run_podsandbox_errors_total,storage_operation_status_count\",\"--source=kubelet:http://localhost:10255/metrics/probes?whitelisted=prober_probe_total\\u0026podIdLabel=pod\\u0026namespaceIdLabel=namespace\\u0026containerNameLabel=container\",\"--stackdriver-prefix=kubernetes.io/internal/nodes\",\"--api-override=https://monitoring.googleapis.com/\",\"--monitored-resource-type-prefix=k8s_\",\"--monitored-resource-labels=location=us-west1-c\",\"--export-interval=120s\"],\"image\":\"k8s.gcr.io/prometheus-to-sd:v0.8.2\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"prometheus-to-sd-new-model\",\"resources\":{\"limits\":{\"cpu\":\"3m\",\"memory\":\"20Mi\"},\"requests\":{\"cpu\":\"1m\",\"memory\":\"20Mi\"}}}],\"hostNetwork\":true,\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"prometheus-to-sd\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}]}}}}\n"
                        }
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "prometheus-to-sd"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "k8s-app": "prometheus-to-sd"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "name": "prometheus-to-sd",
                                        "image": "k8s.gcr.io/prometheus-to-sd:v0.8.2",
                                        "command": [
                                            "/monitor",
                                            "--source=kube-proxy:http://localhost:10249?whitelisted=sync_proxy_rules_latency_microseconds&metricsPrefix=container.googleapis.com/internal/addons",
                                            "--source=kubelet:http://localhost:10255?whitelisted=docker_operations,docker_operations_errors,runtime_operations,runtime_operations_errors,runtime_operations_latency_microseconds,pleg_relist_latency_microseconds,pod_start_latency_microseconds,rest_client_requests_total,storage_operation_duration_seconds,storage_operation_errors_total,run_podsandbox_duration_seconds,run_podsandbox_errors_total,storage_operation_status_count",
                                            "--source=kubelet:http://localhost:10255/metrics/probes?whitelisted=prober_probe_total&podIdLabel=pod&namespaceIdLabel=namespace&containerNameLabel=container",
                                            "--stackdriver-prefix=container.googleapis.com/internal/nodes",
                                            "--api-override=https://monitoring.googleapis.com/",
                                            "--export-interval=120s"
                                        ],
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    },
                                    {
                                        "name": "prometheus-to-sd-new-model",
                                        "image": "k8s.gcr.io/prometheus-to-sd:v0.8.2",
                                        "command": [
                                            "/monitor",
                                            "--source=kube-proxy:http://localhost:10249?whitelisted=sync_proxy_rules_latency_microseconds&metricsPrefix=kubernetes.io/internal/addons",
                                            "--source=kubelet:http://localhost:10255?whitelisted=docker_operations,docker_operations_errors,runtime_operations,runtime_operations_errors,runtime_operations_latency_microseconds,pleg_relist_latency_microseconds,pod_start_latency_microseconds,rest_client_requests_total,storage_operation_duration_seconds,storage_operation_errors_total,run_podsandbox_duration_seconds,run_podsandbox_errors_total,storage_operation_status_count",
                                            "--source=kubelet:http://localhost:10255/metrics/probes?whitelisted=prober_probe_total&podIdLabel=pod&namespaceIdLabel=namespace&containerNameLabel=container",
                                            "--stackdriver-prefix=kubernetes.io/internal/nodes",
                                            "--api-override=https://monitoring.googleapis.com/",
                                            "--monitored-resource-type-prefix=k8s_",
                                            "--monitored-resource-labels=location=us-west1-c",
                                            "--export-interval=120s"
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "3m",
                                                "memory": "20Mi"
                                            },
                                            "requests": {
                                                "cpu": "1m",
                                                "memory": "20Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "prometheus-to-sd",
                                "serviceAccount": "prometheus-to-sd",
                                "hostNetwork": true,
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "CriticalAddonsOnly",
                                        "operator": "Exists"
                                    }
                                ],
                                "priorityClassName": "system-node-critical"
                            }
                        },
                        "updateStrategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": 1
                            }
                        },
                        "revisionHistoryLimit": 10
                    },
                    "status": {
                        "currentNumberScheduled": 3,
                        "numberMisscheduled": 0,
                        "desiredNumberScheduled": 3,
                        "numberReady": 3,
                        "observedGeneration": 1,
                        "updatedNumberScheduled": 3,
                        "numberAvailable": 3
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "060c46a2b55786780b91093cc448a0b9eeca34a454b6086e8e0d13d6604d0bee": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/launcher-[DaemonSet]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "radioactive",
            "config": {
                "kind": "key-value",
                "id": "radioactive",
                "title": "Radioactivity",
                "order": 7,
                "config": {
                    "hostNetwork": true
                }
            }
        },
        "49023f54c00fe5e35bc24baa76f0f3968f20b6231bb5d8acea735571852471fc": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[event-exporter-v0.2.4]",
                "name": "event-exporter-v0.2.4",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "3c1d8d0b10221ecc191bdf872b32a5ac5b7e3a6c7dfd159d670c28c062724a5c": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "No",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 2,
                    "Init Container Count": 0,
                    "Volumes": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "0c13eb4b594551dac72a3f2a3b16fff26841f1a543761055ea215ac3a376fd03": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "d110a9f61aecb4eed58a89e5eabac948f9d99af668bc2238ad549ab7852fadb6": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "d582852dd8bab585ad152bc162513739b969272dfef5c586ea1473cfc18eaba0": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "33cc0e1df336f44c4336799b408fc96e188013ccfc4496560f31ac5e1d66ccc1": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "8debfb00a92c649c00f9cb0b3a61d152d7ed0a0406c1fa0fc03303526298baaf": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "event-exporter-v0.2.4",
                        "namespace": "kube-system",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/event-exporter-v0.2.4",
                        "uid": "43746491-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "683",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:11:07Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "event-exporter",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v0.2.4"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"event-exporter\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v0.2.4\"},\"name\":\"event-exporter-v0.2.4\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"event-exporter\",\"version\":\"v0.2.4\"}},\"spec\":{\"containers\":[{\"command\":[\"/event-exporter\",\"-sink-opts=-stackdriver-resource-model=old\"],\"image\":\"k8s.gcr.io/event-exporter:v0.2.4\",\"name\":\"event-exporter\"},{\"command\":[\"/monitor\",\"--stackdriver-prefix=container.googleapis.com/internal/addons\",\"--api-override=https://monitoring.googleapis.com/\",\"--source=event_exporter:http://localhost:80?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count\",\"--pod-id=$(POD_NAME)\",\"--namespace-id=$(POD_NAMESPACE)\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"k8s.gcr.io/prometheus-to-sd:v0.5.0\",\"name\":\"prometheus-to-sd-exporter\"}],\"serviceAccountName\":\"event-exporter-sa\",\"terminationGracePeriodSeconds\":30,\"volumes\":[{\"hostPath\":{\"path\":\"/etc/ssl/certs\"},\"name\":\"ssl-certs\"}]}}}}\n"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "event-exporter",
                                "version": "v0.2.4"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "k8s-app": "event-exporter",
                                    "version": "v0.2.4"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "ssl-certs",
                                        "hostPath": {
                                            "path": "/etc/ssl/certs",
                                            "type": ""
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "event-exporter",
                                        "image": "k8s.gcr.io/event-exporter:v0.2.4",
                                        "command": [
                                            "/event-exporter",
                                            "-sink-opts=-stackdriver-resource-model=old"
                                        ],
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    },
                                    {
                                        "name": "prometheus-to-sd-exporter",
                                        "image": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                                        "command": [
                                            "/monitor",
                                            "--stackdriver-prefix=container.googleapis.com/internal/addons",
                                            "--api-override=https://monitoring.googleapis.com/",
                                            "--source=event_exporter:http://localhost:80?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count",
                                            "--pod-id=$(POD_NAME)",
                                            "--namespace-id=$(POD_NAMESPACE)"
                                        ],
                                        "env": [
                                            {
                                                "name": "POD_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "POD_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "event-exporter-sa",
                                "serviceAccount": "event-exporter-sa",
                                "securityContext": {},
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 2,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:11:34Z",
                                "lastTransitionTime": "2019-11-26T21:11:34Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:11:34Z",
                                "lastTransitionTime": "2019-11-26T21:11:07Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"event-exporter-v0.2.4-5f88c66fb7\" has successfully progressed."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "9855bedfdd99eee38d2ef46d2cb082820e5d75e1bd0d4c98c93e6d9dd307516b": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[fluentd-gcp-scaler]",
                "name": "fluentd-gcp-scaler",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "6c985c5ec4bb178e98a6d588fd00ecc3a0b52286d2e491b812b5382689e8aacc": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "No",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 1,
                    "Init Container Count": 0,
                    "Volumes": 0
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "b354ad1d3362fe09818b9768d9ecf0b18b075e51b4d3f9f978d9dcf0be45e254": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "e94a5c5dde9e56eec5e9b4762055fb71c7243f9e81f7f0256c616e0d52caab11": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "0.00%",
                    "memory request": "0 Bytes"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "69be251a391427f5e455be9c14d5cec4c2e5d077e4d9ea0e5680c2f4312ad897": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "7202675bebcc43faacb06807c1f1a2f4ca7882e3bf331c41af9edcb3954e99d3": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "07e1adb49fb3355cfc4e5edf7b7a8ad201857e87817becb430672fad299e6b3d": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "fluentd-gcp-scaler",
                        "namespace": "kube-system",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/fluentd-gcp-scaler",
                        "uid": "49a9ecc4-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "677",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:11:18Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "fluentd-gcp-scaler",
                            "version": "v0.5.1"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"fluentd-gcp-scaler\",\"version\":\"v0.5.1\"},\"name\":\"fluentd-gcp-scaler\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"fluentd-gcp-scaler\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"fluentd-gcp-scaler\"}},\"spec\":{\"containers\":[{\"command\":[\"/scaler.sh\",\"--ds-name=fluentd-gcp-v3.2.0\",\"--scaling-policy=fluentd-gcp-scaling-policy\"],\"env\":[{\"name\":\"CPU_REQUEST\",\"value\":\"100m\"},{\"name\":\"MEMORY_REQUEST\",\"value\":\"200Mi\"},{\"name\":\"CPU_LIMIT\",\"value\":\"1000m\"},{\"name\":\"MEMORY_LIMIT\",\"value\":\"500Mi\"}],\"image\":\"k8s.gcr.io/fluentd-gcp-scaler:0.5.2\",\"name\":\"fluentd-gcp-scaler\"}],\"serviceAccountName\":\"fluentd-gcp-scaler\"}}}}\n"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "fluentd-gcp-scaler"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "k8s-app": "fluentd-gcp-scaler"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "name": "fluentd-gcp-scaler",
                                        "image": "k8s.gcr.io/fluentd-gcp-scaler:0.5.2",
                                        "command": [
                                            "/scaler.sh",
                                            "--ds-name=fluentd-gcp-v3.2.0",
                                            "--scaling-policy=fluentd-gcp-scaling-policy"
                                        ],
                                        "env": [
                                            {
                                                "name": "CPU_REQUEST",
                                                "value": "100m"
                                            },
                                            {
                                                "name": "MEMORY_REQUEST",
                                                "value": "200Mi"
                                            },
                                            {
                                                "name": "CPU_LIMIT",
                                                "value": "1000m"
                                            },
                                            {
                                                "name": "MEMORY_LIMIT",
                                                "value": "500Mi"
                                            }
                                        ],
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "fluentd-gcp-scaler",
                                "serviceAccount": "fluentd-gcp-scaler",
                                "securityContext": {},
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:11:33Z",
                                "lastTransitionTime": "2019-11-26T21:11:33Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:11:33Z",
                                "lastTransitionTime": "2019-11-26T21:11:18Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"fluentd-gcp-scaler-59b7b75cd7\" has successfully progressed."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "f023ef26cac8de4db5e588173b69a832facd7fd5dabd604b915887a8e7eb02d2": {
            "dn": "root/ns-[addr]",
            "kind": "ns",
            "config_kind": "node",
            "config": {
                "rn": "ns-[addr]",
                "name": "addr",
                "kind": "ns",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "d02f4de356ecfac33c85e420d45d54069cec93c2e2a0c88dbdbaa92a62a202aa": {
            "dn": "root/ns-[addr]",
            "kind": "ns",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Applications": 2,
                    "Ingresses": 1,
                    "Secrets": 2
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "c02715ba6d08e6ab88e145f4244ac0c63159adcaba59c4008d654e9efa327a45": {
            "dn": "root/ns-[addr]",
            "kind": "ns",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 6,
                "config": {
                    "cpu request": "20.00%",
                    "memory request": "200 MB"
                },
                "tooltip": "Resource usage for all pod replicas within the namespace."
            }
        },
        "7f3fa5f91bab4443e6c5df30bd404cba34e591f00546862c1740ce728d163ed9": {
            "dn": "root/ns-[addr]",
            "kind": "ns",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 7,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "7355d35a14ad3a0260b99b245d6ab6dc4873746ee484c32162ad9fdbdcd876e7": {
            "dn": "root/ns-[addr]",
            "kind": "ns",
            "config_kind": "props",
            "name": "app-consumption",
            "config": {
                "kind": "table",
                "id": "app-consumption",
                "title": "Application Consumption",
                "order": 8,
                "config": {
                    "headers": [
                        {
                            "id": "dn",
                            "label": "Application",
                            "kind": "shortcut"
                        },
                        "cpu",
                        "memory"
                    ],
                    "rows": []
                },
                "tooltip": "List of apps and resources they consume. Apps that tame most resources are on the top."
            }
        },
        "a657fb6207b3d7587c25379f61f6d778afefe355821d309c3be79b89dab3b934": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[gprod-addr-main-app]",
                "name": "gprod-addr-main-app",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "e5b4f08c122849b691ce54d31f8e7f476ff73a67e82f08185eaa52d2362cc2b6": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "With Service",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 2,
                    "Init Container Count": 0,
                    "Volumes": 3
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "3763472c1149f3eb88a6ec6c05852bb4623cb1faccff70b283f9569e418ebe10": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "f5f012a24cf8c852bb8a4f16daaa43df35d5c965a33dfa5080c602b22c3b6b20": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "21fd0ae325b59d6f24b3ab91fa8b8854883d1378bdb1b3bac0e63e8905d45839": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "e37fd8c6bd5cccfc8770a7538235a41a06ab4ee4c89f0f019fc2922576f6907b": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "98ceb8773abfba62b0b438d78411460d1ddfe5de6b535118c196850e427f17af": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "gprod-addr-main-app",
                        "namespace": "addr",
                        "selfLink": "/apis/apps/v1/namespaces/addr/deployments/gprod-addr-main-app",
                        "uid": "24e8c573-1092-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "2349",
                        "generation": 3,
                        "creationTimestamp": "2019-11-26T21:17:25Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "addr",
                            "deployment": "gprod",
                            "name": "gprod-addr-main-app",
                            "sector": "main",
                            "service": "app"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "name": "gprod-addr-main-app"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "berlioz_managed": "true",
                                    "cluster": "addr",
                                    "deployment": "gprod",
                                    "name": "gprod-addr-main-app",
                                    "sector": "main",
                                    "service": "app"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "google-cloud-key",
                                        "secret": {
                                            "secretName": "gprod-addr-main-app",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "gprod-addr-main-app-consumes",
                                        "configMap": {
                                            "name": "addr-gprod-addr-main-app-consumes",
                                            "defaultMode": 420
                                        }
                                    },
                                    {
                                        "name": "gprod-addr-main-app-consumesdatabase",
                                        "configMap": {
                                            "name": "addr-gprod-addr-main-app-consumesdatabase",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "gprod-addr-main-app",
                                        "image": "gcr.io/berlioz-demo-gprod/addr-main-app@sha256:b5e6317de1171f784784f65f8b563c46c069dd6b3093547a3ee4f3cfb2ddb7e1",
                                        "ports": [
                                            {
                                                "name": "default",
                                                "containerPort": 4000,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "BERLIOZ_TASK_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.uid"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_ADDRESS",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.podIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_INSTANCE_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMES_PATH",
                                                "value": "/etc/berlioz/consumes"
                                            },
                                            {
                                                "name": "BERLIOZ_AGENT_PATH",
                                                "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_ADDRESS",
                                                "value": "0.0.0.0"
                                            },
                                            {
                                                "name": "BERLIOZ_INFRA",
                                                "value": "k8s"
                                            },
                                            {
                                                "name": "BERLIOZ_REGION",
                                                "value": "us-west1"
                                            },
                                            {
                                                "name": "BERLIOZ_CLUSTER",
                                                "value": "addr"
                                            },
                                            {
                                                "name": "BERLIOZ_SECTOR",
                                                "value": "main"
                                            },
                                            {
                                                "name": "BERLIOZ_SERVICE",
                                                "value": "app"
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY_PREFIX",
                                                "value": "gprod-addr-main-app-"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_PORT_DEFAULT",
                                                "value": "4000"
                                            },
                                            {
                                                "name": "BERLIOZ_PROVIDED_PORT_DEFAULT",
                                                "value": "4000"
                                            },
                                            {
                                                "name": "GOOGLE_APPLICATION_CREDENTIALS",
                                                "value": "/var/secrets/google/service-key.json"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_HOST",
                                                "value": "gprod-sprt-main-dtrace-client"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_PORT",
                                                "value": "80"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_URL",
                                                "value": "http://gprod-sprt-main-dtrace-client:80"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "google-cloud-key",
                                                "mountPath": "/var/secrets/google"
                                            },
                                            {
                                                "name": "gprod-addr-main-app-consumes",
                                                "mountPath": "/etc/berlioz/consumes"
                                            },
                                            {
                                                "name": "gprod-addr-main-app-consumesdatabase",
                                                "mountPath": "/etc/berlioz/consumes/database"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    },
                                    {
                                        "name": "cloudsql-proxy-gprod-addr-uswest1c-main-book",
                                        "image": "gcr.io/cloudsql-docker/gce-proxy:1.11",
                                        "command": [
                                            "/cloud_sql_proxy",
                                            "-instances=berlioz-demo-gprod:us-west1:gprod-addr-uswest1c-main-book-imdtwdlfqd=tcp:3306",
                                            "-credential_file=/var/secrets/google/service-key.json"
                                        ],
                                        "resources": {},
                                        "volumeMounts": [
                                            {
                                                "name": "google-cloud-key",
                                                "readOnly": true,
                                                "mountPath": "/var/secrets/google"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent",
                                        "securityContext": {
                                            "runAsUser": 2,
                                            "allowPrivilegeEscalation": false
                                        }
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "priorityClassName": "berlioz-normal-priority"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:17:31Z",
                                "lastTransitionTime": "2019-11-26T21:17:31Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:17:31Z",
                                "lastTransitionTime": "2019-11-26T21:17:25Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"gprod-addr-main-app-587d87bd84\" has successfully progressed."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "f3a3da080e35ced9ab1bdb1cba755026128d5b8bc1ddce1090e1d62712604cb9": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[gprod-addr-main-web]",
                "name": "gprod-addr-main-web",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "4930a021d24a81b845edda4e4a6b56605eb221e8d2d6f1648cddaa9abb85da39": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "With Ingress",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 1,
                    "Init Container Count": 0,
                    "Volumes": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "a50da715c73b0b1fca2c7ad9c6e843b67921698e2de1aaa845ae7b2b6304ab1f": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "7c64e2dc4ba4a46ba694abecb7ef1698b39b8083026896377e3067ebfde761bf": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "38a9dea382e28623fb64ed9fec2f70486c94c853e07e1743a9dde9a99b297c4e": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "5c9f79ceeb488a716d703b1beaa352149ae0490277e14a6a7aa60f270b40ad59": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "7e31b81f002e97476c85fbc1949625a73255b2b62cafb9c257bc92fb6e6aff2b": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "gprod-addr-main-web",
                        "namespace": "addr",
                        "selfLink": "/apis/apps/v1/namespaces/addr/deployments/gprod-addr-main-web",
                        "uid": "87f769eb-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "2345",
                        "generation": 6,
                        "creationTimestamp": "2019-11-26T21:13:02Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "addr",
                            "deployment": "gprod",
                            "name": "gprod-addr-main-web",
                            "sector": "main",
                            "service": "web"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "2"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "name": "gprod-addr-main-web"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "berlioz_managed": "true",
                                    "cluster": "addr",
                                    "deployment": "gprod",
                                    "name": "gprod-addr-main-web",
                                    "sector": "main",
                                    "service": "web"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "google-cloud-key",
                                        "secret": {
                                            "secretName": "gprod-addr-main-web",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "gprod-addr-main-web",
                                        "image": "gcr.io/berlioz-demo-gprod/addr-main-web@sha256:f1d780f19ebcd5564c54b2e4eff5017ce59683b0725909ac3c9401f0def4bb02",
                                        "ports": [
                                            {
                                                "name": "default",
                                                "containerPort": 3000,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "BERLIOZ_TASK_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.uid"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_ADDRESS",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.podIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_INSTANCE_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMES_PATH",
                                                "value": "/etc/berlioz/consumes"
                                            },
                                            {
                                                "name": "BERLIOZ_AGENT_PATH",
                                                "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_ADDRESS",
                                                "value": "0.0.0.0"
                                            },
                                            {
                                                "name": "BERLIOZ_INFRA",
                                                "value": "k8s"
                                            },
                                            {
                                                "name": "BERLIOZ_REGION",
                                                "value": "us-west1"
                                            },
                                            {
                                                "name": "BERLIOZ_CLUSTER",
                                                "value": "addr"
                                            },
                                            {
                                                "name": "BERLIOZ_SECTOR",
                                                "value": "main"
                                            },
                                            {
                                                "name": "BERLIOZ_SERVICE",
                                                "value": "web"
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY_PREFIX",
                                                "value": "gprod-addr-main-web-"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_PORT_DEFAULT",
                                                "value": "3000"
                                            },
                                            {
                                                "name": "BERLIOZ_PROVIDED_PORT_DEFAULT",
                                                "value": "3000"
                                            },
                                            {
                                                "name": "GOOGLE_APPLICATION_CREDENTIALS",
                                                "value": "/var/secrets/google/service-key.json"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_SERVICE_APP_HOST",
                                                "value": "gprod-addr-main-app-default"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_SERVICE_APP_PORT",
                                                "value": "80"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_SERVICE_APP_URL",
                                                "value": "http://gprod-addr-main-app-default:80"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_HOST",
                                                "value": "gprod-sprt-main-dtrace-client"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_PORT",
                                                "value": "80"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_URL",
                                                "value": "http://gprod-sprt-main-dtrace-client:80"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "google-cloud-key",
                                                "mountPath": "/var/secrets/google"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "priorityClassName": "berlioz-normal-priority"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 6,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:13:10Z",
                                "lastTransitionTime": "2019-11-26T21:13:10Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:14:56Z",
                                "lastTransitionTime": "2019-11-26T21:13:02Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"gprod-addr-main-web-845964b84c\" has successfully progressed."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "98668c63593bce62dc9d55105c8f59b17ecf6b276559fb408c300d5242922936": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[gprod-berlioz-main-ctlr]",
                "name": "gprod-berlioz-main-ctlr",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "fc786912a7f6d5083c13a856e37618d4a21093d0ad166de358f01da12981c853": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "No",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 1,
                    "Init Container Count": 0,
                    "Volumes": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "008606855b69a8aeb081dae28f71860be5a09824b4b9ecdf6406c5d272d8616f": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "f7a72ec592319cb1d339e7da8aee77137e74f18bc2e64a6c15e646f422226dc6": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "ca03ee1be861146c2aaef27f607b72bd5a4b3a000f6e5ec8d2dac39805a2169b": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "3614964c81dc9a7a7d5daedc44a84fcbbc80ca9e41423125213187fe820bb6c2": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "a389037a66b1dcd1eea6f8ad6240e4489949f37f8c4a0a712531a9d522cf5312": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "gprod-berlioz-main-ctlr",
                        "namespace": "berlioz",
                        "selfLink": "/apis/apps/v1/namespaces/berlioz/deployments/gprod-berlioz-main-ctlr",
                        "uid": "63e75940-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1088",
                        "generation": 3,
                        "creationTimestamp": "2019-11-26T21:12:02Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "berlioz",
                            "deployment": "gprod",
                            "name": "gprod-berlioz-main-ctlr",
                            "sector": "main",
                            "service": "ctlr"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "name": "gprod-berlioz-main-ctlr"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "berlioz_managed": "true",
                                    "cluster": "berlioz",
                                    "deployment": "gprod",
                                    "name": "gprod-berlioz-main-ctlr",
                                    "sector": "main",
                                    "service": "ctlr"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "google-cloud-key",
                                        "secret": {
                                            "secretName": "gprod-berlioz-main-ctlr",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "gprod-berlioz-main-ctlr",
                                        "image": "berliozcloud/k8s-controller",
                                        "env": [
                                            {
                                                "name": "BERLIOZ_TASK_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.uid"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_ADDRESS",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.podIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_INSTANCE_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMES_PATH",
                                                "value": "/etc/berlioz/consumes"
                                            },
                                            {
                                                "name": "BERLIOZ_AGENT_PATH",
                                                "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_ADDRESS",
                                                "value": "0.0.0.0"
                                            },
                                            {
                                                "name": "BERLIOZ_INFRA",
                                                "value": "k8s"
                                            },
                                            {
                                                "name": "BERLIOZ_REGION",
                                                "value": "us-west1"
                                            },
                                            {
                                                "name": "BERLIOZ_CLUSTER",
                                                "value": "berlioz"
                                            },
                                            {
                                                "name": "BERLIOZ_SECTOR",
                                                "value": "main"
                                            },
                                            {
                                                "name": "BERLIOZ_SERVICE",
                                                "value": "ctlr"
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY_PREFIX",
                                                "value": "gprod-berlioz-main-ctlr-"
                                            },
                                            {
                                                "name": "GOOGLE_APPLICATION_CREDENTIALS",
                                                "value": "/var/secrets/google/service-key.json"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "google-cloud-key",
                                                "mountPath": "/var/secrets/google"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "Always"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "gprod-berlioz-main-ctlr",
                                "serviceAccount": "gprod-berlioz-main-ctlr",
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "priorityClassName": "berlioz-normal-priority"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:12:23Z",
                                "lastTransitionTime": "2019-11-26T21:12:23Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:12:23Z",
                                "lastTransitionTime": "2019-11-26T21:12:02Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"gprod-berlioz-main-ctlr-6664d965cf\" has successfully progressed."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "b502b638c5e98b64500d8106ea91d1c48dc27a2e899b7ce3cea4ea7ef9266fc1": {
            "dn": "root/ns-[sprt]",
            "kind": "ns",
            "config_kind": "node",
            "config": {
                "rn": "ns-[sprt]",
                "name": "sprt",
                "kind": "ns",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b5463e9798caf8bb3117e64c87646cb18dac08c220cb4813d84876d3d6b3a03e": {
            "dn": "root/ns-[sprt]",
            "kind": "ns",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Applications": 3,
                    "Ingresses": 0,
                    "Secrets": 3
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "856606dc339f822d8d43a8fc711d60d34bcd3410847469c936504930e566295c": {
            "dn": "root/ns-[sprt]",
            "kind": "ns",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 6,
                "config": {
                    "cpu request": "30.00%",
                    "memory request": "950 MB"
                },
                "tooltip": "Resource usage for all pod replicas within the namespace."
            }
        },
        "1f88e8f2641ea44fc6748b083f9b3603c1f7fd371b67674f7860a35ebc36dbd0": {
            "dn": "root/ns-[sprt]",
            "kind": "ns",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 7,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "7517fd1d0f2696ad5ee3e161d9ea9bb1b94ff7926f89f193d2674601808e0459": {
            "dn": "root/ns-[sprt]",
            "kind": "ns",
            "config_kind": "props",
            "name": "app-consumption",
            "config": {
                "kind": "table",
                "id": "app-consumption",
                "title": "Application Consumption",
                "order": 8,
                "config": {
                    "headers": [
                        {
                            "id": "dn",
                            "label": "Application",
                            "kind": "shortcut"
                        },
                        "cpu",
                        "memory"
                    ],
                    "rows": []
                },
                "tooltip": "List of apps and resources they consume. Apps that tame most resources are on the top."
            }
        },
        "2a0d52367cebe112e5fc794a462ff56bcbfbbe7da46ec13e45b18d2bab72bd0b": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[gprod-sprt-main-dtrace]",
                "name": "gprod-sprt-main-dtrace",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "f605f46008cb0eb016d3d9de5a1aa69e0cba7a3b04c568b577fd5d914ea68a29": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "With Service",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 1,
                    "Init Container Count": 0,
                    "Volumes": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "def172c1c9a119e7b32232b99ca6a6929b54cb88965a6b49d071709cf137af88": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "300 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "65f19c932808c22793844304005034f77d800080fb09925a3756b76392b60539": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "300 MB"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "6b94dd9305fbc61e7707711fd78020cd9c62fbf1f18522f7668f30a76a3a0ba4": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "5a57fb11847e6b50b3c442f65f40bcccc37ac99afae7e0f66f4b5cc6a03f8a5d": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "da764f0d15067778a692576282a9c23ae42d7e3ad68ef508209bfa0699bdfeca": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "gprod-sprt-main-dtrace",
                        "namespace": "sprt",
                        "selfLink": "/apis/apps/v1/namespaces/sprt/deployments/gprod-sprt-main-dtrace",
                        "uid": "6ed163c0-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1884",
                        "generation": 3,
                        "creationTimestamp": "2019-11-26T21:12:20Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "name": "gprod-sprt-main-dtrace",
                            "sector": "main",
                            "service": "dtrace"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "name": "gprod-sprt-main-dtrace"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "berlioz_managed": "true",
                                    "cluster": "sprt",
                                    "deployment": "gprod",
                                    "name": "gprod-sprt-main-dtrace",
                                    "sector": "main",
                                    "service": "dtrace"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "google-cloud-key",
                                        "secret": {
                                            "secretName": "gprod-sprt-main-dtrace",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "gprod-sprt-main-dtrace",
                                        "image": "jaegertracing/all-in-one",
                                        "ports": [
                                            {
                                                "name": "client",
                                                "containerPort": 9411,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "name": "web",
                                                "containerPort": 16686,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "BERLIOZ_TASK_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.uid"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_ADDRESS",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.podIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_INSTANCE_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                                "value": "9411"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMES_PATH",
                                                "value": "/etc/berlioz/consumes"
                                            },
                                            {
                                                "name": "BERLIOZ_AGENT_PATH",
                                                "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_ADDRESS",
                                                "value": "0.0.0.0"
                                            },
                                            {
                                                "name": "BERLIOZ_INFRA",
                                                "value": "k8s"
                                            },
                                            {
                                                "name": "BERLIOZ_REGION",
                                                "value": "us-west1"
                                            },
                                            {
                                                "name": "BERLIOZ_CLUSTER",
                                                "value": "sprt"
                                            },
                                            {
                                                "name": "BERLIOZ_SECTOR",
                                                "value": "main"
                                            },
                                            {
                                                "name": "BERLIOZ_SERVICE",
                                                "value": "dtrace"
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY_PREFIX",
                                                "value": "gprod-sprt-main-dtrace-"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_PORT_CLIENT",
                                                "value": "9411"
                                            },
                                            {
                                                "name": "BERLIOZ_PROVIDED_PORT_CLIENT",
                                                "value": "9411"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_PORT_WEB",
                                                "value": "16686"
                                            },
                                            {
                                                "name": "BERLIOZ_PROVIDED_PORT_WEB",
                                                "value": "16686"
                                            },
                                            {
                                                "name": "GOOGLE_APPLICATION_CREDENTIALS",
                                                "value": "/var/secrets/google/service-key.json"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "300Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "google-cloud-key",
                                                "mountPath": "/var/secrets/google"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "Always"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "priorityClassName": "berlioz-normal-priority"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:12:27Z",
                                "lastTransitionTime": "2019-11-26T21:12:27Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:12:27Z",
                                "lastTransitionTime": "2019-11-26T21:12:20Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"gprod-sprt-main-dtrace-5f66947d67\" has successfully progressed."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "cd22c3aeffaba5c45d2e85432690ac07cfd72c5fe4da91ab53e59ed7282902a7": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[gprod-sprt-main-grfna]",
                "name": "gprod-sprt-main-grfna",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "77c153221c43fbc17e70839c422f615e18a190576365fd70a264a42e42169289": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "With Service",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 1,
                    "Init Container Count": 0,
                    "Volumes": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "4ad37a3b9dac8073d5e1638c4b0e4837a7ea4d1114d57e343755b88d022eabaf": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "250 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "b24cfda270c9590b69997200646a3a6dc3afeaf865256c7086ef7d1ff29bbea4": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "250 MB"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "4818514eb55b931a4c7f0047458ac31cdaf6c09ac31b9aebcfaf2ee6b7f5ee64": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "ac5e0fe681d14b0530d59f41af5ccc829adbfba9ebb9dabf7ef8f4496639ad2c": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "9f56c17cbde30ea1bfbe0ece64cef5a97012acc9defdd818f84a105df22cd2d7": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "gprod-sprt-main-grfna",
                        "namespace": "sprt",
                        "selfLink": "/apis/apps/v1/namespaces/sprt/deployments/gprod-sprt-main-grfna",
                        "uid": "6f0ca78d-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1868",
                        "generation": 3,
                        "creationTimestamp": "2019-11-26T21:12:20Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "name": "gprod-sprt-main-grfna",
                            "sector": "main",
                            "service": "grfna"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "2"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "name": "gprod-sprt-main-grfna"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "berlioz_managed": "true",
                                    "cluster": "sprt",
                                    "deployment": "gprod",
                                    "name": "gprod-sprt-main-grfna",
                                    "sector": "main",
                                    "service": "grfna"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "google-cloud-key",
                                        "secret": {
                                            "secretName": "gprod-sprt-main-grfna",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "gprod-sprt-main-grfna",
                                        "image": "berliozcloud/grafana",
                                        "ports": [
                                            {
                                                "name": "default",
                                                "containerPort": 3000,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "BERLIOZ_TASK_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.uid"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_ADDRESS",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.podIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_INSTANCE_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMES_PATH",
                                                "value": "/etc/berlioz/consumes"
                                            },
                                            {
                                                "name": "BERLIOZ_AGENT_PATH",
                                                "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_ADDRESS",
                                                "value": "0.0.0.0"
                                            },
                                            {
                                                "name": "BERLIOZ_INFRA",
                                                "value": "k8s"
                                            },
                                            {
                                                "name": "BERLIOZ_REGION",
                                                "value": "us-west1"
                                            },
                                            {
                                                "name": "BERLIOZ_CLUSTER",
                                                "value": "sprt"
                                            },
                                            {
                                                "name": "BERLIOZ_SECTOR",
                                                "value": "main"
                                            },
                                            {
                                                "name": "BERLIOZ_SERVICE",
                                                "value": "grfna"
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY_PREFIX",
                                                "value": "gprod-sprt-main-grfna-"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_PORT_DEFAULT",
                                                "value": "3000"
                                            },
                                            {
                                                "name": "BERLIOZ_PROVIDED_PORT_DEFAULT",
                                                "value": "3000"
                                            },
                                            {
                                                "name": "GOOGLE_APPLICATION_CREDENTIALS",
                                                "value": "/var/secrets/google/service-key.json"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_SERVICE_PRMTS_SERVER_HOST",
                                                "value": "gprod-sprt-main-prmts-server"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_SERVICE_PRMTS_SERVER_PORT",
                                                "value": "80"
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMED_SERVICE_PRMTS_SERVER_URL",
                                                "value": "http://gprod-sprt-main-prmts-server:80"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "250Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "google-cloud-key",
                                                "mountPath": "/var/secrets/google"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "Always"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "priorityClassName": "berlioz-normal-priority"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:12:41Z",
                                "lastTransitionTime": "2019-11-26T21:12:41Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:15:51Z",
                                "lastTransitionTime": "2019-11-26T21:12:21Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"gprod-sprt-main-grfna-5fb5786d56\" has successfully progressed."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "b2631f37c4f563c3ae8c68299c3de35d23aca1e922bd41320b93dcfc52ce82e6": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[gprod-sprt-main-prmts]",
                "name": "gprod-sprt-main-prmts",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "e087b376101c00e07ca09cbe4f0789013bd54ed2a75fa357d0bdee74911d8180": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "With Service",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 1,
                    "Init Container Count": 0,
                    "Volumes": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "73106a662fb8def659710857be48a2454034a095f051650f4ec227da49ead919": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "400 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "0b5d5843594229cbd205e381e55f87128bb70a5d48c8495d11b2bc5f3bf7b4ed": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "400 MB"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "3593bf3fbca0153de58ab4a4cacb80a6f3d008fdb5e73ac39f275a764daecf27": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "8ce432f5abc77d9468f562a29e442be58921fd7fdcabe4e527d863578f08c959": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "c3b5a5fd4b58986a7adcece036f109fee3f9c249e11a76040cd2288401c865ce": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "gprod-sprt-main-prmts",
                        "namespace": "sprt",
                        "selfLink": "/apis/apps/v1/namespaces/sprt/deployments/gprod-sprt-main-prmts",
                        "uid": "6ece675f-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1869",
                        "generation": 3,
                        "creationTimestamp": "2019-11-26T21:12:20Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "name": "gprod-sprt-main-prmts",
                            "sector": "main",
                            "service": "prmts"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "name": "gprod-sprt-main-prmts"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "berlioz_managed": "true",
                                    "cluster": "sprt",
                                    "deployment": "gprod",
                                    "name": "gprod-sprt-main-prmts",
                                    "sector": "main",
                                    "service": "prmts"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "google-cloud-key",
                                        "secret": {
                                            "secretName": "gprod-sprt-main-prmts",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "gprod-sprt-main-prmts",
                                        "image": "berliozcloud/prometheus",
                                        "ports": [
                                            {
                                                "name": "server",
                                                "containerPort": 9090,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "name": "push",
                                                "containerPort": 9091,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "BERLIOZ_TASK_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.uid"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_ADDRESS",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.podIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_INSTANCE_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "BERLIOZ_CONSUMES_PATH",
                                                "value": "/etc/berlioz/consumes"
                                            },
                                            {
                                                "name": "BERLIOZ_AGENT_PATH",
                                                "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_ADDRESS",
                                                "value": "0.0.0.0"
                                            },
                                            {
                                                "name": "BERLIOZ_INFRA",
                                                "value": "k8s"
                                            },
                                            {
                                                "name": "BERLIOZ_REGION",
                                                "value": "us-west1"
                                            },
                                            {
                                                "name": "BERLIOZ_CLUSTER",
                                                "value": "sprt"
                                            },
                                            {
                                                "name": "BERLIOZ_SECTOR",
                                                "value": "main"
                                            },
                                            {
                                                "name": "BERLIOZ_SERVICE",
                                                "value": "prmts"
                                            },
                                            {
                                                "name": "BERLIOZ_IDENTITY_PREFIX",
                                                "value": "gprod-sprt-main-prmts-"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_PORT_SERVER",
                                                "value": "9090"
                                            },
                                            {
                                                "name": "BERLIOZ_PROVIDED_PORT_SERVER",
                                                "value": "9090"
                                            },
                                            {
                                                "name": "BERLIOZ_LISTEN_PORT_PUSH",
                                                "value": "9091"
                                            },
                                            {
                                                "name": "BERLIOZ_PROVIDED_PORT_PUSH",
                                                "value": "9091"
                                            },
                                            {
                                                "name": "GOOGLE_APPLICATION_CREDENTIALS",
                                                "value": "/var/secrets/google/service-key.json"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "400Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "google-cloud-key",
                                                "mountPath": "/var/secrets/google"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "Always"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "priorityClassName": "berlioz-normal-priority"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 3,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:12:48Z",
                                "lastTransitionTime": "2019-11-26T21:12:48Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:12:48Z",
                                "lastTransitionTime": "2019-11-26T21:12:20Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"gprod-sprt-main-prmts-65665cc8d\" has successfully progressed."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "092a19646f83b2affd3d1ac976b05ba1b1c92bbd631bf4f494796430a52ed3f6": {
            "dn": "root/ns-[kube-system]/app-[heapster]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[heapster]",
                "name": "heapster",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "a0e07ab0f60540dced3ea4f7fd17b3b38b0cef969783d0300f99f20b8c0cfe25": {
            "dn": "root/ns-[kube-system]/app-[heapster]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "With Service",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 3,
                    "Init Container Count": 0,
                    "Volumes": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "df29a6c06445af8a5781bc60669e7b92a459538ae0630858664d915e4926146e": {
            "dn": "root/ns-[kube-system]/app-[heapster]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "5.00%",
                    "memory request": "90.78 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "67fecf23c0387a93caef2b56eff98b19e51c31b4e1b13edeaefeed96b65fa5c8": {
            "dn": "root/ns-[kube-system]/app-[heapster]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "5.00%",
                    "memory request": "90.78 MB"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "4269aabf95413d2da41076e364274168c8cbdebf656977fc285b435c698ff443": {
            "dn": "root/ns-[kube-system]/app-[heapster]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "c2fb0b67dc90023f5262bf142bad2dc52273ac29dfe19ed2b91045d960cae7a5": {
            "dn": "root/ns-[kube-system]/app-[heapster]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "c5d2f2706aeec826d38f99ff8913d038bf424e5b0c8a40a9b947a10f5649d303": {
            "dn": "root/ns-[kube-system]/app-[heapster]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "heapster",
                        "namespace": "kube-system",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/heapster",
                        "uid": "43b4600c-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "852",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:11:08Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "heapster",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v1.7.0"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"heapster\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v1.7.0\"},\"name\":\"heapster\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"k8s-app\":\"heapster\",\"version\":\"v1.7.0\"}},\"template\":{\"metadata\":{\"annotations\":{\"scheduler.alpha.kubernetes.io/critical-pod\":\"\",\"seccomp.security.alpha.kubernetes.io/pod\":\"docker/default\"},\"labels\":{\"k8s-app\":\"heapster\",\"version\":\"v1.7.0\"}},\"spec\":{\"containers\":[{\"command\":[\"/heapster\",\"--source=kubernetes.summary_api:?host_id_annotation=container.googleapis.com/instance_id\",\"--sink=stackdriver:?cluster_name=gprod-uswest1c\\u0026use_old_resources=true\\u0026use_new_resources=false\\u0026min_interval_sec=100\\u0026batch_export_timeout_sec=110\\u0026cluster_location=us-west1-c\"],\"image\":\"gke.gcr.io/heapster:v1.7.0\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8082,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":180,\"timeoutSeconds\":5},\"name\":\"heapster\"},{\"command\":[\"/monitor\",\"--source=heapster:http://localhost:8082?whitelisted=stackdriver_requests_count,stackdriver_timeseries_count\",\"--stackdriver-prefix=container.googleapis.com/internal/addons\",\"--api-override=https://monitoring.googleapis.com/\",\"--pod-id=$(POD_NAME)\",\"--namespace-id=$(POD_NAMESPACE)\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"k8s.gcr.io/prometheus-to-sd:v0.5.0\",\"name\":\"prom-to-sd\"},{\"command\":[\"/pod_nanny\",\"--config-dir=/etc/config\",\"--cpu=10m\",\"--extra-cpu=0.5m\",\"--memory=100Mi\",\"--extra-memory=4Mi\",\"--threshold=5\",\"--deployment=heapster-v1.7.0\",\"--container=heapster\",\"--poll-period=300000\",\"--estimator=exponential\",\"--minClusterSize=5\"],\"env\":[{\"name\":\"MY_POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"MY_POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"k8s.gcr.io/addon-resizer:1.8.3\",\"name\":\"heapster-nanny\",\"resources\":{\"limits\":{\"cpu\":\"50m\",\"memory\":\"92960Ki\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"92960Ki\"}},\"volumeMounts\":[{\"mountPath\":\"/etc/config\",\"name\":\"heapster-config-volume\"}]}],\"priorityClassName\":\"system-cluster-critical\",\"securityContext\":{\"fsGroup\":65534,\"supplementalGroups\":[65534]},\"serviceAccountName\":\"heapster\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"configMap\":{\"name\":\"heapster-config\"},\"name\":\"heapster-config-volume\"}]}}}}\n"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "heapster",
                                "version": "v1.7.0"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "k8s-app": "heapster",
                                    "version": "v1.7.0"
                                },
                                "annotations": {
                                    "scheduler.alpha.kubernetes.io/critical-pod": "",
                                    "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "heapster-config-volume",
                                        "configMap": {
                                            "name": "heapster-config",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "heapster",
                                        "image": "gke.gcr.io/heapster:v1.7.0",
                                        "command": [
                                            "/heapster",
                                            "--source=kubernetes.summary_api:?host_id_annotation=container.googleapis.com/instance_id",
                                            "--sink=stackdriver:?cluster_name=gprod-uswest1c&use_old_resources=true&use_new_resources=false&min_interval_sec=100&batch_export_timeout_sec=110&cluster_location=us-west1-c"
                                        ],
                                        "resources": {},
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": 8082,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 180,
                                            "timeoutSeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    },
                                    {
                                        "name": "prom-to-sd",
                                        "image": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                                        "command": [
                                            "/monitor",
                                            "--source=heapster:http://localhost:8082?whitelisted=stackdriver_requests_count,stackdriver_timeseries_count",
                                            "--stackdriver-prefix=container.googleapis.com/internal/addons",
                                            "--api-override=https://monitoring.googleapis.com/",
                                            "--pod-id=$(POD_NAME)",
                                            "--namespace-id=$(POD_NAMESPACE)"
                                        ],
                                        "env": [
                                            {
                                                "name": "POD_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "POD_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    },
                                    {
                                        "name": "heapster-nanny",
                                        "image": "k8s.gcr.io/addon-resizer:1.8.3",
                                        "command": [
                                            "/pod_nanny",
                                            "--config-dir=/etc/config",
                                            "--cpu=10m",
                                            "--extra-cpu=0.5m",
                                            "--memory=100Mi",
                                            "--extra-memory=4Mi",
                                            "--threshold=5",
                                            "--deployment=heapster-v1.7.0",
                                            "--container=heapster",
                                            "--poll-period=300000",
                                            "--estimator=exponential",
                                            "--minClusterSize=5"
                                        ],
                                        "env": [
                                            {
                                                "name": "MY_POD_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MY_POD_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "50m",
                                                "memory": "92960Ki"
                                            },
                                            "requests": {
                                                "cpu": "50m",
                                                "memory": "92960Ki"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "heapster-config-volume",
                                                "mountPath": "/etc/config"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "heapster",
                                "serviceAccount": "heapster",
                                "securityContext": {
                                    "supplementalGroups": [
                                        65534
                                    ],
                                    "fsGroup": 65534
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "CriticalAddonsOnly",
                                        "operator": "Exists"
                                    }
                                ],
                                "priorityClassName": "system-cluster-critical"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": 1,
                                "maxSurge": 1
                            }
                        },
                        "revisionHistoryLimit": 2147483647,
                        "progressDeadlineSeconds": 2147483647
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:11:08Z",
                                "lastTransitionTime": "2019-11-26T21:11:08Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "48d4813f886822c8fca29e92256480dcf6a72d1fc4f7d33479bc0155f17d1d90": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[kube-dns-autoscaler]",
                "name": "kube-dns-autoscaler",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "ada45933e9d5be4bc895b81703e5c89a3fd24415d5f1198d5ac364ec77c392f7": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "No",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 1,
                    "Init Container Count": 0,
                    "Volumes": 0
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "9610eb7afe04a985fc9727b4df80eece7cd83142edc2804a2b812bca2a814a6c": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "2.00%",
                    "memory request": "10 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "b1b50548ee80380e151e7da2cbb5c612bd6243a8cb055086491f3ceb012398b5": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "2.00%",
                    "memory request": "10 MB"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "914f21076db6e8b7e4811bf323197fe19845ff42fafa1a15585456cc3297bd7a": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "86c1ffd939604b1e7c4f98a3ffb2c66cb6fc7f2455335aae9f04cf4fd7fb6f1e": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "2bbaf6966963e3f5d824691f6e5d979823c90ca1814fc7eb1d01fd35a0852efb": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "kube-dns-autoscaler",
                        "namespace": "kube-system",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/kube-dns-autoscaler",
                        "uid": "4349ee58-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "680",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:11:07Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "kube-dns-autoscaler",
                            "kubernetes.io/cluster-service": "true"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns-autoscaler\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"kube-dns-autoscaler\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns-autoscaler\"}},\"template\":{\"metadata\":{\"annotations\":{\"scheduler.alpha.kubernetes.io/critical-pod\":\"\",\"seccomp.security.alpha.kubernetes.io/pod\":\"docker/default\"},\"labels\":{\"k8s-app\":\"kube-dns-autoscaler\"}},\"spec\":{\"containers\":[{\"command\":[\"/cluster-proportional-autoscaler\",\"--namespace=kube-system\",\"--configmap=kube-dns-autoscaler\",\"--target=Deployment/kube-dns\",\"--default-params={\\\"linear\\\":{\\\"coresPerReplica\\\":256,\\\"nodesPerReplica\\\":16,\\\"preventSinglePointFailure\\\":true}}\",\"--logtostderr=true\",\"--v=2\"],\"image\":\"k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.3.0\",\"name\":\"autoscaler\",\"resources\":{\"requests\":{\"cpu\":\"20m\",\"memory\":\"10Mi\"}}}],\"priorityClassName\":\"system-cluster-critical\",\"securityContext\":{\"fsGroup\":65534,\"supplementalGroups\":[65534]},\"serviceAccountName\":\"kube-dns-autoscaler\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}]}}}}\n"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "kube-dns-autoscaler"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "k8s-app": "kube-dns-autoscaler"
                                },
                                "annotations": {
                                    "scheduler.alpha.kubernetes.io/critical-pod": "",
                                    "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "name": "autoscaler",
                                        "image": "k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.3.0",
                                        "command": [
                                            "/cluster-proportional-autoscaler",
                                            "--namespace=kube-system",
                                            "--configmap=kube-dns-autoscaler",
                                            "--target=Deployment/kube-dns",
                                            "--default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}",
                                            "--logtostderr=true",
                                            "--v=2"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "20m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "kube-dns-autoscaler",
                                "serviceAccount": "kube-dns-autoscaler",
                                "securityContext": {
                                    "supplementalGroups": [
                                        65534
                                    ],
                                    "fsGroup": 65534
                                },
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "CriticalAddonsOnly",
                                        "operator": "Exists"
                                    }
                                ],
                                "priorityClassName": "system-cluster-critical"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:11:33Z",
                                "lastTransitionTime": "2019-11-26T21:11:33Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:11:33Z",
                                "lastTransitionTime": "2019-11-26T21:11:07Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"kube-dns-autoscaler-bb58c6784\" has successfully progressed."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "36136d2e9667a2b64074b9773f9f660400fd22d1ebeea8219c3e4143ff682419": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[kube-dns]",
                "name": "kube-dns",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "1835d38874523ca8a8ce782c9268ff09772a64b7e09800102c29aa3c44d424d6": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "With Service",
                    "Launcher": "Deployment",
                    "Replicas": 2,
                    "Container Count": 4,
                    "Init Container Count": 0,
                    "Volumes": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "e24e69bef9d47b3395ccac184945fa4b8b418bdc8d47b091f51c063224abb003": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "26.00%",
                    "memory request": "110 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "bc199c9901029ad63295367d846071ba646204e58768fd9821ff0a4047c79ceb": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "52.00%",
                    "memory request": "220 MB"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "8de6d1655c87fe4b0c9d1c1c58c008bcf460a34e3626977d8992f166afd0f771": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "e3b3c7ccff44da805f5d5b972708c0671d1bf1ee3b717dee7d47bb728751122a": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "47ba488ff5cae3681ec50fb51fc2d408da0fb94467d36c1ab83090f865ac698b": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "kube-dns",
                        "namespace": "kube-system",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/kube-dns",
                        "uid": "4339e6aa-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "903",
                        "generation": 2,
                        "creationTimestamp": "2019-11-26T21:11:07Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "kube-dns",
                            "kubernetes.io/cluster-service": "true"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"10%\",\"maxUnavailable\":0}},\"template\":{\"metadata\":{\"annotations\":{\"scheduler.alpha.kubernetes.io/critical-pod\":\"\",\"seccomp.security.alpha.kubernetes.io/pod\":\"docker/default\"},\"labels\":{\"k8s-app\":\"kube-dns\"}},\"spec\":{\"containers\":[{\"args\":[\"--domain=cluster.local.\",\"--dns-port=10053\",\"--config-dir=/kube-dns-config\",\"--v=2\"],\"env\":[{\"name\":\"PROMETHEUS_PORT\",\"value\":\"10055\"}],\"image\":\"k8s.gcr.io/k8s-dns-kube-dns-amd64:1.15.4\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthcheck/kubedns\",\"port\":10054,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"kubedns\",\"ports\":[{\"containerPort\":10053,\"name\":\"dns-local\",\"protocol\":\"UDP\"},{\"containerPort\":10053,\"name\":\"dns-tcp-local\",\"protocol\":\"TCP\"},{\"containerPort\":10055,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readiness\",\"port\":8081,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":3,\"timeoutSeconds\":5},\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/kube-dns-config\",\"name\":\"kube-dns-config\"}]},{\"args\":[\"-v=2\",\"-logtostderr\",\"-configDir=/etc/k8s/dns/dnsmasq-nanny\",\"-restartDnsmasq=true\",\"--\",\"-k\",\"--cache-size=1000\",\"--no-negcache\",\"--log-facility=-\",\"--server=/cluster.local/127.0.0.1#10053\",\"--server=/in-addr.arpa/127.0.0.1#10053\",\"--server=/ip6.arpa/127.0.0.1#10053\"],\"image\":\"k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.15.4\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthcheck/dnsmasq\",\"port\":10054,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"dnsmasq\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"}],\"resources\":{\"requests\":{\"cpu\":\"150m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/etc/k8s/dns/dnsmasq-nanny\",\"name\":\"kube-dns-config\"}]},{\"args\":[\"--v=2\",\"--logtostderr\",\"--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV\",\"--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV\"],\"image\":\"k8s.gcr.io/k8s-dns-sidecar-amd64:1.15.4\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/metrics\",\"port\":10054,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"sidecar\",\"ports\":[{\"containerPort\":10054,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"resources\":{\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}}},{\"command\":[\"/monitor\",\"--source=kubedns:http://localhost:10054?whitelisted=probe_kubedns_latency_ms,probe_kubedns_errors,dnsmasq_misses,dnsmasq_hits\",\"--stackdriver-prefix=container.googleapis.com/internal/addons\",\"--api-override=https://monitoring.googleapis.com/\",\"--pod-id=$(POD_NAME)\",\"--namespace-id=$(POD_NAMESPACE)\",\"--v=2\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"k8s.gcr.io/prometheus-to-sd:v0.4.2\",\"name\":\"prometheus-to-sd\"}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"kube-dns\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"configMap\":{\"name\":\"kube-dns\",\"optional\":true},\"name\":\"kube-dns-config\"}]}}}}\n"
                        }
                    },
                    "spec": {
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "kube-dns"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "k8s-app": "kube-dns"
                                },
                                "annotations": {
                                    "scheduler.alpha.kubernetes.io/critical-pod": "",
                                    "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "kube-dns-config",
                                        "configMap": {
                                            "name": "kube-dns",
                                            "defaultMode": 420,
                                            "optional": true
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "kubedns",
                                        "image": "k8s.gcr.io/k8s-dns-kube-dns-amd64:1.15.4",
                                        "args": [
                                            "--domain=cluster.local.",
                                            "--dns-port=10053",
                                            "--config-dir=/kube-dns-config",
                                            "--v=2"
                                        ],
                                        "ports": [
                                            {
                                                "name": "dns-local",
                                                "containerPort": 10053,
                                                "protocol": "UDP"
                                            },
                                            {
                                                "name": "dns-tcp-local",
                                                "containerPort": 10053,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "name": "metrics",
                                                "containerPort": 10055,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "PROMETHEUS_PORT",
                                                "value": "10055"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "memory": "170Mi"
                                            },
                                            "requests": {
                                                "cpu": "100m",
                                                "memory": "70Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "kube-dns-config",
                                                "mountPath": "/kube-dns-config"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/healthcheck/kubedns",
                                                "port": 10054,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 60,
                                            "timeoutSeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 5
                                        },
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/readiness",
                                                "port": 8081,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 3,
                                            "timeoutSeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    },
                                    {
                                        "name": "dnsmasq",
                                        "image": "k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.15.4",
                                        "args": [
                                            "-v=2",
                                            "-logtostderr",
                                            "-configDir=/etc/k8s/dns/dnsmasq-nanny",
                                            "-restartDnsmasq=true",
                                            "--",
                                            "-k",
                                            "--cache-size=1000",
                                            "--no-negcache",
                                            "--log-facility=-",
                                            "--server=/cluster.local/127.0.0.1#10053",
                                            "--server=/in-addr.arpa/127.0.0.1#10053",
                                            "--server=/ip6.arpa/127.0.0.1#10053"
                                        ],
                                        "ports": [
                                            {
                                                "name": "dns",
                                                "containerPort": 53,
                                                "protocol": "UDP"
                                            },
                                            {
                                                "name": "dns-tcp",
                                                "containerPort": 53,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "150m",
                                                "memory": "20Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "kube-dns-config",
                                                "mountPath": "/etc/k8s/dns/dnsmasq-nanny"
                                            }
                                        ],
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/healthcheck/dnsmasq",
                                                "port": 10054,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 60,
                                            "timeoutSeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 5
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    },
                                    {
                                        "name": "sidecar",
                                        "image": "k8s.gcr.io/k8s-dns-sidecar-amd64:1.15.4",
                                        "args": [
                                            "--v=2",
                                            "--logtostderr",
                                            "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                                            "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                                        ],
                                        "ports": [
                                            {
                                                "name": "metrics",
                                                "containerPort": 10054,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "20Mi"
                                            }
                                        },
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 10054,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 60,
                                            "timeoutSeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 5
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    },
                                    {
                                        "name": "prometheus-to-sd",
                                        "image": "k8s.gcr.io/prometheus-to-sd:v0.4.2",
                                        "command": [
                                            "/monitor",
                                            "--source=kubedns:http://localhost:10054?whitelisted=probe_kubedns_latency_ms,probe_kubedns_errors,dnsmasq_misses,dnsmasq_hits",
                                            "--stackdriver-prefix=container.googleapis.com/internal/addons",
                                            "--api-override=https://monitoring.googleapis.com/",
                                            "--pod-id=$(POD_NAME)",
                                            "--namespace-id=$(POD_NAMESPACE)",
                                            "--v=2"
                                        ],
                                        "env": [
                                            {
                                                "name": "POD_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "POD_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "Default",
                                "serviceAccountName": "kube-dns",
                                "serviceAccount": "kube-dns",
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "CriticalAddonsOnly",
                                        "operator": "Exists"
                                    }
                                ],
                                "priorityClassName": "system-cluster-critical"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": 0,
                                "maxSurge": "10%"
                            }
                        },
                        "revisionHistoryLimit": 2147483647,
                        "progressDeadlineSeconds": 2147483647
                    },
                    "status": {
                        "observedGeneration": 2,
                        "replicas": 2,
                        "updatedReplicas": 2,
                        "readyReplicas": 2,
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:12:04Z",
                                "lastTransitionTime": "2019-11-26T21:12:04Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "f35b297cfc184440e9429bf611b1251248cd713ea365033e1d1671c126cc0d21": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[l7-default-backend]",
                "name": "l7-default-backend",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "f7e4b83214e7aee65e96534ee60a103a0e34d9b63de42eff41f10be0621328e1": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "With Service",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 1,
                    "Init Container Count": 0,
                    "Volumes": 0
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "c37b149eb33814788d9989abfb13f7ccea04a8a18ad2b13e5d3730c15e4d6bf2": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "1.00%",
                    "memory request": "20 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "672982cacfffffa5eae3fc3999f3c56e72c02e44ab811ba13bd2d23db17c9192": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "1.00%",
                    "memory request": "20 MB"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "f9cd407b70d1c6b5dbc312cb6397654632f32446d168cb0d5fccd2635174db32": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "7b17db73c8b0644a71d5f6e211e6407a15c4e0f069af2108a81bfdd024d5b664": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "61e60886fbfdf15128e0b536e62d49ff91b05d2c9446da1abfe0badbae41e893": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "l7-default-backend",
                        "namespace": "kube-system",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/l7-default-backend",
                        "uid": "43118f69-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "722",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:11:06Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "glbc",
                            "kubernetes.io/cluster-service": "true",
                            "kubernetes.io/name": "GLBC"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"glbc\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"GLBC\"},\"name\":\"l7-default-backend\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"glbc\"}},\"template\":{\"metadata\":{\"annotations\":{\"seccomp.security.alpha.kubernetes.io/pod\":\"docker/default\"},\"labels\":{\"k8s-app\":\"glbc\",\"name\":\"glbc\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/defaultbackend-amd64:1.5\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"timeoutSeconds\":5},\"name\":\"default-http-backend\",\"ports\":[{\"containerPort\":8080}],\"resources\":{\"limits\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}}}]}}}}\n"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "glbc"
                            }
                        },
                        "template": {
                            "metadata": {
                                "creationTimestamp": null,
                                "labels": {
                                    "k8s-app": "glbc",
                                    "name": "glbc"
                                },
                                "annotations": {
                                    "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "name": "default-http-backend",
                                        "image": "k8s.gcr.io/defaultbackend-amd64:1.5",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "10m",
                                                "memory": "20Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "20Mi"
                                            }
                                        },
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "timeoutSeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "failureThreshold": 3
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "securityContext": {},
                                "schedulerName": "default-scheduler"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": "25%",
                                "maxSurge": "25%"
                            }
                        },
                        "revisionHistoryLimit": 10,
                        "progressDeadlineSeconds": 600
                    },
                    "status": {
                        "observedGeneration": 1,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:11:39Z",
                                "lastTransitionTime": "2019-11-26T21:11:39Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            },
                            {
                                "type": "Progressing",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:11:39Z",
                                "lastTransitionTime": "2019-11-26T21:11:06Z",
                                "reason": "NewReplicaSetAvailable",
                                "message": "ReplicaSet \"l7-default-backend-fd59995cd\" has successfully progressed."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "8fca6cb49fd06ed4ebb4de8f7a750b4085e7d8eb78ce62c9848796dda3e70030": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]",
            "kind": "app",
            "config_kind": "node",
            "config": {
                "rn": "app-[metrics-server-v0.3.1]",
                "name": "metrics-server-v0.3.1",
                "kind": "app",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "23bd630c11f718a29e54ae7f6143143090d1b0dbbb6027560c22eb6c75c04e4f": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]",
            "kind": "app",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Exposed": "With Service",
                    "Launcher": "Deployment",
                    "Replicas": 1,
                    "Container Count": 2,
                    "Init Container Count": 0,
                    "Volumes": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "f628bfea1f5e8d66f4b758c2abf2f45beef7296553d3c6fe0933734b2a32727d": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources-per-pod",
            "config": {
                "kind": "key-value",
                "id": "resources-per-pod",
                "title": "Resources Per Pod",
                "order": 8,
                "config": {
                    "cpu request": "4.80%",
                    "memory request": "105 MB"
                },
                "tooltip": "Resource usage per single pod."
            }
        },
        "140d8922fae65eee945f0d3826aa285189382d2758fd52eb410093042cae1ba6": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]",
            "kind": "app",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "4.80%",
                    "memory request": "105 MB"
                },
                "tooltip": "Resource usage for all pod replicas witing the application."
            }
        },
        "e0d1102004a2e4ebf6c41b2294dfb151cd7af3132d0547e7d93a286f4e5c1a0e": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]",
            "kind": "app",
            "config_kind": "props",
            "name": "cluster-consumption",
            "config": {
                "kind": "key-value",
                "id": "cluster-consumption",
                "title": "Cluster Consumption",
                "order": 9,
                "config": {
                    "cpu": "0.00%",
                    "memory": "0.00%"
                },
                "tooltip": "Consumption of overall cluster resources."
            }
        },
        "32ce437807bb2a79fc96eb11b99b87b334e8d53a3f74865dcaa00575f40c213d": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "node",
            "config": {
                "rn": "launcher-[Deployment]",
                "name": "Deployment",
                "kind": "launcher",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "dec6435aa9f21bd3dd5658344204425c3d2258b7076a27edeea436553936b90e": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/launcher-[Deployment]",
            "kind": "launcher",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Deployment",
                    "apiVersion": "apps/v1",
                    "metadata": {
                        "name": "metrics-server-v0.3.1",
                        "namespace": "kube-system",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/metrics-server-v0.3.1",
                        "uid": "44cc77e3-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "771",
                        "generation": 2,
                        "creationTimestamp": "2019-11-26T21:11:09Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "metrics-server",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v0.3.1"
                        },
                        "annotations": {
                            "deployment.kubernetes.io/revision": "2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"metrics-server\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v0.3.1\"},\"name\":\"metrics-server-v0.3.1\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\",\"version\":\"v0.3.1\"}},\"template\":{\"metadata\":{\"annotations\":{\"scheduler.alpha.kubernetes.io/critical-pod\":\"\",\"seccomp.security.alpha.kubernetes.io/pod\":\"docker/default\"},\"labels\":{\"k8s-app\":\"metrics-server\",\"version\":\"v0.3.1\"},\"name\":\"metrics-server\"},\"spec\":{\"containers\":[{\"command\":[\"/metrics-server\",\"--metric-resolution=30s\",\"--kubelet-port=10255\",\"--deprecated-kubelet-completely-insecure=true\",\"--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP\"],\"image\":\"k8s.gcr.io/metrics-server-amd64:v0.3.1\",\"name\":\"metrics-server\",\"ports\":[{\"containerPort\":443,\"name\":\"https\",\"protocol\":\"TCP\"}]},{\"command\":[\"/pod_nanny\",\"--config-dir=/etc/config\",\"--cpu=40m\",\"--extra-cpu=0.5m\",\"--memory=35Mi\",\"--extra-memory=4Mi\",\"--threshold=5\",\"--deployment=metrics-server-v0.3.1\",\"--container=metrics-server\",\"--poll-period=300000\",\"--estimator=exponential\",\"--minClusterSize=5\"],\"env\":[{\"name\":\"MY_POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"MY_POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"k8s.gcr.io/addon-resizer:1.8.4\",\"name\":\"metrics-server-nanny\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"300Mi\"},\"requests\":{\"cpu\":\"5m\",\"memory\":\"50Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/etc/config\",\"name\":\"metrics-server-config-volume\"}]}],\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"metrics-server\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"configMap\":{\"name\":\"metrics-server-config\"},\"name\":\"metrics-server-config-volume\"}]}}}}\n"
                        }
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "metrics-server",
                                "version": "v0.3.1"
                            }
                        },
                        "template": {
                            "metadata": {
                                "name": "metrics-server",
                                "creationTimestamp": null,
                                "labels": {
                                    "k8s-app": "metrics-server",
                                    "version": "v0.3.1"
                                },
                                "annotations": {
                                    "scheduler.alpha.kubernetes.io/critical-pod": "",
                                    "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                                }
                            },
                            "spec": {
                                "volumes": [
                                    {
                                        "name": "metrics-server-config-volume",
                                        "configMap": {
                                            "name": "metrics-server-config",
                                            "defaultMode": 420
                                        }
                                    }
                                ],
                                "containers": [
                                    {
                                        "name": "metrics-server",
                                        "image": "k8s.gcr.io/metrics-server-amd64:v0.3.1",
                                        "command": [
                                            "/metrics-server",
                                            "--metric-resolution=30s",
                                            "--kubelet-port=10255",
                                            "--deprecated-kubelet-completely-insecure=true",
                                            "--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP"
                                        ],
                                        "ports": [
                                            {
                                                "name": "https",
                                                "containerPort": 443,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "43m",
                                                "memory": "55Mi"
                                            },
                                            "requests": {
                                                "cpu": "43m",
                                                "memory": "55Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    },
                                    {
                                        "name": "metrics-server-nanny",
                                        "image": "k8s.gcr.io/addon-resizer:1.8.4",
                                        "command": [
                                            "/pod_nanny",
                                            "--config-dir=/etc/config",
                                            "--cpu=40m",
                                            "--extra-cpu=0.5m",
                                            "--memory=35Mi",
                                            "--extra-memory=4Mi",
                                            "--threshold=5",
                                            "--deployment=metrics-server-v0.3.1",
                                            "--container=metrics-server",
                                            "--poll-period=300000",
                                            "--estimator=exponential",
                                            "--minClusterSize=5"
                                        ],
                                        "env": [
                                            {
                                                "name": "MY_POD_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MY_POD_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "300Mi"
                                            },
                                            "requests": {
                                                "cpu": "5m",
                                                "memory": "50Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "name": "metrics-server-config-volume",
                                                "mountPath": "/etc/config"
                                            }
                                        ],
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "imagePullPolicy": "IfNotPresent"
                                    }
                                ],
                                "restartPolicy": "Always",
                                "terminationGracePeriodSeconds": 30,
                                "dnsPolicy": "ClusterFirst",
                                "serviceAccountName": "metrics-server",
                                "serviceAccount": "metrics-server",
                                "securityContext": {},
                                "schedulerName": "default-scheduler",
                                "tolerations": [
                                    {
                                        "key": "CriticalAddonsOnly",
                                        "operator": "Exists"
                                    }
                                ],
                                "priorityClassName": "system-cluster-critical"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate",
                            "rollingUpdate": {
                                "maxUnavailable": 1,
                                "maxSurge": 1
                            }
                        },
                        "revisionHistoryLimit": 2147483647,
                        "progressDeadlineSeconds": 2147483647
                    },
                    "status": {
                        "observedGeneration": 2,
                        "replicas": 1,
                        "updatedReplicas": 1,
                        "readyReplicas": 1,
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "type": "Available",
                                "status": "True",
                                "lastUpdateTime": "2019-11-26T21:11:10Z",
                                "lastTransitionTime": "2019-11-26T21:11:10Z",
                                "reason": "MinimumReplicasAvailable",
                                "message": "Deployment has minimum availability."
                            }
                        ]
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "40f5f135c9446b40cdbda3ab905a8c1d2cd94641945349642c21a4cb939f7aa6": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[gprod-berlioz-main-agent]",
                "name": "gprod-berlioz-main-agent",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "bc22c00e3b2a02d4986db518b42919b0d76bbc2361577212b43875a5a5b801cf": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "gprod-berlioz-main-agent",
                    "image": "berliozcloud/agent",
                    "ports": [
                        {
                            "name": "ws",
                            "hostPort": 55555,
                            "containerPort": 55555,
                            "protocol": "TCP"
                        },
                        {
                            "name": "mon",
                            "hostPort": 55556,
                            "containerPort": 55556,
                            "protocol": "TCP"
                        }
                    ],
                    "env": [
                        {
                            "name": "BERLIOZ_TASK_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.uid"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_IDENTITY",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_ADDRESS",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.podIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_INSTANCE_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "spec.nodeName"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_HOST_IP",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.hostIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_CONSUMES_PATH",
                            "value": "/etc/berlioz/consumes"
                        },
                        {
                            "name": "BERLIOZ_AGENT_PATH",
                            "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_ADDRESS",
                            "value": "0.0.0.0"
                        },
                        {
                            "name": "BERLIOZ_INFRA",
                            "value": "k8s"
                        },
                        {
                            "name": "BERLIOZ_REGION",
                            "value": "us-west1"
                        },
                        {
                            "name": "BERLIOZ_CLUSTER",
                            "value": "berlioz"
                        },
                        {
                            "name": "BERLIOZ_SECTOR",
                            "value": "main"
                        },
                        {
                            "name": "BERLIOZ_SERVICE",
                            "value": "agent"
                        },
                        {
                            "name": "BERLIOZ_IDENTITY_PREFIX",
                            "value": "gprod-berlioz-main-agent-"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_PORT_WS",
                            "value": "55555"
                        },
                        {
                            "name": "BERLIOZ_PROVIDED_PORT_WS",
                            "value": "55555"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_PORT_MON",
                            "value": "55556"
                        },
                        {
                            "name": "BERLIOZ_PROVIDED_PORT_MON",
                            "value": "55556"
                        },
                        {
                            "name": "GOOGLE_APPLICATION_CREDENTIALS",
                            "value": "/var/secrets/google/service-key.json"
                        }
                    ],
                    "resources": {
                        "requests": {
                            "cpu": "100m",
                            "memory": "100Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "google-cloud-key",
                            "mountPath": "/var/secrets/google"
                        },
                        {
                            "name": "var-run-docker-sock",
                            "mountPath": "/var/run/docker.sock"
                        }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "Always"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "beb0c14622ba2923ff59a752c1ecb933bb75cfc157457e5eb77381d8d7644cf5": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "BERLIOZ_TASK_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.uid\n</pre>",
                    "BERLIOZ_IDENTITY": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "BERLIOZ_ADDRESS": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.podIP\n</pre>",
                    "BERLIOZ_INSTANCE_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: spec.nodeName\n</pre>",
                    "BERLIOZ_HOST_IP": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.hostIP\n</pre>",
                    "BERLIOZ_CONSUMES_PATH": "/etc/berlioz/consumes",
                    "BERLIOZ_AGENT_PATH": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}",
                    "BERLIOZ_LISTEN_ADDRESS": "0.0.0.0",
                    "BERLIOZ_INFRA": "k8s",
                    "BERLIOZ_REGION": "us-west1",
                    "BERLIOZ_CLUSTER": "berlioz",
                    "BERLIOZ_SECTOR": "main",
                    "BERLIOZ_SERVICE": "agent",
                    "BERLIOZ_IDENTITY_PREFIX": "gprod-berlioz-main-agent-",
                    "BERLIOZ_LISTEN_PORT_WS": "55555",
                    "BERLIOZ_PROVIDED_PORT_WS": "55555",
                    "BERLIOZ_LISTEN_PORT_MON": "55556",
                    "BERLIOZ_PROVIDED_PORT_MON": "55556",
                    "GOOGLE_APPLICATION_CREDENTIALS": "/var/secrets/google/service-key.json"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "ed53c67d98d0e6ea701c751644c4a59ee001ff46403873a91eb641c0c8249d12": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "42c45a5e17bcdd2265bbd1afc45f83da06fc2d88fa8ac2e51ce4d74282322170": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/image-[berliozcloud/agent]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[berliozcloud/agent]",
                "name": "berliozcloud/agent",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "1c7299c45f20a4e043de9dd41c590f4acae473c610e89b65ece080bca26712d8": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/image-[berliozcloud/agent]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "agent",
                    "tag": "latest",
                    "fullName": "berliozcloud/agent",
                    "repository": "berliozcloud"
                }
            }
        },
        "a0d6d6c9bb37b5e701ef55230040f939dba66274f2eb5f52e48e9af20a84096e": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/port-[ws (TCP-55555)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[ws (TCP-55555)]",
                "name": "ws (TCP-55555)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "cfc1987a024ab47877b57f266159c39eb38e73dc5d12f5d29e26e07e2a442d53": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/port-[ws (TCP-55555)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "ws",
                    "hostPort": 55555,
                    "containerPort": 55555,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "0188d8b1595f167a59d7e714494b8b88d53a12b36347d4444902a1276eac7700": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/port-[mon (TCP-55556)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[mon (TCP-55556)]",
                "name": "mon (TCP-55556)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "5804e565e8abf714bae9e70be095c603565aa6fd17d091132891148b5b6165f7": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/port-[mon (TCP-55556)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "mon",
                    "hostPort": 55556,
                    "containerPort": 55556,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "51fb0bba4e3b1ebbc850b5c3941158f63f5819a714b06aca261a1edd71e5bd45": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/cont-[gprod-berlioz-main-ctlr]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[gprod-berlioz-main-ctlr]",
                "name": "gprod-berlioz-main-ctlr",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "7167b782a4458f89fe0cfb89d10c439427b8794b55d62af6ce2ba780643c9b22": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/cont-[gprod-berlioz-main-ctlr]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "gprod-berlioz-main-ctlr",
                    "image": "berliozcloud/k8s-controller",
                    "env": [
                        {
                            "name": "BERLIOZ_TASK_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.uid"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_IDENTITY",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_ADDRESS",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.podIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_INSTANCE_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "spec.nodeName"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_HOST_IP",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.hostIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_CONSUMES_PATH",
                            "value": "/etc/berlioz/consumes"
                        },
                        {
                            "name": "BERLIOZ_AGENT_PATH",
                            "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_ADDRESS",
                            "value": "0.0.0.0"
                        },
                        {
                            "name": "BERLIOZ_INFRA",
                            "value": "k8s"
                        },
                        {
                            "name": "BERLIOZ_REGION",
                            "value": "us-west1"
                        },
                        {
                            "name": "BERLIOZ_CLUSTER",
                            "value": "berlioz"
                        },
                        {
                            "name": "BERLIOZ_SECTOR",
                            "value": "main"
                        },
                        {
                            "name": "BERLIOZ_SERVICE",
                            "value": "ctlr"
                        },
                        {
                            "name": "BERLIOZ_IDENTITY_PREFIX",
                            "value": "gprod-berlioz-main-ctlr-"
                        },
                        {
                            "name": "GOOGLE_APPLICATION_CREDENTIALS",
                            "value": "/var/secrets/google/service-key.json"
                        }
                    ],
                    "resources": {
                        "requests": {
                            "cpu": "100m",
                            "memory": "100Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "google-cloud-key",
                            "mountPath": "/var/secrets/google"
                        }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "Always"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "5cc8fc72663ed0955b5d92b63c7ee17a921c50607924efed755a073a7abfd5ed": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/cont-[gprod-berlioz-main-ctlr]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "BERLIOZ_TASK_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.uid\n</pre>",
                    "BERLIOZ_IDENTITY": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "BERLIOZ_ADDRESS": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.podIP\n</pre>",
                    "BERLIOZ_INSTANCE_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: spec.nodeName\n</pre>",
                    "BERLIOZ_HOST_IP": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.hostIP\n</pre>",
                    "BERLIOZ_CONSUMES_PATH": "/etc/berlioz/consumes",
                    "BERLIOZ_AGENT_PATH": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}",
                    "BERLIOZ_LISTEN_ADDRESS": "0.0.0.0",
                    "BERLIOZ_INFRA": "k8s",
                    "BERLIOZ_REGION": "us-west1",
                    "BERLIOZ_CLUSTER": "berlioz",
                    "BERLIOZ_SECTOR": "main",
                    "BERLIOZ_SERVICE": "ctlr",
                    "BERLIOZ_IDENTITY_PREFIX": "gprod-berlioz-main-ctlr-",
                    "GOOGLE_APPLICATION_CREDENTIALS": "/var/secrets/google/service-key.json"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "63aea327fe588db83d26dfdd3fb30a14afd2ca7726ba47398ff8f2905c408ec7": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/cont-[gprod-berlioz-main-ctlr]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "062c57c363245cde8643ac0079fba463f3a8eb3ea7a68fe18f696dacd7a6c275": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/cont-[gprod-berlioz-main-ctlr]/image-[berliozcloud/k8s-controller]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[berliozcloud/k8s-controller]",
                "name": "berliozcloud/k8s-controller",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f309772c14d332ae5eac3530ccd86091c9ee3793c8390ff7ae85fbb8aaae6f57": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/cont-[gprod-berlioz-main-ctlr]/image-[berliozcloud/k8s-controller]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "k8s-controller",
                    "tag": "latest",
                    "fullName": "berliozcloud/k8s-controller",
                    "repository": "berliozcloud"
                }
            }
        },
        "8a38d63f8d1ed0cac2d5d416f82141fa5e5100059519ff44e778a03a90ad16a4": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[fluentd-gcp]",
                "name": "fluentd-gcp",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "fe3b51355789dbcad4a14a56e63b0ac349679bcb66a07375231aec92e9531a1f": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "fluentd-gcp",
                    "image": "gcr.io/stackdriver-agents/stackdriver-logging-agent:1.6.8",
                    "env": [
                        {
                            "name": "NODE_NAME",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "spec.nodeName"
                                }
                            }
                        },
                        {
                            "name": "STACKDRIVER_METADATA_AGENT_URL",
                            "value": "http://$(NODE_NAME):8799"
                        }
                    ],
                    "resources": {
                        "limits": {
                            "cpu": "1",
                            "memory": "500Mi"
                        },
                        "requests": {
                            "cpu": "100m",
                            "memory": "200Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "varlog",
                            "mountPath": "/var/log"
                        },
                        {
                            "name": "varlibdockercontainers",
                            "readOnly": true,
                            "mountPath": "/var/lib/docker/containers"
                        },
                        {
                            "name": "config-volume",
                            "mountPath": "/etc/google-fluentd/config.d"
                        }
                    ],
                    "livenessProbe": {
                        "exec": {
                            "command": [
                                "/bin/sh",
                                "-c",
                                "LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then\n  exit 1;\nfi; touch -d \"${STUCK_THRESHOLD_SECONDS} seconds ago\" /tmp/marker-stuck; if [[ -z \"$(find /var/log/fluentd-buffers -type f -newer /tmp/marker-stuck -print -quit)\" ]]; then\n  rm -rf /var/log/fluentd-buffers;\n  exit 1;\nfi; touch -d \"${LIVENESS_THRESHOLD_SECONDS} seconds ago\" /tmp/marker-liveness; if [[ -z \"$(find /var/log/fluentd-buffers -type f -newer /tmp/marker-liveness -print -quit)\" ]]; then\n  exit 1;\nfi;\n"
                            ]
                        },
                        "initialDelaySeconds": 600,
                        "timeoutSeconds": 1,
                        "periodSeconds": 60,
                        "successThreshold": 1,
                        "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "0500d0f252d2f808107b435081c77b71de30d06a8b5164755e6ef9c2d4c1e190": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "NODE_NAME": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: spec.nodeName\n</pre>",
                    "STACKDRIVER_METADATA_AGENT_URL": "http://$(NODE_NAME):8799"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "876445c9ce58b7be0da1db3f27ffb3aa4828345286cc6d26765b3e83f2737432": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "cpu limit": "100.00%",
                    "memory request": "200 MB",
                    "memory limit": "500 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "03869023de1f86a52c8991b66701cebfb07e1d6fe8a69afa370540d84dc3a391": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/image-[gcr.io/stackdriver-agents/stackdriver-logging-agent]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[gcr.io/stackdriver-agents/stackdriver-logging-agent]",
                "name": "gcr.io/stackdriver-agents/stackdriver-logging-agent",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "c8898eba96ec9e64451019ab201084151e585520683272f666d3a23a70a627dd": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/image-[gcr.io/stackdriver-agents/stackdriver-logging-agent]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "stackdriver-logging-agent",
                    "tag": "1.6.8",
                    "fullName": "gcr.io/stackdriver-agents/stackdriver-logging-agent:1.6.8",
                    "repository": "gcr.io/stackdriver-agents"
                }
            }
        },
        "d3ab71913c22065cd8ab783b4fe755c1ca3659ba9326fefe8a7e549a64623eec": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[prometheus-to-sd-exporter]",
                "name": "prometheus-to-sd-exporter",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "d92b8907ca738d09a7d409fc2d448532126ca95b583a7e52a0c5bb67895c1014": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "prometheus-to-sd-exporter",
                    "image": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                    "command": [
                        "/monitor",
                        "--stackdriver-prefix=container.googleapis.com/internal/addons",
                        "--api-override=https://monitoring.googleapis.com/",
                        "--source=fluentd:http://localhost:24231?whitelisted=stackdriver_successful_requests_count,stackdriver_failed_requests_count,stackdriver_ingested_entries_count,stackdriver_dropped_entries_count",
                        "--pod-id=$(POD_NAME)",
                        "--namespace-id=$(POD_NAMESPACE)"
                    ],
                    "env": [
                        {
                            "name": "POD_NAME",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "POD_NAMESPACE",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.namespace"
                                }
                            }
                        }
                    ],
                    "resources": {},
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "b9f90b0f3c3a13b2cd5fc4a1a76cfea0b0c1bee35b47335b44b953c4acfd1449": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "POD_NAME": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "POD_NAMESPACE": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.namespace\n</pre>"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "499665e42c5924d3e0dc8dfe72984a0495345b9398b78da4e6ccf9d0d50fcd26": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {},
                "tooltip": "Resource usage for a single container."
            }
        },
        "a5fd50632e168206037267db2785f53e14c307ea14f2e15ec0ca642982f6d00d": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[prometheus-to-sd-exporter]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/prometheus-to-sd]",
                "name": "k8s.gcr.io/prometheus-to-sd",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "58ea9ec0be3fad6a781edf938d5ce71e50b1eadd622ce7f6947a38105bd8d9c7": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[prometheus-to-sd-exporter]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "prometheus-to-sd",
                    "tag": "v0.5.0",
                    "fullName": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "bfd925e0e5ebcf391669501688b8bed52ad3c984ac34aca0fee76aa324081bad": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[metadata-proxy]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[metadata-proxy]",
                "name": "metadata-proxy",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "d739fa0338a687773514fb20d79adca44dc9b03ea9d9fca05added6bf45fcd8f": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[metadata-proxy]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "metadata-proxy",
                    "image": "k8s.gcr.io/metadata-proxy:v0.1.10",
                    "resources": {
                        "limits": {
                            "cpu": "30m",
                            "memory": "25Mi"
                        },
                        "requests": {
                            "cpu": "30m",
                            "memory": "25Mi"
                        }
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                        "privileged": true
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "fcc9ff836fc681ca288ca0842d9b1c99a20bc113599b813745526ee4222d3071": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[metadata-proxy]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "3.00%",
                    "cpu limit": "3.00%",
                    "memory request": "25 MB",
                    "memory limit": "25 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "019b77a63a03022a3682dfa42af9d4a1ff8df14ccfb2651f05ee4d200bfd7073": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[metadata-proxy]",
            "kind": "cont",
            "config_kind": "props",
            "name": "radioactive",
            "config": {
                "kind": "key-value",
                "id": "radioactive",
                "title": "Radioactivity",
                "order": 7,
                "config": {
                    "privileged": true
                }
            }
        },
        "5703fd2c61c8471fc7fdc4c8e5f4d8927f7ca60329b7a8e6b6fd8c6a5f5a6b35": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[metadata-proxy]/image-[k8s.gcr.io/metadata-proxy]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/metadata-proxy]",
                "name": "k8s.gcr.io/metadata-proxy",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "e1668e8b5b8b4715e0052de3dc1d74407348cb1aa6fcc1eaa1f346e0b13d8de3": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[metadata-proxy]/image-[k8s.gcr.io/metadata-proxy]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "metadata-proxy",
                    "tag": "v0.1.10",
                    "fullName": "k8s.gcr.io/metadata-proxy:v0.1.10",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "256e159c0cfad854c1d3b8f8fe9dc7d0d1781adc696b54f1e31082c084a0e7f0": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[prometheus-to-sd-exporter]",
                "name": "prometheus-to-sd-exporter",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "7c3410bd5b8692239437e96600af46a3d2fdd4289dc7dd689bd2734bcd424f39": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "prometheus-to-sd-exporter",
                    "image": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                    "command": [
                        "/monitor",
                        "--stackdriver-prefix=container.googleapis.com/internal/addons",
                        "--api-override=https://monitoring.googleapis.com/",
                        "--source=metadata_proxy:http://127.0.0.1:989?whitelisted=request_count",
                        "--pod-id=$(POD_NAME)",
                        "--namespace-id=$(POD_NAMESPACE)"
                    ],
                    "env": [
                        {
                            "name": "POD_NAME",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "POD_NAMESPACE",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.namespace"
                                }
                            }
                        }
                    ],
                    "resources": {
                        "limits": {
                            "cpu": "2m",
                            "memory": "20Mi"
                        },
                        "requests": {
                            "cpu": "2m",
                            "memory": "20Mi"
                        }
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "2c97940a8fb713afcb67d5b9d9eb96ac92bf410abd671e90c8af64ab225b1e16": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "POD_NAME": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "POD_NAMESPACE": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.namespace\n</pre>"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "3b70098d07b2277ba106e3bb243d3e0e42bd8a2f24417ff87e39ef77a9c27e69": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "0.20%",
                    "cpu limit": "0.20%",
                    "memory request": "20 MB",
                    "memory limit": "20 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "8b63a2a1d3661f583b7cb51a8d95d5ef7d15290692333c3d1075f26a0d8367bf": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[prometheus-to-sd-exporter]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/prometheus-to-sd]",
                "name": "k8s.gcr.io/prometheus-to-sd",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "e8933105846fa4e8fb04d93c9ce8ab303ad386396545ec5aba4dd0a9f271992f": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]/cont-[prometheus-to-sd-exporter]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "prometheus-to-sd",
                    "tag": "v0.5.0",
                    "fullName": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "25d800b31e65ab78dfe3e0d91777d60b0e54d109242029608642e9386a52cea8": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[nvidia-gpu-device-plugin]",
                "name": "nvidia-gpu-device-plugin",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {
                    "radioactive": {
                        "propagatable": true,
                        "name": "radioactive"
                    }
                }
            }
        },
        "dd19858bdc21acc2a9419853b26e24b6e0e924d644c798d4d1501f9bccf5f7bb": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "nvidia-gpu-device-plugin",
                    "image": "k8s.gcr.io/nvidia-gpu-device-plugin@sha256:4b036e8844920336fa48f36edeb7d4398f426d6a934ba022848deed2edbf09aa",
                    "command": [
                        "/usr/bin/nvidia-gpu-device-plugin",
                        "-logtostderr"
                    ],
                    "resources": {
                        "limits": {
                            "cpu": "50m",
                            "memory": "10Mi"
                        },
                        "requests": {
                            "cpu": "50m",
                            "memory": "10Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "device-plugin",
                            "mountPath": "/device-plugin"
                        },
                        {
                            "name": "dev",
                            "mountPath": "/dev"
                        }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                        "privileged": true
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "c04c7fe6fd0d9aab6149b32c48e82d501d5e85faceef32109821d9385608eb0a": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "5.00%",
                    "cpu limit": "5.00%",
                    "memory request": "10 MB",
                    "memory limit": "10 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "ba9339d9f3c7f02a0816b2755b81fc51a987dc25c9392e07fcc71dfca8d5917b": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]",
            "kind": "cont",
            "config_kind": "props",
            "name": "radioactive",
            "config": {
                "kind": "key-value",
                "id": "radioactive",
                "title": "Radioactivity",
                "order": 7,
                "config": {
                    "privileged": true
                }
            }
        },
        "89d559ec197e070dca11b2cc66c353c7a6da318cc65294d06c01e8dbd693c897": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]/image-[k8s.gcr.io/nvidia-gpu-device-plugin@sha256]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/nvidia-gpu-device-plugin@sha256]",
                "name": "k8s.gcr.io/nvidia-gpu-device-plugin@sha256",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "315612b3b715ac0a953b0a085d2bb98fd630695f48c371b1d106405766175c9b": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]/image-[k8s.gcr.io/nvidia-gpu-device-plugin@sha256]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "nvidia-gpu-device-plugin@sha256",
                    "tag": "4b036e8844920336fa48f36edeb7d4398f426d6a934ba022848deed2edbf09aa",
                    "fullName": "k8s.gcr.io/nvidia-gpu-device-plugin@sha256:4b036e8844920336fa48f36edeb7d4398f426d6a934ba022848deed2edbf09aa",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "c5ef714cae80402deca782597d1730a0cf09b81656100136be5584b5af889e44": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/cont-[prometheus-to-sd]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[prometheus-to-sd]",
                "name": "prometheus-to-sd",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "977fdf2609a4286a8110ce38e6a501d2d8f6f153763eb30280f5484069dbdae4": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/cont-[prometheus-to-sd]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "prometheus-to-sd",
                    "image": "k8s.gcr.io/prometheus-to-sd:v0.8.2",
                    "command": [
                        "/monitor",
                        "--source=kube-proxy:http://localhost:10249?whitelisted=sync_proxy_rules_latency_microseconds&metricsPrefix=container.googleapis.com/internal/addons",
                        "--source=kubelet:http://localhost:10255?whitelisted=docker_operations,docker_operations_errors,runtime_operations,runtime_operations_errors,runtime_operations_latency_microseconds,pleg_relist_latency_microseconds,pod_start_latency_microseconds,rest_client_requests_total,storage_operation_duration_seconds,storage_operation_errors_total,run_podsandbox_duration_seconds,run_podsandbox_errors_total,storage_operation_status_count",
                        "--source=kubelet:http://localhost:10255/metrics/probes?whitelisted=prober_probe_total&podIdLabel=pod&namespaceIdLabel=namespace&containerNameLabel=container",
                        "--stackdriver-prefix=container.googleapis.com/internal/nodes",
                        "--api-override=https://monitoring.googleapis.com/",
                        "--export-interval=120s"
                    ],
                    "resources": {},
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "5b9b11b7476dfe708b49f031466a7379863cada80bc770a37582d0f26f8479c3": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/cont-[prometheus-to-sd]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {},
                "tooltip": "Resource usage for a single container."
            }
        },
        "cbf2657d9dd7e598de00c97168f4b95aa0a94b70924f8b0dc170539ef3f9e098": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/cont-[prometheus-to-sd]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/prometheus-to-sd]",
                "name": "k8s.gcr.io/prometheus-to-sd",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "de5f9c0900bc520ba2b2ea3e2df276607d97ca65aa9c5f9d04ade07b0beb9633": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/cont-[prometheus-to-sd]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "prometheus-to-sd",
                    "tag": "v0.8.2",
                    "fullName": "k8s.gcr.io/prometheus-to-sd:v0.8.2",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "b0b7fc9fd9902106946a1da0eee3991fd5bbd6cc7c59849523542ab9d8215b8c": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/cont-[prometheus-to-sd-new-model]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[prometheus-to-sd-new-model]",
                "name": "prometheus-to-sd-new-model",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "2623881636d041a3764096c87e5d774b329ee3792ee2e5b690f421670a661a4b": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/cont-[prometheus-to-sd-new-model]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "prometheus-to-sd-new-model",
                    "image": "k8s.gcr.io/prometheus-to-sd:v0.8.2",
                    "command": [
                        "/monitor",
                        "--source=kube-proxy:http://localhost:10249?whitelisted=sync_proxy_rules_latency_microseconds&metricsPrefix=kubernetes.io/internal/addons",
                        "--source=kubelet:http://localhost:10255?whitelisted=docker_operations,docker_operations_errors,runtime_operations,runtime_operations_errors,runtime_operations_latency_microseconds,pleg_relist_latency_microseconds,pod_start_latency_microseconds,rest_client_requests_total,storage_operation_duration_seconds,storage_operation_errors_total,run_podsandbox_duration_seconds,run_podsandbox_errors_total,storage_operation_status_count",
                        "--source=kubelet:http://localhost:10255/metrics/probes?whitelisted=prober_probe_total&podIdLabel=pod&namespaceIdLabel=namespace&containerNameLabel=container",
                        "--stackdriver-prefix=kubernetes.io/internal/nodes",
                        "--api-override=https://monitoring.googleapis.com/",
                        "--monitored-resource-type-prefix=k8s_",
                        "--monitored-resource-labels=location=us-west1-c",
                        "--export-interval=120s"
                    ],
                    "resources": {
                        "limits": {
                            "cpu": "3m",
                            "memory": "20Mi"
                        },
                        "requests": {
                            "cpu": "1m",
                            "memory": "20Mi"
                        }
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "b9fdaebac6ea6b57279881a56a84a50b7344f9d1dad82973bd0a5f2c42baae00": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/cont-[prometheus-to-sd-new-model]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "0.10%",
                    "cpu limit": "0.30%",
                    "memory request": "20 MB",
                    "memory limit": "20 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "67eb9c966aec39031890f9dc7ea0cb90c379a2b4a0ba201103e3a645f0a9f261": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/cont-[prometheus-to-sd-new-model]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/prometheus-to-sd]",
                "name": "k8s.gcr.io/prometheus-to-sd",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "48e05b749232c3267e862397e823c71fd9d51abb7da41001131238b995ac8860": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]/cont-[prometheus-to-sd-new-model]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "prometheus-to-sd",
                    "tag": "v0.8.2",
                    "fullName": "k8s.gcr.io/prometheus-to-sd:v0.8.2",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "c319e06397c377a2750a7ad694e98de600f4ab4de57482dc3f1b8487209be1e9": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/cont-[event-exporter]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[event-exporter]",
                "name": "event-exporter",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "d1c1118d257e97edb32792dc243a0a5908c2c24b64333dbc7493ccc147f16955": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/cont-[event-exporter]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "event-exporter",
                    "image": "k8s.gcr.io/event-exporter:v0.2.4",
                    "command": [
                        "/event-exporter",
                        "-sink-opts=-stackdriver-resource-model=old"
                    ],
                    "resources": {},
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "5b2d3ea79bf65c319544af779f6a0306f528036c35a61b16eb86d0974362785f": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/cont-[event-exporter]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {},
                "tooltip": "Resource usage for a single container."
            }
        },
        "ee47fcd33788698563f5e538eec6f19e5e87f7059344faa85f4fae4e382cca85": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/cont-[event-exporter]/image-[k8s.gcr.io/event-exporter]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/event-exporter]",
                "name": "k8s.gcr.io/event-exporter",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "d5da7a31e351ea9ea65fa1c61a9647f79aa9f67c6957e7faebc9aadce89b412d": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/cont-[event-exporter]/image-[k8s.gcr.io/event-exporter]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "event-exporter",
                    "tag": "v0.2.4",
                    "fullName": "k8s.gcr.io/event-exporter:v0.2.4",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "bc7c94868622dc96b7a0f3b11aa392f61812e28eaa0d2e47c0f8663484f7490b": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[prometheus-to-sd-exporter]",
                "name": "prometheus-to-sd-exporter",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "c97f91a1d2c56d26fbad5bff739062c0550a769f86e683c07bd368f669c90010": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "prometheus-to-sd-exporter",
                    "image": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                    "command": [
                        "/monitor",
                        "--stackdriver-prefix=container.googleapis.com/internal/addons",
                        "--api-override=https://monitoring.googleapis.com/",
                        "--source=event_exporter:http://localhost:80?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count",
                        "--pod-id=$(POD_NAME)",
                        "--namespace-id=$(POD_NAMESPACE)"
                    ],
                    "env": [
                        {
                            "name": "POD_NAME",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "POD_NAMESPACE",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.namespace"
                                }
                            }
                        }
                    ],
                    "resources": {},
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "bbeb5fb5e3d5f87deafa6e5d45840f6e49614f4fd1c848782c38ca4d1b49cb71": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "POD_NAME": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "POD_NAMESPACE": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.namespace\n</pre>"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "a6b6a1bee9a30f67f3a52b1ce4badd7f823a809383606843c18739e1e70c3bfe": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/cont-[prometheus-to-sd-exporter]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {},
                "tooltip": "Resource usage for a single container."
            }
        },
        "27a456d92e0c0050c3084b5396722c8345cc042ddf99b0cf92413f260909693f": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/cont-[prometheus-to-sd-exporter]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/prometheus-to-sd]",
                "name": "k8s.gcr.io/prometheus-to-sd",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "3862c025ef7559ee72345d9fe289c496685659ca4406d757868ee39c4f1c9623": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/cont-[prometheus-to-sd-exporter]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "prometheus-to-sd",
                    "tag": "v0.5.0",
                    "fullName": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "06f4495665e60b5aee4bd0099ae965a3e7a2f9d5c3bd50f967b2957d8f5cfb97": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]/cont-[fluentd-gcp-scaler]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[fluentd-gcp-scaler]",
                "name": "fluentd-gcp-scaler",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "69dd98dc279d138d38be30331128ec8e8e3771fc47c7e61c95df472dcfe6baa2": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]/cont-[fluentd-gcp-scaler]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "fluentd-gcp-scaler",
                    "image": "k8s.gcr.io/fluentd-gcp-scaler:0.5.2",
                    "command": [
                        "/scaler.sh",
                        "--ds-name=fluentd-gcp-v3.2.0",
                        "--scaling-policy=fluentd-gcp-scaling-policy"
                    ],
                    "env": [
                        {
                            "name": "CPU_REQUEST",
                            "value": "100m"
                        },
                        {
                            "name": "MEMORY_REQUEST",
                            "value": "200Mi"
                        },
                        {
                            "name": "CPU_LIMIT",
                            "value": "1000m"
                        },
                        {
                            "name": "MEMORY_LIMIT",
                            "value": "500Mi"
                        }
                    ],
                    "resources": {},
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "22b6aef64bb34396009022ed0adf85c77d4b7497f6eb01d3fe07bde549b63c96": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]/cont-[fluentd-gcp-scaler]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "CPU_REQUEST": "100m",
                    "MEMORY_REQUEST": "200Mi",
                    "CPU_LIMIT": "1000m",
                    "MEMORY_LIMIT": "500Mi"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "696b84285a093e95492f8ed0deff53a043b738f2c1c708f76fef50c1bc69b1f1": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]/cont-[fluentd-gcp-scaler]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {},
                "tooltip": "Resource usage for a single container."
            }
        },
        "a5f74f2ca06bed6a3dcf5866c0d6dde681da33da46bd0b0ab215c296d71b1ab7": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]/cont-[fluentd-gcp-scaler]/image-[k8s.gcr.io/fluentd-gcp-scaler]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/fluentd-gcp-scaler]",
                "name": "k8s.gcr.io/fluentd-gcp-scaler",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "3e37e74ee66e7571c9fe21520f173f2bbdb0b6355ed07c525d9b4ade2fde070c": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]/cont-[fluentd-gcp-scaler]/image-[k8s.gcr.io/fluentd-gcp-scaler]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "fluentd-gcp-scaler",
                    "tag": "0.5.2",
                    "fullName": "k8s.gcr.io/fluentd-gcp-scaler:0.5.2",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "8adb758e3830cdf297689b020fc9aa8e1f2de2030d3564db129effa829eec864": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[heapster]",
                "name": "heapster",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "11fef3b8488950ceb45a5690e3d02a45ed4c2c4852a2408bb1d140f0ba307272": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "heapster",
                    "image": "gke.gcr.io/heapster:v1.7.0",
                    "command": [
                        "/heapster",
                        "--source=kubernetes.summary_api:?host_id_annotation=container.googleapis.com/instance_id",
                        "--sink=stackdriver:?cluster_name=gprod-uswest1c&use_old_resources=true&use_new_resources=false&min_interval_sec=100&batch_export_timeout_sec=110&cluster_location=us-west1-c"
                    ],
                    "resources": {},
                    "livenessProbe": {
                        "httpGet": {
                            "path": "/healthz",
                            "port": 8082,
                            "scheme": "HTTP"
                        },
                        "initialDelaySeconds": 180,
                        "timeoutSeconds": 5,
                        "periodSeconds": 10,
                        "successThreshold": 1,
                        "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "4e716c43340e20872cbff63be8cc5b0730fc6051a8fbdf1330f70db9565c01ba": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {},
                "tooltip": "Resource usage for a single container."
            }
        },
        "fdf779225e0e92fb3ba9f7aec465eee3cdc13141ef177aa66dc67a31ff805f86": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster]/image-[gke.gcr.io/heapster]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[gke.gcr.io/heapster]",
                "name": "gke.gcr.io/heapster",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "371f17249ed165691fcf4037f14cbe1e5b37c1fa6e4262ed527a17ffe0b0bf41": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster]/image-[gke.gcr.io/heapster]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "heapster",
                    "tag": "v1.7.0",
                    "fullName": "gke.gcr.io/heapster:v1.7.0",
                    "repository": "gke.gcr.io"
                }
            }
        },
        "2702c138f36804a506bf427f247150ada26cce6dc072146665435447ae9e580d": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[prom-to-sd]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[prom-to-sd]",
                "name": "prom-to-sd",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "e602d975705d5d1327bdf64cd379ece25442d1b621d507fd47406967d54d2641": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[prom-to-sd]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "prom-to-sd",
                    "image": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                    "command": [
                        "/monitor",
                        "--source=heapster:http://localhost:8082?whitelisted=stackdriver_requests_count,stackdriver_timeseries_count",
                        "--stackdriver-prefix=container.googleapis.com/internal/addons",
                        "--api-override=https://monitoring.googleapis.com/",
                        "--pod-id=$(POD_NAME)",
                        "--namespace-id=$(POD_NAMESPACE)"
                    ],
                    "env": [
                        {
                            "name": "POD_NAME",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "POD_NAMESPACE",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.namespace"
                                }
                            }
                        }
                    ],
                    "resources": {},
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "c035217b60a0578e0b0e7377b9d2f4b6f06924922b7a46791ce99933b1221647": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[prom-to-sd]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "POD_NAME": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "POD_NAMESPACE": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.namespace\n</pre>"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "4cdd8469abfcc6b1051e25ae3046a389fe2651f79f7b38b6cbe97b3c5a64e0fd": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[prom-to-sd]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {},
                "tooltip": "Resource usage for a single container."
            }
        },
        "b1632ad8ee1bf406f576e00aec9012611eb7fcb0c938987eb0287d905c8d22f4": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[prom-to-sd]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/prometheus-to-sd]",
                "name": "k8s.gcr.io/prometheus-to-sd",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "ddbdd3128b5ed485416012d7ca3c95b86d693dc639d6f3f9c42786f3658ad967": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[prom-to-sd]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "prometheus-to-sd",
                    "tag": "v0.5.0",
                    "fullName": "k8s.gcr.io/prometheus-to-sd:v0.5.0",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "3b840c5af14d8b2a6b74d9b19a532181e476bd4cb9bc741496d5191e97fac50c": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster-nanny]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[heapster-nanny]",
                "name": "heapster-nanny",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f309dcbe6d31a4a91103d2653f355632fcb0277c017fb2c9271004facf4f4f70": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster-nanny]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "heapster-nanny",
                    "image": "k8s.gcr.io/addon-resizer:1.8.3",
                    "command": [
                        "/pod_nanny",
                        "--config-dir=/etc/config",
                        "--cpu=10m",
                        "--extra-cpu=0.5m",
                        "--memory=100Mi",
                        "--extra-memory=4Mi",
                        "--threshold=5",
                        "--deployment=heapster-v1.7.0",
                        "--container=heapster",
                        "--poll-period=300000",
                        "--estimator=exponential",
                        "--minClusterSize=5"
                    ],
                    "env": [
                        {
                            "name": "MY_POD_NAME",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "MY_POD_NAMESPACE",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.namespace"
                                }
                            }
                        }
                    ],
                    "resources": {
                        "limits": {
                            "cpu": "50m",
                            "memory": "92960Ki"
                        },
                        "requests": {
                            "cpu": "50m",
                            "memory": "92960Ki"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "heapster-config-volume",
                            "mountPath": "/etc/config"
                        }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "9101b526ac5eed357332add924cc894bd65edf47f253a458224a43d16a0f2a26": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster-nanny]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "MY_POD_NAME": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "MY_POD_NAMESPACE": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.namespace\n</pre>"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "dd57c7d2be32136b926cd8f58b42748f856b13cf351868de8583f8e82f9a6586": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster-nanny]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "5.00%",
                    "cpu limit": "5.00%",
                    "memory request": "90.78 MB",
                    "memory limit": "90.78 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "2e78dd89453228d86cf801f0187f5ecd7e508a27502421d6ca9ecabc43950a34": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster-nanny]/image-[k8s.gcr.io/addon-resizer]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/addon-resizer]",
                "name": "k8s.gcr.io/addon-resizer",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "5594118f399beaf6157e303a6491fd51fbd390a1ef371cead849a797472736d0": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster-nanny]/image-[k8s.gcr.io/addon-resizer]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "addon-resizer",
                    "tag": "1.8.3",
                    "fullName": "k8s.gcr.io/addon-resizer:1.8.3",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "2b036ee5a2f3c767b15293480f5e1ba8c5c97741a5a8f2ee3793c911392c43c9": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]/cont-[autoscaler]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[autoscaler]",
                "name": "autoscaler",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "0bf805d3db322fd77376c47f3b2c75e67dfd1ce2a11839f14f4d1c69b5cecbf6": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]/cont-[autoscaler]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "autoscaler",
                    "image": "k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.3.0",
                    "command": [
                        "/cluster-proportional-autoscaler",
                        "--namespace=kube-system",
                        "--configmap=kube-dns-autoscaler",
                        "--target=Deployment/kube-dns",
                        "--default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}",
                        "--logtostderr=true",
                        "--v=2"
                    ],
                    "resources": {
                        "requests": {
                            "cpu": "20m",
                            "memory": "10Mi"
                        }
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "c0d9783f7d9b9358102047f2f496d2f0be2104876e8b5a5f52e1d17a25f0d758": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]/cont-[autoscaler]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "2.00%",
                    "memory request": "10 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "d21578bbd35280d2bfc42d3172442dc83e4ddfe215ce3fb15d6a9d0579712fb8": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]/cont-[autoscaler]/image-[k8s.gcr.io/cluster-proportional-autoscaler-amd64]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/cluster-proportional-autoscaler-amd64]",
                "name": "k8s.gcr.io/cluster-proportional-autoscaler-amd64",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "1db2e5b6e33e7a373c80f7a07c654d496a95428073fe98db1e0be0cd9ce1a8df": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]/cont-[autoscaler]/image-[k8s.gcr.io/cluster-proportional-autoscaler-amd64]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "cluster-proportional-autoscaler-amd64",
                    "tag": "1.3.0",
                    "fullName": "k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.3.0",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "378b4873fc402440dfb7b42ac32c8b3d1c365f368935de10df09fbafc1ed9f4a": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[kubedns]",
                "name": "kubedns",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "c17b4690b783279d6440a0d2070c496855ec88e967579db32ddf118aebcb8345": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "kubedns",
                    "image": "k8s.gcr.io/k8s-dns-kube-dns-amd64:1.15.4",
                    "args": [
                        "--domain=cluster.local.",
                        "--dns-port=10053",
                        "--config-dir=/kube-dns-config",
                        "--v=2"
                    ],
                    "ports": [
                        {
                            "name": "dns-local",
                            "containerPort": 10053,
                            "protocol": "UDP"
                        },
                        {
                            "name": "dns-tcp-local",
                            "containerPort": 10053,
                            "protocol": "TCP"
                        },
                        {
                            "name": "metrics",
                            "containerPort": 10055,
                            "protocol": "TCP"
                        }
                    ],
                    "env": [
                        {
                            "name": "PROMETHEUS_PORT",
                            "value": "10055"
                        }
                    ],
                    "resources": {
                        "limits": {
                            "memory": "170Mi"
                        },
                        "requests": {
                            "cpu": "100m",
                            "memory": "70Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "kube-dns-config",
                            "mountPath": "/kube-dns-config"
                        }
                    ],
                    "livenessProbe": {
                        "httpGet": {
                            "path": "/healthcheck/kubedns",
                            "port": 10054,
                            "scheme": "HTTP"
                        },
                        "initialDelaySeconds": 60,
                        "timeoutSeconds": 5,
                        "periodSeconds": 10,
                        "successThreshold": 1,
                        "failureThreshold": 5
                    },
                    "readinessProbe": {
                        "httpGet": {
                            "path": "/readiness",
                            "port": 8081,
                            "scheme": "HTTP"
                        },
                        "initialDelaySeconds": 3,
                        "timeoutSeconds": 5,
                        "periodSeconds": 10,
                        "successThreshold": 1,
                        "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "e32b51c47fe2c37d0c8747700503fa58222b896c152f1f17d05a3d73ce06c3ae": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "PROMETHEUS_PORT": "10055"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "b77a5c92912c8ffb8459ecab1b1aa48ed7122491a8ac362fba7a5f669a72519d": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "70 MB",
                    "memory limit": "170 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "956bd0f1aeb140bd5f6cfa9c32c7508622047eec84da71c82fdf6e87173ef1cb": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/image-[k8s.gcr.io/k8s-dns-kube-dns-amd64]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/k8s-dns-kube-dns-amd64]",
                "name": "k8s.gcr.io/k8s-dns-kube-dns-amd64",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "3a2ed3ace44a6b4cb5e4e53a7e18e2b5bbffd4e61fc2b0863277cd781f95d5aa": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/image-[k8s.gcr.io/k8s-dns-kube-dns-amd64]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "k8s-dns-kube-dns-amd64",
                    "tag": "1.15.4",
                    "fullName": "k8s.gcr.io/k8s-dns-kube-dns-amd64:1.15.4",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "60c0d1e40a731a94ff815c0b09ab3dac9d80825e86a80a4066a6ea5059fd4b66": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/port-[dns-local (UDP-10053)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[dns-local (UDP-10053)]",
                "name": "dns-local (UDP-10053)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "9ade46e36cac157e224d7fa38260de7bfa764e1a55cbfe0e056716daedf2a33b": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/port-[dns-local (UDP-10053)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "dns-local",
                    "containerPort": 10053,
                    "protocol": "UDP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "db058c1409662a21e71faa2e7c5ddcd59b41472146745876f98290d19d94bf08": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/port-[dns-tcp-local (TCP-10053)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[dns-tcp-local (TCP-10053)]",
                "name": "dns-tcp-local (TCP-10053)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "6a00febec16e0f40e0a09b4f066182d5ddad5f15b949c70bc8d3135728c75b73": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/port-[dns-tcp-local (TCP-10053)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "dns-tcp-local",
                    "containerPort": 10053,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "1cbed01add38f064402559ff6211907bf9c2d029b6e218015efae02d0e1beee9": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/port-[metrics (TCP-10055)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[metrics (TCP-10055)]",
                "name": "metrics (TCP-10055)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "634d9632c1f11a3c7f894203137dd0e41adb5aedc1f571146ade1c0104a7ef52": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/port-[metrics (TCP-10055)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "metrics",
                    "containerPort": 10055,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "20ff360ff709524ca333d64fca23ec3f8f3451f060017d464cf65beabfb49e8e": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[dnsmasq]",
                "name": "dnsmasq",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f73f1b85acac063c3c814fbd3b006cdcc089c8c9b07633a0684bac4b932ef9fb": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "dnsmasq",
                    "image": "k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.15.4",
                    "args": [
                        "-v=2",
                        "-logtostderr",
                        "-configDir=/etc/k8s/dns/dnsmasq-nanny",
                        "-restartDnsmasq=true",
                        "--",
                        "-k",
                        "--cache-size=1000",
                        "--no-negcache",
                        "--log-facility=-",
                        "--server=/cluster.local/127.0.0.1#10053",
                        "--server=/in-addr.arpa/127.0.0.1#10053",
                        "--server=/ip6.arpa/127.0.0.1#10053"
                    ],
                    "ports": [
                        {
                            "name": "dns",
                            "containerPort": 53,
                            "protocol": "UDP"
                        },
                        {
                            "name": "dns-tcp",
                            "containerPort": 53,
                            "protocol": "TCP"
                        }
                    ],
                    "resources": {
                        "requests": {
                            "cpu": "150m",
                            "memory": "20Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "kube-dns-config",
                            "mountPath": "/etc/k8s/dns/dnsmasq-nanny"
                        }
                    ],
                    "livenessProbe": {
                        "httpGet": {
                            "path": "/healthcheck/dnsmasq",
                            "port": 10054,
                            "scheme": "HTTP"
                        },
                        "initialDelaySeconds": 60,
                        "timeoutSeconds": 5,
                        "periodSeconds": 10,
                        "successThreshold": 1,
                        "failureThreshold": 5
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "58a99911fff26ccb1a95f1b40491bc873ff2909e661d8efbb9bca4f1bdfeceba": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "15.00%",
                    "memory request": "20 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "827a08d00c7032a7165e4582ea4fc7d660dc1d8ff5a19a824830832185d6c0e9": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/image-[k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64]",
                "name": "k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f1cdbbf04e58920d666465578aa1fc30028864fc4d772bf9e3e5b3b54f7318cf": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/image-[k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "k8s-dns-dnsmasq-nanny-amd64",
                    "tag": "1.15.4",
                    "fullName": "k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.15.4",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "6d2f15437e055ff4f0394ddd9cb276a16cb20f6a88ead0185407b8bc710482f5": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/port-[dns (UDP-53)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[dns (UDP-53)]",
                "name": "dns (UDP-53)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "93b09f53661afe3ee5d86fb5349e7b430cf6be4617af226d7cc13fbf2f01e9a6": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/port-[dns (UDP-53)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "dns",
                    "containerPort": 53,
                    "protocol": "UDP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "3b71d34adc6d9f49eaaea111e0eafec8e6a768eedbc03843c1f8c14d7e778b6d": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/port-[dns-tcp (TCP-53)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[dns-tcp (TCP-53)]",
                "name": "dns-tcp (TCP-53)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "bc7ca0930872664da3e3cdac8420ec140f5a0e0da8efd4c151238937867d5299": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/port-[dns-tcp (TCP-53)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "dns-tcp",
                    "containerPort": 53,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "e966b0444ba5e1e5077568cecb01f861960473fcae7ea9bc7f08f802036310d1": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[sidecar]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[sidecar]",
                "name": "sidecar",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f02a402ee28aa0bb3ff209dfce85f61632b6e4fc9f4530545087f93525767b54": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[sidecar]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "sidecar",
                    "image": "k8s.gcr.io/k8s-dns-sidecar-amd64:1.15.4",
                    "args": [
                        "--v=2",
                        "--logtostderr",
                        "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                        "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                    ],
                    "ports": [
                        {
                            "name": "metrics",
                            "containerPort": 10054,
                            "protocol": "TCP"
                        }
                    ],
                    "resources": {
                        "requests": {
                            "cpu": "10m",
                            "memory": "20Mi"
                        }
                    },
                    "livenessProbe": {
                        "httpGet": {
                            "path": "/metrics",
                            "port": 10054,
                            "scheme": "HTTP"
                        },
                        "initialDelaySeconds": 60,
                        "timeoutSeconds": 5,
                        "periodSeconds": 10,
                        "successThreshold": 1,
                        "failureThreshold": 5
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "900b0a668af86aae999a320b25c8a538b13d036ecd740b653977a6059bdf02a9": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[sidecar]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "1.00%",
                    "memory request": "20 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "0603a12e0e9f9236f4118ff06cda4a8675115e8d6d13ee107a83c9e48d4c6b72": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[sidecar]/image-[k8s.gcr.io/k8s-dns-sidecar-amd64]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/k8s-dns-sidecar-amd64]",
                "name": "k8s.gcr.io/k8s-dns-sidecar-amd64",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f417102c4a1dabd5ea3b0bc31da13d4fafa73030508eb4fcc7341a69de8e210b": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[sidecar]/image-[k8s.gcr.io/k8s-dns-sidecar-amd64]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "k8s-dns-sidecar-amd64",
                    "tag": "1.15.4",
                    "fullName": "k8s.gcr.io/k8s-dns-sidecar-amd64:1.15.4",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "b400170480163ea920afb52616473ff6b00e6c34653046f5f3dbcefc678d2eb9": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[sidecar]/port-[metrics (TCP-10054)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[metrics (TCP-10054)]",
                "name": "metrics (TCP-10054)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "e32eba7b284d291e6f2883ef83805efeb10eec83c4f744486f5cf2e52c82cca1": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[sidecar]/port-[metrics (TCP-10054)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "metrics",
                    "containerPort": 10054,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "611897fc8e89bcea155cf4c28c56e062f847ef56343d960da91b0ff0d746fe48": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[prometheus-to-sd]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[prometheus-to-sd]",
                "name": "prometheus-to-sd",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "079d61e570380ac9b8c05973f189436d168330f6ba278689b8a36185c6e0bf42": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[prometheus-to-sd]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "prometheus-to-sd",
                    "image": "k8s.gcr.io/prometheus-to-sd:v0.4.2",
                    "command": [
                        "/monitor",
                        "--source=kubedns:http://localhost:10054?whitelisted=probe_kubedns_latency_ms,probe_kubedns_errors,dnsmasq_misses,dnsmasq_hits",
                        "--stackdriver-prefix=container.googleapis.com/internal/addons",
                        "--api-override=https://monitoring.googleapis.com/",
                        "--pod-id=$(POD_NAME)",
                        "--namespace-id=$(POD_NAMESPACE)",
                        "--v=2"
                    ],
                    "env": [
                        {
                            "name": "POD_NAME",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "POD_NAMESPACE",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.namespace"
                                }
                            }
                        }
                    ],
                    "resources": {},
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "6607ab081b43622e8d681d28b8a3eb6fa5028c6e7dcd327c4446852f1f7aab4b": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[prometheus-to-sd]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "POD_NAME": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "POD_NAMESPACE": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.namespace\n</pre>"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "644c93beaec78fcb2f0f8caade31a73fc0f03c6501dac6807b3a370c2421d894": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[prometheus-to-sd]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {},
                "tooltip": "Resource usage for a single container."
            }
        },
        "4993b5bb0ae8d028b0364269f9fe80c1bdfbe97669c09ead64d8407b939f53d9": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[prometheus-to-sd]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/prometheus-to-sd]",
                "name": "k8s.gcr.io/prometheus-to-sd",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "963163dd61a111451e5d597eeb4e1f574e8c45552dd509aa182664538099118e": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[prometheus-to-sd]/image-[k8s.gcr.io/prometheus-to-sd]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "prometheus-to-sd",
                    "tag": "v0.4.2",
                    "fullName": "k8s.gcr.io/prometheus-to-sd:v0.4.2",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "08f82b30edf8057751c1a3bd48ced858241e1580c8c14bfb44729144494092c6": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/cont-[default-http-backend]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[default-http-backend]",
                "name": "default-http-backend",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "df2e023fdd680ab0fecfe8f5759226fc359e4099233c0c9b6a5c10713f325158": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/cont-[default-http-backend]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "default-http-backend",
                    "image": "k8s.gcr.io/defaultbackend-amd64:1.5",
                    "ports": [
                        {
                            "containerPort": 8080,
                            "protocol": "TCP"
                        }
                    ],
                    "resources": {
                        "limits": {
                            "cpu": "10m",
                            "memory": "20Mi"
                        },
                        "requests": {
                            "cpu": "10m",
                            "memory": "20Mi"
                        }
                    },
                    "livenessProbe": {
                        "httpGet": {
                            "path": "/healthz",
                            "port": 8080,
                            "scheme": "HTTP"
                        },
                        "initialDelaySeconds": 30,
                        "timeoutSeconds": 5,
                        "periodSeconds": 10,
                        "successThreshold": 1,
                        "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "8fa0b5e1ce09e9b8d90515201b551c61117d5d3840f2ca81aa75e28181ad8e43": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/cont-[default-http-backend]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "1.00%",
                    "cpu limit": "1.00%",
                    "memory request": "20 MB",
                    "memory limit": "20 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "776c9f560d208e66a3e0c4d0da9c848ca7c424ee9724e9be36a82f2e334d7e7a": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/cont-[default-http-backend]/image-[k8s.gcr.io/defaultbackend-amd64]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/defaultbackend-amd64]",
                "name": "k8s.gcr.io/defaultbackend-amd64",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "e1d05c0c6cbd374147567d5f4a827a3c7ab0c9954ecfc23c9e072d8aafa9f527": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/cont-[default-http-backend]/image-[k8s.gcr.io/defaultbackend-amd64]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "defaultbackend-amd64",
                    "tag": "1.5",
                    "fullName": "k8s.gcr.io/defaultbackend-amd64:1.5",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "dc9138cfd57b7f2b0dbf60bb2ef2d0775b28eec67e4c7f80606f2376e4d9ec20": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/cont-[default-http-backend]/port-[TCP-8080]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[TCP-8080]",
                "name": "TCP-8080",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "1796309452e8daaf832b649cf04fe414220878eaead742c2689269bae07e4f39": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/cont-[default-http-backend]/port-[TCP-8080]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "containerPort": 8080,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "33ffefd495cc71bc9f95fe87de3c18efb600c2178129b0662902a34feb46f19f": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[metrics-server]",
                "name": "metrics-server",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "087358f389e288b8bebda8238666a26fbcccd45312446e49cd9fccdacc0d7a03": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "metrics-server",
                    "image": "k8s.gcr.io/metrics-server-amd64:v0.3.1",
                    "command": [
                        "/metrics-server",
                        "--metric-resolution=30s",
                        "--kubelet-port=10255",
                        "--deprecated-kubelet-completely-insecure=true",
                        "--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP"
                    ],
                    "ports": [
                        {
                            "name": "https",
                            "containerPort": 443,
                            "protocol": "TCP"
                        }
                    ],
                    "resources": {
                        "limits": {
                            "cpu": "43m",
                            "memory": "55Mi"
                        },
                        "requests": {
                            "cpu": "43m",
                            "memory": "55Mi"
                        }
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "88e03d56adb79cd3d3acbb4b0dc16f66fd2a3fc3d9bca9e2f674e29aed742d1e": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "4.30%",
                    "cpu limit": "4.30%",
                    "memory request": "55 MB",
                    "memory limit": "55 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "8e1a94f3994a6fced9d00ef22a268ccadd2220c2d88ad2660e046beeddd5c587": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server]/image-[k8s.gcr.io/metrics-server-amd64]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/metrics-server-amd64]",
                "name": "k8s.gcr.io/metrics-server-amd64",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "055d9f0e952231ff2b588a1130e056845f6c5e8fa397e6b3d0a3b985848d8b95": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server]/image-[k8s.gcr.io/metrics-server-amd64]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "metrics-server-amd64",
                    "tag": "v0.3.1",
                    "fullName": "k8s.gcr.io/metrics-server-amd64:v0.3.1",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "02ba7e6c4463b6af19539856a6510a533e3cdbd7b2efb66458367d938e50e4b3": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server]/port-[https (TCP-443)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[https (TCP-443)]",
                "name": "https (TCP-443)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b22194c54ec2b82d8a74d08ad9c375362693fe03a128082ab236f2d0c44704e6": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server]/port-[https (TCP-443)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "https",
                    "containerPort": 443,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "a639558ccbb3464b5dcf2417adf9348f64c2ace6f489cdbd46a2f297305df74f": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server-nanny]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[metrics-server-nanny]",
                "name": "metrics-server-nanny",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "7b24cea2effc09ced7ed2e820228526c4f5cbfcc8f1aa8e840991217a41c0a0c": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server-nanny]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "metrics-server-nanny",
                    "image": "k8s.gcr.io/addon-resizer:1.8.4",
                    "command": [
                        "/pod_nanny",
                        "--config-dir=/etc/config",
                        "--cpu=40m",
                        "--extra-cpu=0.5m",
                        "--memory=35Mi",
                        "--extra-memory=4Mi",
                        "--threshold=5",
                        "--deployment=metrics-server-v0.3.1",
                        "--container=metrics-server",
                        "--poll-period=300000",
                        "--estimator=exponential",
                        "--minClusterSize=5"
                    ],
                    "env": [
                        {
                            "name": "MY_POD_NAME",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "MY_POD_NAMESPACE",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.namespace"
                                }
                            }
                        }
                    ],
                    "resources": {
                        "limits": {
                            "cpu": "100m",
                            "memory": "300Mi"
                        },
                        "requests": {
                            "cpu": "5m",
                            "memory": "50Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "metrics-server-config-volume",
                            "mountPath": "/etc/config"
                        }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "4e94c0619d5ba55bfed4c121dfb37195082ca266958c572c4f4f838c9e11673e": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server-nanny]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "MY_POD_NAME": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "MY_POD_NAMESPACE": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.namespace\n</pre>"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "4581eae20e3bb0dac44a383560d7d39d7dbe3defb92db9a18f33bf5f74821549": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server-nanny]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "0.50%",
                    "cpu limit": "10.00%",
                    "memory request": "50 MB",
                    "memory limit": "300 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "112bd3ea03272c0b378c6a8be14707ec9afdd740d598b50876f4a172d7886eb0": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server-nanny]/image-[k8s.gcr.io/addon-resizer]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[k8s.gcr.io/addon-resizer]",
                "name": "k8s.gcr.io/addon-resizer",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "3bd1ef751ad1d3cd146b0744f39ba520df0c94cf67514ce28ad61b0aa3bfb6fa": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server-nanny]/image-[k8s.gcr.io/addon-resizer]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "addon-resizer",
                    "tag": "1.8.4",
                    "fullName": "k8s.gcr.io/addon-resizer:1.8.4",
                    "repository": "k8s.gcr.io"
                }
            }
        },
        "7a3df5c5304196cde070589563bce66deebd0904accc60f2a96b7c97c8a54021": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[gprod-addr-main-app]",
                "name": "gprod-addr-main-app",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "7433d2e3cd644b2b91b2e1ce23ed1de6dcbc7e59da899524d8d336261936ab10": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "gprod-addr-main-app",
                    "image": "gcr.io/berlioz-demo-gprod/addr-main-app@sha256:b5e6317de1171f784784f65f8b563c46c069dd6b3093547a3ee4f3cfb2ddb7e1",
                    "ports": [
                        {
                            "name": "default",
                            "containerPort": 4000,
                            "protocol": "TCP"
                        }
                    ],
                    "env": [
                        {
                            "name": "BERLIOZ_TASK_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.uid"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_IDENTITY",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_ADDRESS",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.podIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_INSTANCE_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "spec.nodeName"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_HOST_IP",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.hostIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_CONSUMES_PATH",
                            "value": "/etc/berlioz/consumes"
                        },
                        {
                            "name": "BERLIOZ_AGENT_PATH",
                            "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_ADDRESS",
                            "value": "0.0.0.0"
                        },
                        {
                            "name": "BERLIOZ_INFRA",
                            "value": "k8s"
                        },
                        {
                            "name": "BERLIOZ_REGION",
                            "value": "us-west1"
                        },
                        {
                            "name": "BERLIOZ_CLUSTER",
                            "value": "addr"
                        },
                        {
                            "name": "BERLIOZ_SECTOR",
                            "value": "main"
                        },
                        {
                            "name": "BERLIOZ_SERVICE",
                            "value": "app"
                        },
                        {
                            "name": "BERLIOZ_IDENTITY_PREFIX",
                            "value": "gprod-addr-main-app-"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_PORT_DEFAULT",
                            "value": "4000"
                        },
                        {
                            "name": "BERLIOZ_PROVIDED_PORT_DEFAULT",
                            "value": "4000"
                        },
                        {
                            "name": "GOOGLE_APPLICATION_CREDENTIALS",
                            "value": "/var/secrets/google/service-key.json"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_HOST",
                            "value": "gprod-sprt-main-dtrace-client"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_PORT",
                            "value": "80"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_URL",
                            "value": "http://gprod-sprt-main-dtrace-client:80"
                        }
                    ],
                    "resources": {
                        "requests": {
                            "cpu": "100m",
                            "memory": "100Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "google-cloud-key",
                            "mountPath": "/var/secrets/google"
                        },
                        {
                            "name": "gprod-addr-main-app-consumes",
                            "mountPath": "/etc/berlioz/consumes"
                        },
                        {
                            "name": "gprod-addr-main-app-consumesdatabase",
                            "mountPath": "/etc/berlioz/consumes/database"
                        }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "d359e5989eb955a54c13083daa1f6f57b8747fca80bbfec923d00030182d94cb": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "BERLIOZ_TASK_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.uid\n</pre>",
                    "BERLIOZ_IDENTITY": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "BERLIOZ_ADDRESS": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.podIP\n</pre>",
                    "BERLIOZ_INSTANCE_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: spec.nodeName\n</pre>",
                    "BERLIOZ_HOST_IP": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.hostIP\n</pre>",
                    "BERLIOZ_CONSUMES_PATH": "/etc/berlioz/consumes",
                    "BERLIOZ_AGENT_PATH": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}",
                    "BERLIOZ_LISTEN_ADDRESS": "0.0.0.0",
                    "BERLIOZ_INFRA": "k8s",
                    "BERLIOZ_REGION": "us-west1",
                    "BERLIOZ_CLUSTER": "addr",
                    "BERLIOZ_SECTOR": "main",
                    "BERLIOZ_SERVICE": "app",
                    "BERLIOZ_IDENTITY_PREFIX": "gprod-addr-main-app-",
                    "BERLIOZ_LISTEN_PORT_DEFAULT": "4000",
                    "BERLIOZ_PROVIDED_PORT_DEFAULT": "4000",
                    "GOOGLE_APPLICATION_CREDENTIALS": "/var/secrets/google/service-key.json",
                    "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_HOST": "gprod-sprt-main-dtrace-client",
                    "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_PORT": "80",
                    "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_URL": "http://gprod-sprt-main-dtrace-client:80"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "bb3aefd0411d4e4f9dcad6f639ec57dc708d3197d499783aa532afebb3fbf809": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "e9338d49a9a8828e7682c2de5e8c66d330556528ccf5968680a7885282b51b99": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/image-[gcr.io/berlioz-demo-gprod/addr-main-app@sha256]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[gcr.io/berlioz-demo-gprod/addr-main-app@sha256]",
                "name": "gcr.io/berlioz-demo-gprod/addr-main-app@sha256",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "decc026ff592d534d33b06765a36bc93ab7e8d3397d340a8a6a6a07fc18761ee": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/image-[gcr.io/berlioz-demo-gprod/addr-main-app@sha256]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "addr-main-app@sha256",
                    "tag": "b5e6317de1171f784784f65f8b563c46c069dd6b3093547a3ee4f3cfb2ddb7e1",
                    "fullName": "gcr.io/berlioz-demo-gprod/addr-main-app@sha256:b5e6317de1171f784784f65f8b563c46c069dd6b3093547a3ee4f3cfb2ddb7e1",
                    "repository": "gcr.io/berlioz-demo-gprod"
                }
            }
        },
        "8d70ab0684afbd4e1d5fb3358f552343207b044c0909b8f5ce24412750c268c2": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/port-[default (TCP-4000)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[default (TCP-4000)]",
                "name": "default (TCP-4000)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "4c3e6c76b0f55ff6e1078f393d11168a411a1155ad6ddf141663330334ff049b": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/port-[default (TCP-4000)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "default",
                    "containerPort": 4000,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "50d46ffbe4eb3a59e37083b3e5d217246a671d54c6c37b8ab37d432b07d51686": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[cloudsql-proxy-gprod-addr-uswest1c-main-book]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[cloudsql-proxy-gprod-addr-uswest1c-main-book]",
                "name": "cloudsql-proxy-gprod-addr-uswest1c-main-book",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "76c4e9787d2c783e61d01d831fdaf0ee345a02ff86bdf6949b19b14d14dc2137": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[cloudsql-proxy-gprod-addr-uswest1c-main-book]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "cloudsql-proxy-gprod-addr-uswest1c-main-book",
                    "image": "gcr.io/cloudsql-docker/gce-proxy:1.11",
                    "command": [
                        "/cloud_sql_proxy",
                        "-instances=berlioz-demo-gprod:us-west1:gprod-addr-uswest1c-main-book-imdtwdlfqd=tcp:3306",
                        "-credential_file=/var/secrets/google/service-key.json"
                    ],
                    "resources": {},
                    "volumeMounts": [
                        {
                            "name": "google-cloud-key",
                            "readOnly": true,
                            "mountPath": "/var/secrets/google"
                        }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                        "runAsUser": 2,
                        "allowPrivilegeEscalation": false
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "5831f04130231d2497d345a5e41e22e1ebd1587def5a2509885efbfe102d2b52": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[cloudsql-proxy-gprod-addr-uswest1c-main-book]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {},
                "tooltip": "Resource usage for a single container."
            }
        },
        "ef93412add530fa5587a7b32bd620eb8a35749ada2ee640ff4bc4717c8f1d0ef": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[cloudsql-proxy-gprod-addr-uswest1c-main-book]/image-[gcr.io/cloudsql-docker/gce-proxy]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[gcr.io/cloudsql-docker/gce-proxy]",
                "name": "gcr.io/cloudsql-docker/gce-proxy",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "2c61dcc737f7f6ffd04b51c87216004f6898895b93575599768a179ef2f651b3": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[cloudsql-proxy-gprod-addr-uswest1c-main-book]/image-[gcr.io/cloudsql-docker/gce-proxy]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "gce-proxy",
                    "tag": "1.11",
                    "fullName": "gcr.io/cloudsql-docker/gce-proxy:1.11",
                    "repository": "gcr.io/cloudsql-docker"
                }
            }
        },
        "7c238f49e124293170da2886a8c9fa9d250df3e1bd3000cecc1bf3d83c6f9e84": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[gprod-addr-main-web]",
                "name": "gprod-addr-main-web",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "c4b60bf75aa7dde0558fbefc12b82cb64805f6427814d4c3393fcfc638a02af1": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "gprod-addr-main-web",
                    "image": "gcr.io/berlioz-demo-gprod/addr-main-web@sha256:f1d780f19ebcd5564c54b2e4eff5017ce59683b0725909ac3c9401f0def4bb02",
                    "ports": [
                        {
                            "name": "default",
                            "containerPort": 3000,
                            "protocol": "TCP"
                        }
                    ],
                    "env": [
                        {
                            "name": "BERLIOZ_TASK_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.uid"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_IDENTITY",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_ADDRESS",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.podIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_INSTANCE_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "spec.nodeName"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_HOST_IP",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.hostIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_CONSUMES_PATH",
                            "value": "/etc/berlioz/consumes"
                        },
                        {
                            "name": "BERLIOZ_AGENT_PATH",
                            "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_ADDRESS",
                            "value": "0.0.0.0"
                        },
                        {
                            "name": "BERLIOZ_INFRA",
                            "value": "k8s"
                        },
                        {
                            "name": "BERLIOZ_REGION",
                            "value": "us-west1"
                        },
                        {
                            "name": "BERLIOZ_CLUSTER",
                            "value": "addr"
                        },
                        {
                            "name": "BERLIOZ_SECTOR",
                            "value": "main"
                        },
                        {
                            "name": "BERLIOZ_SERVICE",
                            "value": "web"
                        },
                        {
                            "name": "BERLIOZ_IDENTITY_PREFIX",
                            "value": "gprod-addr-main-web-"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_PORT_DEFAULT",
                            "value": "3000"
                        },
                        {
                            "name": "BERLIOZ_PROVIDED_PORT_DEFAULT",
                            "value": "3000"
                        },
                        {
                            "name": "GOOGLE_APPLICATION_CREDENTIALS",
                            "value": "/var/secrets/google/service-key.json"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_SERVICE_APP_HOST",
                            "value": "gprod-addr-main-app-default"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_SERVICE_APP_PORT",
                            "value": "80"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_SERVICE_APP_URL",
                            "value": "http://gprod-addr-main-app-default:80"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_HOST",
                            "value": "gprod-sprt-main-dtrace-client"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_PORT",
                            "value": "80"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_URL",
                            "value": "http://gprod-sprt-main-dtrace-client:80"
                        }
                    ],
                    "resources": {
                        "requests": {
                            "cpu": "100m",
                            "memory": "100Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "google-cloud-key",
                            "mountPath": "/var/secrets/google"
                        }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "8aafe8ceafcc519050364bc2b813649d67ea95c9c18a5fb8c4a97bc4d9cf138c": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "BERLIOZ_TASK_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.uid\n</pre>",
                    "BERLIOZ_IDENTITY": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "BERLIOZ_ADDRESS": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.podIP\n</pre>",
                    "BERLIOZ_INSTANCE_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: spec.nodeName\n</pre>",
                    "BERLIOZ_HOST_IP": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.hostIP\n</pre>",
                    "BERLIOZ_CONSUMES_PATH": "/etc/berlioz/consumes",
                    "BERLIOZ_AGENT_PATH": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}",
                    "BERLIOZ_LISTEN_ADDRESS": "0.0.0.0",
                    "BERLIOZ_INFRA": "k8s",
                    "BERLIOZ_REGION": "us-west1",
                    "BERLIOZ_CLUSTER": "addr",
                    "BERLIOZ_SECTOR": "main",
                    "BERLIOZ_SERVICE": "web",
                    "BERLIOZ_IDENTITY_PREFIX": "gprod-addr-main-web-",
                    "BERLIOZ_LISTEN_PORT_DEFAULT": "3000",
                    "BERLIOZ_PROVIDED_PORT_DEFAULT": "3000",
                    "GOOGLE_APPLICATION_CREDENTIALS": "/var/secrets/google/service-key.json",
                    "BERLIOZ_CONSUMED_SERVICE_APP_HOST": "gprod-addr-main-app-default",
                    "BERLIOZ_CONSUMED_SERVICE_APP_PORT": "80",
                    "BERLIOZ_CONSUMED_SERVICE_APP_URL": "http://gprod-addr-main-app-default:80",
                    "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_HOST": "gprod-sprt-main-dtrace-client",
                    "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_PORT": "80",
                    "BERLIOZ_CONSUMED_CLUSTER_SPRT_DTREP_URL": "http://gprod-sprt-main-dtrace-client:80"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "4735d6f497cb03a04584baf13883742984ef0f4f144fe23aa58b622b7bfd9ab7": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "100 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "79a7c1df7a3cee3ac0be64e82f8ef80a28265ee61083f4e282103b5d93ef6eb7": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/image-[gcr.io/berlioz-demo-gprod/addr-main-web@sha256]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[gcr.io/berlioz-demo-gprod/addr-main-web@sha256]",
                "name": "gcr.io/berlioz-demo-gprod/addr-main-web@sha256",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "eddfd92a4604d1cf456cabed8ed98f360fd55472e92cc31cda8071422ef89e18": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/image-[gcr.io/berlioz-demo-gprod/addr-main-web@sha256]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "addr-main-web@sha256",
                    "tag": "f1d780f19ebcd5564c54b2e4eff5017ce59683b0725909ac3c9401f0def4bb02",
                    "fullName": "gcr.io/berlioz-demo-gprod/addr-main-web@sha256:f1d780f19ebcd5564c54b2e4eff5017ce59683b0725909ac3c9401f0def4bb02",
                    "repository": "gcr.io/berlioz-demo-gprod"
                }
            }
        },
        "b5461c5887f42bb1ad6d1c8ae7a0177c95f67f5606c948881a87586d1eb5fb5e": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/port-[default (TCP-3000)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[default (TCP-3000)]",
                "name": "default (TCP-3000)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "20e4fea8346e6f391f32eb4ca8ae36aadbe0660b298504b9d4aa4d387191ab98": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/port-[default (TCP-3000)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "default",
                    "containerPort": 3000,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "0b928a6e570dc6ea5554aa49ab7886148cc40d45d9aae537f8198c607f2b8f63": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[gprod-sprt-main-dtrace]",
                "name": "gprod-sprt-main-dtrace",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "88e16c7fa2bdbe0ab0e4fbd04d425281efdfebfc949ab7712ab011347d11dbf6": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "gprod-sprt-main-dtrace",
                    "image": "jaegertracing/all-in-one",
                    "ports": [
                        {
                            "name": "client",
                            "containerPort": 9411,
                            "protocol": "TCP"
                        },
                        {
                            "name": "web",
                            "containerPort": 16686,
                            "protocol": "TCP"
                        }
                    ],
                    "env": [
                        {
                            "name": "BERLIOZ_TASK_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.uid"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_IDENTITY",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_ADDRESS",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.podIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_INSTANCE_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "spec.nodeName"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_HOST_IP",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.hostIP"
                                }
                            }
                        },
                        {
                            "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                            "value": "9411"
                        },
                        {
                            "name": "BERLIOZ_CONSUMES_PATH",
                            "value": "/etc/berlioz/consumes"
                        },
                        {
                            "name": "BERLIOZ_AGENT_PATH",
                            "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_ADDRESS",
                            "value": "0.0.0.0"
                        },
                        {
                            "name": "BERLIOZ_INFRA",
                            "value": "k8s"
                        },
                        {
                            "name": "BERLIOZ_REGION",
                            "value": "us-west1"
                        },
                        {
                            "name": "BERLIOZ_CLUSTER",
                            "value": "sprt"
                        },
                        {
                            "name": "BERLIOZ_SECTOR",
                            "value": "main"
                        },
                        {
                            "name": "BERLIOZ_SERVICE",
                            "value": "dtrace"
                        },
                        {
                            "name": "BERLIOZ_IDENTITY_PREFIX",
                            "value": "gprod-sprt-main-dtrace-"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_PORT_CLIENT",
                            "value": "9411"
                        },
                        {
                            "name": "BERLIOZ_PROVIDED_PORT_CLIENT",
                            "value": "9411"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_PORT_WEB",
                            "value": "16686"
                        },
                        {
                            "name": "BERLIOZ_PROVIDED_PORT_WEB",
                            "value": "16686"
                        },
                        {
                            "name": "GOOGLE_APPLICATION_CREDENTIALS",
                            "value": "/var/secrets/google/service-key.json"
                        }
                    ],
                    "resources": {
                        "requests": {
                            "cpu": "100m",
                            "memory": "300Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "google-cloud-key",
                            "mountPath": "/var/secrets/google"
                        }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "Always"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "7d5f1acb812beb72d757cf3cb8560c403a16eefc0f8e1731d5a6323931d2e3e4": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "BERLIOZ_TASK_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.uid\n</pre>",
                    "BERLIOZ_IDENTITY": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "BERLIOZ_ADDRESS": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.podIP\n</pre>",
                    "BERLIOZ_INSTANCE_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: spec.nodeName\n</pre>",
                    "BERLIOZ_HOST_IP": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.hostIP\n</pre>",
                    "COLLECTOR_ZIPKIN_HTTP_PORT": "9411",
                    "BERLIOZ_CONSUMES_PATH": "/etc/berlioz/consumes",
                    "BERLIOZ_AGENT_PATH": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}",
                    "BERLIOZ_LISTEN_ADDRESS": "0.0.0.0",
                    "BERLIOZ_INFRA": "k8s",
                    "BERLIOZ_REGION": "us-west1",
                    "BERLIOZ_CLUSTER": "sprt",
                    "BERLIOZ_SECTOR": "main",
                    "BERLIOZ_SERVICE": "dtrace",
                    "BERLIOZ_IDENTITY_PREFIX": "gprod-sprt-main-dtrace-",
                    "BERLIOZ_LISTEN_PORT_CLIENT": "9411",
                    "BERLIOZ_PROVIDED_PORT_CLIENT": "9411",
                    "BERLIOZ_LISTEN_PORT_WEB": "16686",
                    "BERLIOZ_PROVIDED_PORT_WEB": "16686",
                    "GOOGLE_APPLICATION_CREDENTIALS": "/var/secrets/google/service-key.json"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "dfc48d8764f14c858d7d98c379c6325c9fe91b46bae3fd65dd6ec660a247077c": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "300 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "9eb372bb802b0d38dfa68983bb42b029f0e0a97e13351b8a486fa31ec7dec587": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/image-[jaegertracing/all-in-one]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[jaegertracing/all-in-one]",
                "name": "jaegertracing/all-in-one",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "dcc46655d67f7c88f5c6d69aebd37391ddd01c020e6e5a286dde02934c3f8f50": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/image-[jaegertracing/all-in-one]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "all-in-one",
                    "tag": "latest",
                    "fullName": "jaegertracing/all-in-one",
                    "repository": "jaegertracing"
                }
            }
        },
        "2ba86c67b9cfc1a1a245fcc203d481afc2eb75e99bdaa66695792a6e438534e5": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/port-[client (TCP-9411)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[client (TCP-9411)]",
                "name": "client (TCP-9411)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "0a102915399b52a60a85d216ae7a24ac43a6f0cee2f79f7d8ccc65f7502b1351": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/port-[client (TCP-9411)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "client",
                    "containerPort": 9411,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "a2574768124dc0500d5bbc6c4d7db971c08445ec5f19e9855d3d860104bd5cc1": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/port-[web (TCP-16686)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[web (TCP-16686)]",
                "name": "web (TCP-16686)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f522f9cef9828f34a0ca29519d25c50680df28296791e6f4f402199893bc075d": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/port-[web (TCP-16686)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "web",
                    "containerPort": 16686,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "81c6ec7e189d6a25b409b926b24fcd2969969357f6740942427e342fb52fc6f3": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[gprod-sprt-main-grfna]",
                "name": "gprod-sprt-main-grfna",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "65e4247060283b14716571e148838fa3ae40492add3fd6e45220feb08d21fecd": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "gprod-sprt-main-grfna",
                    "image": "berliozcloud/grafana",
                    "ports": [
                        {
                            "name": "default",
                            "containerPort": 3000,
                            "protocol": "TCP"
                        }
                    ],
                    "env": [
                        {
                            "name": "BERLIOZ_TASK_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.uid"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_IDENTITY",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_ADDRESS",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.podIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_INSTANCE_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "spec.nodeName"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_HOST_IP",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.hostIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_CONSUMES_PATH",
                            "value": "/etc/berlioz/consumes"
                        },
                        {
                            "name": "BERLIOZ_AGENT_PATH",
                            "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_ADDRESS",
                            "value": "0.0.0.0"
                        },
                        {
                            "name": "BERLIOZ_INFRA",
                            "value": "k8s"
                        },
                        {
                            "name": "BERLIOZ_REGION",
                            "value": "us-west1"
                        },
                        {
                            "name": "BERLIOZ_CLUSTER",
                            "value": "sprt"
                        },
                        {
                            "name": "BERLIOZ_SECTOR",
                            "value": "main"
                        },
                        {
                            "name": "BERLIOZ_SERVICE",
                            "value": "grfna"
                        },
                        {
                            "name": "BERLIOZ_IDENTITY_PREFIX",
                            "value": "gprod-sprt-main-grfna-"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_PORT_DEFAULT",
                            "value": "3000"
                        },
                        {
                            "name": "BERLIOZ_PROVIDED_PORT_DEFAULT",
                            "value": "3000"
                        },
                        {
                            "name": "GOOGLE_APPLICATION_CREDENTIALS",
                            "value": "/var/secrets/google/service-key.json"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_SERVICE_PRMTS_SERVER_HOST",
                            "value": "gprod-sprt-main-prmts-server"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_SERVICE_PRMTS_SERVER_PORT",
                            "value": "80"
                        },
                        {
                            "name": "BERLIOZ_CONSUMED_SERVICE_PRMTS_SERVER_URL",
                            "value": "http://gprod-sprt-main-prmts-server:80"
                        }
                    ],
                    "resources": {
                        "requests": {
                            "cpu": "100m",
                            "memory": "250Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "google-cloud-key",
                            "mountPath": "/var/secrets/google"
                        }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "Always"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "d1c529b0f775f34de81b09e754e673d7746ded3ab8ec8f6cc4d8941753a4289b": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "BERLIOZ_TASK_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.uid\n</pre>",
                    "BERLIOZ_IDENTITY": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "BERLIOZ_ADDRESS": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.podIP\n</pre>",
                    "BERLIOZ_INSTANCE_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: spec.nodeName\n</pre>",
                    "BERLIOZ_HOST_IP": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.hostIP\n</pre>",
                    "BERLIOZ_CONSUMES_PATH": "/etc/berlioz/consumes",
                    "BERLIOZ_AGENT_PATH": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}",
                    "BERLIOZ_LISTEN_ADDRESS": "0.0.0.0",
                    "BERLIOZ_INFRA": "k8s",
                    "BERLIOZ_REGION": "us-west1",
                    "BERLIOZ_CLUSTER": "sprt",
                    "BERLIOZ_SECTOR": "main",
                    "BERLIOZ_SERVICE": "grfna",
                    "BERLIOZ_IDENTITY_PREFIX": "gprod-sprt-main-grfna-",
                    "BERLIOZ_LISTEN_PORT_DEFAULT": "3000",
                    "BERLIOZ_PROVIDED_PORT_DEFAULT": "3000",
                    "GOOGLE_APPLICATION_CREDENTIALS": "/var/secrets/google/service-key.json",
                    "BERLIOZ_CONSUMED_SERVICE_PRMTS_SERVER_HOST": "gprod-sprt-main-prmts-server",
                    "BERLIOZ_CONSUMED_SERVICE_PRMTS_SERVER_PORT": "80",
                    "BERLIOZ_CONSUMED_SERVICE_PRMTS_SERVER_URL": "http://gprod-sprt-main-prmts-server:80"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "a0f2374c128a5f0490399ba01363e5e6f7efa0e818da28dc5265f4867383b9ba": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "250 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "6f4f1b8638d70caa0b3773905d30fabf8f685b3da681dfd020b9076d54e43d2f": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]/image-[berliozcloud/grafana]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[berliozcloud/grafana]",
                "name": "berliozcloud/grafana",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "3cbb3f0ab6949f9c78400131cd1593293f2c64730881e4b02993828fb53d29af": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]/image-[berliozcloud/grafana]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "grafana",
                    "tag": "latest",
                    "fullName": "berliozcloud/grafana",
                    "repository": "berliozcloud"
                }
            }
        },
        "97129e6315b4490ca5e12812868814a82aea8525c6b61b67c23e6728a1146355": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]/port-[default (TCP-3000)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[default (TCP-3000)]",
                "name": "default (TCP-3000)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "bea0ca66f2f81c7619bbfab2fe7c7702cf0e07ac0310174a5658e537c0f5ec82": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]/port-[default (TCP-3000)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "default",
                    "containerPort": 3000,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "687d84f37a71ad7faddae7dea5b4275f2f2caf174deeb4cd51ddf38646333c3c": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]",
            "kind": "cont",
            "config_kind": "node",
            "config": {
                "rn": "cont-[gprod-sprt-main-prmts]",
                "name": "gprod-sprt-main-prmts",
                "kind": "cont",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b588302b8854c24c240bbc5b3719fbf0c6adebe015eb39524662b0821447e760": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]",
            "kind": "cont",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "gprod-sprt-main-prmts",
                    "image": "berliozcloud/prometheus",
                    "ports": [
                        {
                            "name": "server",
                            "containerPort": 9090,
                            "protocol": "TCP"
                        },
                        {
                            "name": "push",
                            "containerPort": 9091,
                            "protocol": "TCP"
                        }
                    ],
                    "env": [
                        {
                            "name": "BERLIOZ_TASK_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.uid"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_IDENTITY",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "metadata.name"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_ADDRESS",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.podIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_INSTANCE_ID",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "spec.nodeName"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_HOST_IP",
                            "valueFrom": {
                                "fieldRef": {
                                    "apiVersion": "v1",
                                    "fieldPath": "status.hostIP"
                                }
                            }
                        },
                        {
                            "name": "BERLIOZ_CONSUMES_PATH",
                            "value": "/etc/berlioz/consumes"
                        },
                        {
                            "name": "BERLIOZ_AGENT_PATH",
                            "value": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_ADDRESS",
                            "value": "0.0.0.0"
                        },
                        {
                            "name": "BERLIOZ_INFRA",
                            "value": "k8s"
                        },
                        {
                            "name": "BERLIOZ_REGION",
                            "value": "us-west1"
                        },
                        {
                            "name": "BERLIOZ_CLUSTER",
                            "value": "sprt"
                        },
                        {
                            "name": "BERLIOZ_SECTOR",
                            "value": "main"
                        },
                        {
                            "name": "BERLIOZ_SERVICE",
                            "value": "prmts"
                        },
                        {
                            "name": "BERLIOZ_IDENTITY_PREFIX",
                            "value": "gprod-sprt-main-prmts-"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_PORT_SERVER",
                            "value": "9090"
                        },
                        {
                            "name": "BERLIOZ_PROVIDED_PORT_SERVER",
                            "value": "9090"
                        },
                        {
                            "name": "BERLIOZ_LISTEN_PORT_PUSH",
                            "value": "9091"
                        },
                        {
                            "name": "BERLIOZ_PROVIDED_PORT_PUSH",
                            "value": "9091"
                        },
                        {
                            "name": "GOOGLE_APPLICATION_CREDENTIALS",
                            "value": "/var/secrets/google/service-key.json"
                        }
                    ],
                    "resources": {
                        "requests": {
                            "cpu": "100m",
                            "memory": "400Mi"
                        }
                    },
                    "volumeMounts": [
                        {
                            "name": "google-cloud-key",
                            "mountPath": "/var/secrets/google"
                        }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "Always"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "2ef0d98188a8754580218faee92cd7997fead1e144c986e2715793dae792bc7d": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]",
            "kind": "cont",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "key-value",
                "id": "env",
                "title": "Environment Variables",
                "order": 10,
                "config": {
                    "BERLIOZ_TASK_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.uid\n</pre>",
                    "BERLIOZ_IDENTITY": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: metadata.name\n</pre>",
                    "BERLIOZ_ADDRESS": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.podIP\n</pre>",
                    "BERLIOZ_INSTANCE_ID": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: spec.nodeName\n</pre>",
                    "BERLIOZ_HOST_IP": "<pre>fieldRef:\n  apiVersion: v1\n  fieldPath: status.hostIP\n</pre>",
                    "BERLIOZ_CONSUMES_PATH": "/etc/berlioz/consumes",
                    "BERLIOZ_AGENT_PATH": "ws://${BERLIOZ_HOST_IP}:55555/${BERLIOZ_TASK_ID}",
                    "BERLIOZ_LISTEN_ADDRESS": "0.0.0.0",
                    "BERLIOZ_INFRA": "k8s",
                    "BERLIOZ_REGION": "us-west1",
                    "BERLIOZ_CLUSTER": "sprt",
                    "BERLIOZ_SECTOR": "main",
                    "BERLIOZ_SERVICE": "prmts",
                    "BERLIOZ_IDENTITY_PREFIX": "gprod-sprt-main-prmts-",
                    "BERLIOZ_LISTEN_PORT_SERVER": "9090",
                    "BERLIOZ_PROVIDED_PORT_SERVER": "9090",
                    "BERLIOZ_LISTEN_PORT_PUSH": "9091",
                    "BERLIOZ_PROVIDED_PORT_PUSH": "9091",
                    "GOOGLE_APPLICATION_CREDENTIALS": "/var/secrets/google/service-key.json"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "83b6d8790a044d8b9ae602155f71c1fd51955f745ebf9f4ae391cbc8c5cbdbad": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]",
            "kind": "cont",
            "config_kind": "props",
            "name": "resources",
            "config": {
                "kind": "key-value",
                "id": "resources",
                "title": "Resources",
                "order": 7,
                "config": {
                    "cpu request": "10.00%",
                    "memory request": "400 MB"
                },
                "tooltip": "Resource usage for a single container."
            }
        },
        "81c32805ce42cd72588839b79db1b113879b0f6733bb9128d92b3767979e343e": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/image-[berliozcloud/prometheus]",
            "kind": "image",
            "config_kind": "node",
            "config": {
                "rn": "image-[berliozcloud/prometheus]",
                "name": "berliozcloud/prometheus",
                "kind": "image",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "1a78cc5cded2be9db97d9cf949983f7e7b05a3ebe79032eea2d465fdb4eb4f30": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/image-[berliozcloud/prometheus]",
            "kind": "image",
            "config_kind": "props",
            "name": "props",
            "config": {
                "kind": "key-value",
                "id": "props",
                "title": "Properties",
                "order": 10,
                "config": {
                    "name": "prometheus",
                    "tag": "latest",
                    "fullName": "berliozcloud/prometheus",
                    "repository": "berliozcloud"
                }
            }
        },
        "3633a30ff65b4cc45720441186eebc4640bc5a7e5a2ba4003e59967c7ea4b24e": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/port-[server (TCP-9090)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[server (TCP-9090)]",
                "name": "server (TCP-9090)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "9d645935351e8930a82a77a5f049c0848327ef07876ed39f899992623fa6f6b8": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/port-[server (TCP-9090)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "server",
                    "containerPort": 9090,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "9064af6c42182bd0b3238e6bd6901a39dc545d673bc5bcc48846f0b86e707f6f": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/port-[push (TCP-9091)]",
            "kind": "port",
            "config_kind": "node",
            "config": {
                "rn": "port-[push (TCP-9091)]",
                "name": "push (TCP-9091)",
                "kind": "port",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "53bd784f027115843beb789e7b8a887bfc23531ffab644eefdb4895af7133b22": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/port-[push (TCP-9091)]",
            "kind": "port",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "push",
                    "containerPort": 9091,
                    "protocol": "TCP"
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "9fb23dda3d378b8ac31abe5644b3752fdcea750dec2e4b3e8a9627a91af73a38": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "86d6cd64b804fd9cc850d3c9247bc2c2f775032b0f63158102c15046b6ce9ee0": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 2
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "61df737c596b015d5c243e2c6d54f165060e50d20abe33769199a566f0b42761": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "0659d586662109c296092352bb047904822645117050c5e76855272a689834c6": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-berlioz-main-agent",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "3575c563d3d56fb94a8ca092a49432eb1a0737e34c331e3557ee2deaab6711e1": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/vol-[Volumes]/vol-[google-cloud-key]/secret-[gprod-berlioz-main-agent]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-berlioz-main-agent]",
                "name": "gprod-berlioz-main-agent",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "cf5b8d9c9340ef4aaae3a990e222d8756d2d526169fb46e9bc5d44fed6906739": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/vol-[Volumes]/vol-[var-run-docker-sock]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[var-run-docker-sock]",
                "name": "var-run-docker-sock",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "ed501cb8ee278f3a907ff6b21e8daaff05b3d6a5ded03abcfb4941759fe2c1e2": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/vol-[Volumes]/vol-[var-run-docker-sock]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "var-run-docker-sock",
                    "hostPath": {
                        "path": "/var/run/docker.sock",
                        "type": ""
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "33dc73bf3be97a1d9cfae8d2c8b07cb0ba858d54c0080bb78cb0430096f8f7d6": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f75dbc8081b1017477a21387d4cbc7b99962c3ba2fa7ea0272b3dfdf9a1b9d70": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-berlioz-main-agent",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "e6db99962fab22516e113e8728fb489298f60e4c6fe612e3a33b546b97320582": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "google-cloud-key",
                    "mountPath": "/var/secrets/google"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "17379114f71bb8dcae7bafb765477b1acde7a3511cb65c16d124e609bba91439": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/vol-[google-cloud-key]/secret-[gprod-berlioz-main-agent]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-berlioz-main-agent]",
                "name": "gprod-berlioz-main-agent",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "16060f9431f5395627efd28f1beb970fa14e663ad6101457b9c5a370e5450440": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/vol-[var-run-docker-sock]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[var-run-docker-sock]",
                "name": "var-run-docker-sock",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "ce0cceab2f0a4e9ebf4508ed362b520226939bbf2719ab9413ca23f81bcb94e3": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/vol-[var-run-docker-sock]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "var-run-docker-sock",
                    "hostPath": {
                        "path": "/var/run/docker.sock",
                        "type": ""
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "ab0cdccaf051bb7cb9f189695fa34a5232f0e212def12fd52af8c74fa9deb9c8": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]/cont-[gprod-berlioz-main-agent]/vol-[var-run-docker-sock]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "var-run-docker-sock",
                    "mountPath": "/var/run/docker.sock"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "1a8f18a218185d244e90000805dfcaf84885b654abebd8081a094fea6fd88deb": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b21c2222d3c4c5b3ab7e8a943c17720f0c594f39d8c58b1ff32dbc43e9f3c5d0": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "309eea80effb58e40f83b70313af1a2d7f351c6b4c64519d53693fd1e5b5efc5": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "df25a628a391a1149f698f8be22b4471fd73a2dc901028e13c88c9178f67ae07": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-berlioz-main-ctlr",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "d83d7227e74a1f307540691e6083407ce8ca559ad75546c29d831904a809764f": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/vol-[Volumes]/vol-[google-cloud-key]/secret-[gprod-berlioz-main-ctlr]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-berlioz-main-ctlr]",
                "name": "gprod-berlioz-main-ctlr",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "73c7d65e1a9731fe735299b77105c09e5356c25e5a23e676ca175cd98b77e8bc": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/cont-[gprod-berlioz-main-ctlr]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "7de12bd53caf01ed1139c0406ddef1351ef2b3df768a1bb746e577bdac5bad69": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/cont-[gprod-berlioz-main-ctlr]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-berlioz-main-ctlr",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "f0f6ac99b5377e5a32bc995092d777c7a7db658c877903b1934aa88b9d08bd47": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/cont-[gprod-berlioz-main-ctlr]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "google-cloud-key",
                    "mountPath": "/var/secrets/google"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "3f64bddaaadfef03911fe3e1372f27b93e24d3120f824c0089b831cd46025319": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]/cont-[gprod-berlioz-main-ctlr]/vol-[google-cloud-key]/secret-[gprod-berlioz-main-ctlr]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-berlioz-main-ctlr]",
                "name": "gprod-berlioz-main-ctlr",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "85ed42aa19842f462a1080595070c4dbab776125fab45cda139b7f1cbdc3212e": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "9d5d4406a3a2755569b1e05e2c627b6bc156d20f0086b304e18911aa9ed5c588": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 3
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "0c06ae4a93047d109ea7df1b76cd8def565434fc5c57fdf8674097939605ae07": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/vol-[Volumes]/vol-[varlog]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[varlog]",
                "name": "varlog",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "440d9c122ce5c8b4880a16c38cee6c7ba8251d48b09df6541ee49bce3527576f": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/vol-[Volumes]/vol-[varlog]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "varlog",
                    "hostPath": {
                        "path": "/var/log",
                        "type": ""
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "04decbcce4dc88e185eed5cc9c0221d3c9faa3846e6a79d87c34d6e7b7962679": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/vol-[Volumes]/vol-[varlibdockercontainers]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[varlibdockercontainers]",
                "name": "varlibdockercontainers",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "a2556acf107305ec4c3c369b96cac02fd1861d35f169465bb6a6d0dbb8751899": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/vol-[Volumes]/vol-[varlibdockercontainers]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "varlibdockercontainers",
                    "hostPath": {
                        "path": "/var/lib/docker/containers",
                        "type": ""
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "6095bf3c5fb46d4b90875512aa9352f305b23642fdf1450f6fba45036f4f76f1": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/vol-[Volumes]/vol-[config-volume]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[config-volume]",
                "name": "config-volume",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "221b7e9d1daf452c48e4aca81026ef984ac50f833848d9baee85d68bde3da524": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/vol-[Volumes]/vol-[config-volume]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "config-volume",
                    "configMap": {
                        "name": "fluentd-gcp-config-old-v1.2.5",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "ce91cae0f86669c0042fb20e41a22eedb5faeec3532ce56c0a245d4dbccffbb5": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/vol-[Volumes]/vol-[config-volume]/configmap-[fluentd-gcp-config-old-v1.2.5]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[fluentd-gcp-config-old-v1.2.5]",
                "name": "fluentd-gcp-config-old-v1.2.5",
                "kind": "configmap",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "6dd0ddcf2d4d86ad460ddc65ad8d3a803d96487ec234a998440f307db2a0a4c8": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/vol-[Volumes]/vol-[config-volume]/configmap-[fluentd-gcp-config-old-v1.2.5]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "containers.input.conf": "# This configuration file for Fluentd is used\n# to watch changes to Docker log files that live in the\n# directory /var/lib/docker/containers/ and are symbolically\n# linked to from the /var/log/containers directory using names that capture the\n# pod name and container name. These logs are then submitted to\n# Google Cloud Logging which assumes the installation of the cloud-logging plug-in.\n#\n# Example\n# =======\n# A line in the Docker log file might look like this JSON:\n#\n# {\"log\":\"2014/09/25 21:15:03 Got request with path wombat\\\\n\",\n#  \"stream\":\"stderr\",\n#   \"time\":\"2014-09-25T21:15:03.499185026Z\"}\n#\n# The original tag is derived from the log file's location.\n# For example a Docker container's logs might be in the directory:\n#  /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b\n# and in the file:\n#  997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\n# where 997599971ee6... is the Docker ID of the running container.\n# The Kubernetes kubelet makes a symbolic link to this file on the host\n# machine in the /var/log/containers directory which includes the pod name,\n# the namespace name and the Kubernetes container name:\n#    synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\n#    ->\n#    /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\n# The /var/log directory on the host is mapped to the /var/log directory in the container\n# running this instance of Fluentd and we end up collecting the file:\n#   /var/log/containers/synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\n# This results in the tag:\n#  var.log.containers.synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\n# where 'synthetic-logger-0.25lps-pod' is the pod name, 'default' is the\n# namespace name, 'synth-lgr' is the container name and '997599971ee6..' is\n# the container ID.\n# The record reformer is used is discard the var.log.containers prefix and\n# the Docker container ID suffix and \"kubernetes.\" is pre-pended giving the tag:\n#   kubernetes.synthetic-logger-0.25lps-pod_default_synth-lgr\n# Tag is then parsed by google_cloud plugin and translated to the metadata,\n# visible in the log viewer\n\n# Json Log Example:\n# {\"log\":\"[info:2016-02-16T16:04:05.930-08:00] Some log text here\\n\",\"stream\":\"stdout\",\"time\":\"2016-02-17T00:04:05.931087621Z\"}\n# CRI Log Example:\n# 2016-02-17T00:04:05.931087621Z stdout F [info:2016-02-16T16:04:05.930-08:00] Some log text here\n<source>\n  @type tail\n  path /var/log/containers/*.log\n  pos_file /var/log/gcp-containers.log.pos\n  # Tags at this point are in the format of:\n  # reform.var.log.containers.<POD_NAME>_<NAMESPACE_NAME>_<CONTAINER_NAME>-<CONTAINER_ID>.log\n  tag reform.*\n  read_from_head true\n  <parse>\n    @type multi_format\n    <pattern>\n      format json\n      time_key time\n      time_format %Y-%m-%dT%H:%M:%S.%NZ\n    </pattern>\n    <pattern>\n      format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/\n      time_format %Y-%m-%dT%H:%M:%S.%N%:z\n    </pattern>\n  </parse>\n</source>\n\n<filter reform.**>\n  @type parser\n  format /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<log>.*)/\n  reserve_data true\n  suppress_parse_error_log true\n  emit_invalid_record_to_error false\n  key_name log\n</filter>\n\n<match reform.**>\n  @type record_reformer\n  enable_ruby true\n  # Tags at this point are in the format of:\n  # 'raw.kubernetes.<POD_NAME>_<NAMESPACE_NAME>_<CONTAINER_NAME>'.\n  tag raw.kubernetes.${tag_suffix[4].split('-')[0..-2].join('-')}\n</match>\n\n# Detect exceptions in the log output and forward them as one log entry.\n<match raw.kubernetes.**>\n  @type detect_exceptions\n\n  remove_tag_prefix raw\n  message log\n  stream stream\n  multiline_flush_interval 5\n  max_bytes 500000\n  max_lines 1000\n</match>",
                        "monitoring.conf": "# This source is used to acquire approximate process start timestamp,\n# which purpose is explained before the corresponding output plugin.\n<source>\n  @type exec\n  command /bin/sh -c 'date +%s'\n  tag process_start\n  time_format %Y-%m-%d %H:%M:%S\n  keys process_start_timestamp\n</source>\n\n# This filter is used to convert process start timestamp to integer\n# value for correct ingestion in the prometheus output plugin.\n<filter process_start>\n  @type record_transformer\n  enable_ruby true\n  auto_typecast true\n  <record>\n    process_start_timestamp ${record[\"process_start_timestamp\"].to_i}\n  </record>\n</filter>",
                        "output.conf": "# This match is placed before the all-matching output to provide metric\n# exporter with a process start timestamp for correct exporting of\n# cumulative metrics to Stackdriver.\n<match process_start>\n  @type prometheus\n\n  <metric>\n    type gauge\n    name process_start_time_seconds\n    desc Timestamp of the process start in seconds\n    key process_start_timestamp\n  </metric>\n</match>\n\n# This filter allows to count the number of log entries read by fluentd\n# before they are processed by the output plugin. This in turn allows to\n# monitor the number of log entries that were read but never sent, e.g.\n# because of liveness probe removing buffer.\n<filter **>\n  @type prometheus\n  <metric>\n    type counter\n    name logging_entry_count\n    desc Total number of log entries generated by either application containers or system components\n  </metric>\n</filter>\n\n# TODO(instrumentation): Reconsider this workaround later.\n# Trim the entries which exceed slightly less than 100KB, to avoid\n# dropping them. It is a necessity, because Stackdriver only supports\n# entries that are up to 100KB in size.\n<filter kubernetes.**>\n  @type record_transformer\n  enable_ruby true\n  <record>\n    log ${record['log'].length > 100000 ? \"[Trimmed]#{record['log'][0..100000]}...\" : record['log']}\n  </record>\n</filter>\n\n# Do not collect fluentd's own logs to avoid infinite loops.\n<match fluent.**>\n  @type null\n</match>\n\n# We use 2 output stanzas - one to handle the container logs and one to handle\n# the node daemon logs, the latter of which explicitly sends its logs to the\n# compute.googleapis.com service rather than container.googleapis.com to keep\n# them separate since most users don't care about the node logs.\n<match kubernetes.**>\n  @type google_cloud\n\n  # Try to detect JSON formatted log entries.\n  detect_json true\n  # Collect metrics in Prometheus registry about plugin activity.\n  enable_monitoring true\n  monitoring_type prometheus\n  # Allow log entries from multiple containers to be sent in the same request.\n  split_logs_by_tag false\n  # Set the buffer type to file to improve the reliability and reduce the memory consumption\n  buffer_type file\n  buffer_path /var/log/fluentd-buffers/kubernetes.containers.buffer\n  # Set queue_full action to block because we want to pause gracefully\n  # in case of the off-the-limits load instead of throwing an exception\n  buffer_queue_full_action block\n  # Set the chunk limit conservatively to avoid exceeding the recommended\n  # chunk size of 5MB per write request.\n  buffer_chunk_limit 1M\n  # Cap the combined memory usage of this buffer and the one below to\n  # 1MiB/chunk * (6 + 2) chunks = 8 MiB\n  buffer_queue_limit 6\n  # Never wait more than 5 seconds before flushing logs in the non-error case.\n  flush_interval 5s\n  # Never wait longer than 30 seconds between retries.\n  max_retry_wait 30\n  # Disable the limit on the number of retries (retry forever).\n  disable_retry_limit\n  # Use multiple threads for processing.\n  num_threads 2\n  use_grpc true\n</match>\n\n# Keep a smaller buffer here since these logs are less important than the user's\n# container logs.\n<match **>\n  @type google_cloud\n\n  detect_json true\n  enable_monitoring true\n  monitoring_type prometheus\n  # Allow entries from multiple system logs to be sent in the same request.\n  split_logs_by_tag false\n  detect_subservice false\n  buffer_type file\n  buffer_path /var/log/fluentd-buffers/kubernetes.system.buffer\n  buffer_queue_full_action block\n  buffer_chunk_limit 1M\n  buffer_queue_limit 2\n  flush_interval 5s\n  max_retry_wait 30\n  disable_retry_limit\n  num_threads 2\n  use_grpc true\n</match>",
                        "system.input.conf": "# Example:\n# Dec 21 23:17:22 gke-foo-1-1-4b5cbd14-node-4eoj startupscript: Finished running startup script /var/run/google.startup.script\n<source>\n  @type tail\n  format syslog\n  path /var/log/startupscript.log\n  pos_file /var/log/gcp-startupscript.log.pos\n  tag startupscript\n</source>\n\n# Examples:\n# time=\"2016-02-04T06:51:03.053580605Z\" level=info msg=\"GET /containers/json\"\n# time=\"2016-02-04T07:53:57.505612354Z\" level=error msg=\"HTTP Error\" err=\"No such image: -f\" statusCode=404\n# TODO(random-liu): Remove this after cri container runtime rolls out.\n<source>\n  @type tail\n  format /^time=\"(?<time>[^)]*)\" level=(?<severity>[^ ]*) msg=\"(?<message>[^\"]*)\"( err=\"(?<error>[^\"]*)\")?( statusCode=($<status_code>\\d+))?/\n  path /var/log/docker.log\n  pos_file /var/log/gcp-docker.log.pos\n  tag docker\n</source>\n\n# Example:\n# 2016/02/04 06:52:38 filePurge: successfully removed file /var/etcd/data/member/wal/00000000000006d0-00000000010a23d1.wal\n<source>\n  @type tail\n  # Not parsing this, because it doesn't have anything particularly useful to\n  # parse out of it (like severities).\n  format none\n  path /var/log/etcd.log\n  pos_file /var/log/gcp-etcd.log.pos\n  tag etcd\n</source>\n\n# Multi-line parsing is required for all the kube logs because very large log\n# statements, such as those that include entire object bodies, get split into\n# multiple lines by glog.\n\n# Example:\n# I0204 07:32:30.020537    3368 server.go:1048] POST /stats/container/: (13.972191ms) 200 [[Go-http-client/1.1] 10.244.1.3:40537]\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kubelet.log\n  pos_file /var/log/gcp-kubelet.log.pos\n  tag kubelet\n</source>\n\n# Example:\n# I1118 21:26:53.975789       6 proxier.go:1096] Port \"nodePort for kube-system/default-http-backend:http\" (:31429/tcp) was open before and is still needed\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-proxy.log\n  pos_file /var/log/gcp-kube-proxy.log.pos\n  tag kube-proxy\n</source>\n\n# Example:\n# I0204 07:00:19.604280       5 handlers.go:131] GET /api/v1/nodes: (1.624207ms) 200 [[kube-controller-manager/v1.1.3 (linux/amd64) kubernetes/6a81b50] 127.0.0.1:38266]\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-apiserver.log\n  pos_file /var/log/gcp-kube-apiserver.log.pos\n  tag kube-apiserver\n</source>\n\n# Example:\n# I0204 06:55:31.872680       5 servicecontroller.go:277] LB already exists and doesn't need update for service kube-system/kube-ui\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-controller-manager.log\n  pos_file /var/log/gcp-kube-controller-manager.log.pos\n  tag kube-controller-manager\n</source>\n\n# Example:\n# W0204 06:49:18.239674       7 reflector.go:245] pkg/scheduler/factory/factory.go:193: watch of *api.Service ended with: 401: The event in requested index is outdated and cleared (the requested history has been cleared [2578313/2577886]) [2579312]\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-scheduler.log\n  pos_file /var/log/gcp-kube-scheduler.log.pos\n  tag kube-scheduler\n</source>\n\n# Example:\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/glbc.log\n  pos_file /var/log/gcp-glbc.log.pos\n  tag glbc\n</source>\n\n# Example:\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/cluster-autoscaler.log\n  pos_file /var/log/gcp-cluster-autoscaler.log.pos\n  tag cluster-autoscaler\n</source>\n\n# Logs from systemd-journal for interesting services.\n# TODO(random-liu): Keep this for compatibility, remove this after\n# cri container runtime rolls out.\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"docker.service\" }]\n  pos_file /var/log/gcp-journald-docker.pos\n  read_from_head true\n  tag docker\n</source>\n\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"containerd.service\" }]\n  pos_file /var/log/gcp-journald-container-runtime.pos\n  read_from_head true\n  tag container-runtime\n</source>\n\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"kubelet.service\" }]\n  pos_file /var/log/gcp-journald-kubelet.pos\n  read_from_head true\n  tag kubelet\n</source>\n\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"node-problem-detector.service\" }]\n  pos_file /var/log/gcp-journald-node-problem-detector.pos\n  read_from_head true\n  tag node-problem-detector\n</source>"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"containers.input.conf\":\"# This configuration file for Fluentd is used\\n# to watch changes to Docker log files that live in the\\n# directory /var/lib/docker/containers/ and are symbolically\\n# linked to from the /var/log/containers directory using names that capture the\\n# pod name and container name. These logs are then submitted to\\n# Google Cloud Logging which assumes the installation of the cloud-logging plug-in.\\n#\\n# Example\\n# =======\\n# A line in the Docker log file might look like this JSON:\\n#\\n# {\\\"log\\\":\\\"2014/09/25 21:15:03 Got request with path wombat\\\\\\\\n\\\",\\n#  \\\"stream\\\":\\\"stderr\\\",\\n#   \\\"time\\\":\\\"2014-09-25T21:15:03.499185026Z\\\"}\\n#\\n# The original tag is derived from the log file's location.\\n# For example a Docker container's logs might be in the directory:\\n#  /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b\\n# and in the file:\\n#  997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\\n# where 997599971ee6... is the Docker ID of the running container.\\n# The Kubernetes kubelet makes a symbolic link to this file on the host\\n# machine in the /var/log/containers directory which includes the pod name,\\n# the namespace name and the Kubernetes container name:\\n#    synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\\n#    -\\u003e\\n#    /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\\n# The /var/log directory on the host is mapped to the /var/log directory in the container\\n# running this instance of Fluentd and we end up collecting the file:\\n#   /var/log/containers/synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\\n# This results in the tag:\\n#  var.log.containers.synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\\n# where 'synthetic-logger-0.25lps-pod' is the pod name, 'default' is the\\n# namespace name, 'synth-lgr' is the container name and '997599971ee6..' is\\n# the container ID.\\n# The record reformer is used is discard the var.log.containers prefix and\\n# the Docker container ID suffix and \\\"kubernetes.\\\" is pre-pended giving the tag:\\n#   kubernetes.synthetic-logger-0.25lps-pod_default_synth-lgr\\n# Tag is then parsed by google_cloud plugin and translated to the metadata,\\n# visible in the log viewer\\n\\n# Json Log Example:\\n# {\\\"log\\\":\\\"[info:2016-02-16T16:04:05.930-08:00] Some log text here\\\\n\\\",\\\"stream\\\":\\\"stdout\\\",\\\"time\\\":\\\"2016-02-17T00:04:05.931087621Z\\\"}\\n# CRI Log Example:\\n# 2016-02-17T00:04:05.931087621Z stdout F [info:2016-02-16T16:04:05.930-08:00] Some log text here\\n\\u003csource\\u003e\\n  @type tail\\n  path /var/log/containers/*.log\\n  pos_file /var/log/gcp-containers.log.pos\\n  # Tags at this point are in the format of:\\n  # reform.var.log.containers.\\u003cPOD_NAME\\u003e_\\u003cNAMESPACE_NAME\\u003e_\\u003cCONTAINER_NAME\\u003e-\\u003cCONTAINER_ID\\u003e.log\\n  tag reform.*\\n  read_from_head true\\n  \\u003cparse\\u003e\\n    @type multi_format\\n    \\u003cpattern\\u003e\\n      format json\\n      time_key time\\n      time_format %Y-%m-%dT%H:%M:%S.%NZ\\n    \\u003c/pattern\\u003e\\n    \\u003cpattern\\u003e\\n      format /^(?\\u003ctime\\u003e.+) (?\\u003cstream\\u003estdout|stderr) [^ ]* (?\\u003clog\\u003e.*)$/\\n      time_format %Y-%m-%dT%H:%M:%S.%N%:z\\n    \\u003c/pattern\\u003e\\n  \\u003c/parse\\u003e\\n\\u003c/source\\u003e\\n\\n\\u003cfilter reform.**\\u003e\\n  @type parser\\n  format /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003clog\\u003e.*)/\\n  reserve_data true\\n  suppress_parse_error_log true\\n  emit_invalid_record_to_error false\\n  key_name log\\n\\u003c/filter\\u003e\\n\\n\\u003cmatch reform.**\\u003e\\n  @type record_reformer\\n  enable_ruby true\\n  # Tags at this point are in the format of:\\n  # 'raw.kubernetes.\\u003cPOD_NAME\\u003e_\\u003cNAMESPACE_NAME\\u003e_\\u003cCONTAINER_NAME\\u003e'.\\n  tag raw.kubernetes.${tag_suffix[4].split('-')[0..-2].join('-')}\\n\\u003c/match\\u003e\\n\\n# Detect exceptions in the log output and forward them as one log entry.\\n\\u003cmatch raw.kubernetes.**\\u003e\\n  @type detect_exceptions\\n\\n  remove_tag_prefix raw\\n  message log\\n  stream stream\\n  multiline_flush_interval 5\\n  max_bytes 500000\\n  max_lines 1000\\n\\u003c/match\\u003e\",\"monitoring.conf\":\"# This source is used to acquire approximate process start timestamp,\\n# which purpose is explained before the corresponding output plugin.\\n\\u003csource\\u003e\\n  @type exec\\n  command /bin/sh -c 'date +%s'\\n  tag process_start\\n  time_format %Y-%m-%d %H:%M:%S\\n  keys process_start_timestamp\\n\\u003c/source\\u003e\\n\\n# This filter is used to convert process start timestamp to integer\\n# value for correct ingestion in the prometheus output plugin.\\n\\u003cfilter process_start\\u003e\\n  @type record_transformer\\n  enable_ruby true\\n  auto_typecast true\\n  \\u003crecord\\u003e\\n    process_start_timestamp ${record[\\\"process_start_timestamp\\\"].to_i}\\n  \\u003c/record\\u003e\\n\\u003c/filter\\u003e\",\"output.conf\":\"# This match is placed before the all-matching output to provide metric\\n# exporter with a process start timestamp for correct exporting of\\n# cumulative metrics to Stackdriver.\\n\\u003cmatch process_start\\u003e\\n  @type prometheus\\n\\n  \\u003cmetric\\u003e\\n    type gauge\\n    name process_start_time_seconds\\n    desc Timestamp of the process start in seconds\\n    key process_start_timestamp\\n  \\u003c/metric\\u003e\\n\\u003c/match\\u003e\\n\\n# This filter allows to count the number of log entries read by fluentd\\n# before they are processed by the output plugin. This in turn allows to\\n# monitor the number of log entries that were read but never sent, e.g.\\n# because of liveness probe removing buffer.\\n\\u003cfilter **\\u003e\\n  @type prometheus\\n  \\u003cmetric\\u003e\\n    type counter\\n    name logging_entry_count\\n    desc Total number of log entries generated by either application containers or system components\\n  \\u003c/metric\\u003e\\n\\u003c/filter\\u003e\\n\\n# TODO(instrumentation): Reconsider this workaround later.\\n# Trim the entries which exceed slightly less than 100KB, to avoid\\n# dropping them. It is a necessity, because Stackdriver only supports\\n# entries that are up to 100KB in size.\\n\\u003cfilter kubernetes.**\\u003e\\n  @type record_transformer\\n  enable_ruby true\\n  \\u003crecord\\u003e\\n    log ${record['log'].length \\u003e 100000 ? \\\"[Trimmed]#{record['log'][0..100000]}...\\\" : record['log']}\\n  \\u003c/record\\u003e\\n\\u003c/filter\\u003e\\n\\n# Do not collect fluentd's own logs to avoid infinite loops.\\n\\u003cmatch fluent.**\\u003e\\n  @type null\\n\\u003c/match\\u003e\\n\\n# We use 2 output stanzas - one to handle the container logs and one to handle\\n# the node daemon logs, the latter of which explicitly sends its logs to the\\n# compute.googleapis.com service rather than container.googleapis.com to keep\\n# them separate since most users don't care about the node logs.\\n\\u003cmatch kubernetes.**\\u003e\\n  @type google_cloud\\n\\n  # Try to detect JSON formatted log entries.\\n  detect_json true\\n  # Collect metrics in Prometheus registry about plugin activity.\\n  enable_monitoring true\\n  monitoring_type prometheus\\n  # Allow log entries from multiple containers to be sent in the same request.\\n  split_logs_by_tag false\\n  # Set the buffer type to file to improve the reliability and reduce the memory consumption\\n  buffer_type file\\n  buffer_path /var/log/fluentd-buffers/kubernetes.containers.buffer\\n  # Set queue_full action to block because we want to pause gracefully\\n  # in case of the off-the-limits load instead of throwing an exception\\n  buffer_queue_full_action block\\n  # Set the chunk limit conservatively to avoid exceeding the recommended\\n  # chunk size of 5MB per write request.\\n  buffer_chunk_limit 1M\\n  # Cap the combined memory usage of this buffer and the one below to\\n  # 1MiB/chunk * (6 + 2) chunks = 8 MiB\\n  buffer_queue_limit 6\\n  # Never wait more than 5 seconds before flushing logs in the non-error case.\\n  flush_interval 5s\\n  # Never wait longer than 30 seconds between retries.\\n  max_retry_wait 30\\n  # Disable the limit on the number of retries (retry forever).\\n  disable_retry_limit\\n  # Use multiple threads for processing.\\n  num_threads 2\\n  use_grpc true\\n\\u003c/match\\u003e\\n\\n# Keep a smaller buffer here since these logs are less important than the user's\\n# container logs.\\n\\u003cmatch **\\u003e\\n  @type google_cloud\\n\\n  detect_json true\\n  enable_monitoring true\\n  monitoring_type prometheus\\n  # Allow entries from multiple system logs to be sent in the same request.\\n  split_logs_by_tag false\\n  detect_subservice false\\n  buffer_type file\\n  buffer_path /var/log/fluentd-buffers/kubernetes.system.buffer\\n  buffer_queue_full_action block\\n  buffer_chunk_limit 1M\\n  buffer_queue_limit 2\\n  flush_interval 5s\\n  max_retry_wait 30\\n  disable_retry_limit\\n  num_threads 2\\n  use_grpc true\\n\\u003c/match\\u003e\",\"system.input.conf\":\"# Example:\\n# Dec 21 23:17:22 gke-foo-1-1-4b5cbd14-node-4eoj startupscript: Finished running startup script /var/run/google.startup.script\\n\\u003csource\\u003e\\n  @type tail\\n  format syslog\\n  path /var/log/startupscript.log\\n  pos_file /var/log/gcp-startupscript.log.pos\\n  tag startupscript\\n\\u003c/source\\u003e\\n\\n# Examples:\\n# time=\\\"2016-02-04T06:51:03.053580605Z\\\" level=info msg=\\\"GET /containers/json\\\"\\n# time=\\\"2016-02-04T07:53:57.505612354Z\\\" level=error msg=\\\"HTTP Error\\\" err=\\\"No such image: -f\\\" statusCode=404\\n# TODO(random-liu): Remove this after cri container runtime rolls out.\\n\\u003csource\\u003e\\n  @type tail\\n  format /^time=\\\"(?\\u003ctime\\u003e[^)]*)\\\" level=(?\\u003cseverity\\u003e[^ ]*) msg=\\\"(?\\u003cmessage\\u003e[^\\\"]*)\\\"( err=\\\"(?\\u003cerror\\u003e[^\\\"]*)\\\")?( statusCode=($\\u003cstatus_code\\u003e\\\\d+))?/\\n  path /var/log/docker.log\\n  pos_file /var/log/gcp-docker.log.pos\\n  tag docker\\n\\u003c/source\\u003e\\n\\n# Example:\\n# 2016/02/04 06:52:38 filePurge: successfully removed file /var/etcd/data/member/wal/00000000000006d0-00000000010a23d1.wal\\n\\u003csource\\u003e\\n  @type tail\\n  # Not parsing this, because it doesn't have anything particularly useful to\\n  # parse out of it (like severities).\\n  format none\\n  path /var/log/etcd.log\\n  pos_file /var/log/gcp-etcd.log.pos\\n  tag etcd\\n\\u003c/source\\u003e\\n\\n# Multi-line parsing is required for all the kube logs because very large log\\n# statements, such as those that include entire object bodies, get split into\\n# multiple lines by glog.\\n\\n# Example:\\n# I0204 07:32:30.020537    3368 server.go:1048] POST /stats/container/: (13.972191ms) 200 [[Go-http-client/1.1] 10.244.1.3:40537]\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kubelet.log\\n  pos_file /var/log/gcp-kubelet.log.pos\\n  tag kubelet\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I1118 21:26:53.975789       6 proxier.go:1096] Port \\\"nodePort for kube-system/default-http-backend:http\\\" (:31429/tcp) was open before and is still needed\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-proxy.log\\n  pos_file /var/log/gcp-kube-proxy.log.pos\\n  tag kube-proxy\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0204 07:00:19.604280       5 handlers.go:131] GET /api/v1/nodes: (1.624207ms) 200 [[kube-controller-manager/v1.1.3 (linux/amd64) kubernetes/6a81b50] 127.0.0.1:38266]\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-apiserver.log\\n  pos_file /var/log/gcp-kube-apiserver.log.pos\\n  tag kube-apiserver\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0204 06:55:31.872680       5 servicecontroller.go:277] LB already exists and doesn't need update for service kube-system/kube-ui\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-controller-manager.log\\n  pos_file /var/log/gcp-kube-controller-manager.log.pos\\n  tag kube-controller-manager\\n\\u003c/source\\u003e\\n\\n# Example:\\n# W0204 06:49:18.239674       7 reflector.go:245] pkg/scheduler/factory/factory.go:193: watch of *api.Service ended with: 401: The event in requested index is outdated and cleared (the requested history has been cleared [2578313/2577886]) [2579312]\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-scheduler.log\\n  pos_file /var/log/gcp-kube-scheduler.log.pos\\n  tag kube-scheduler\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/glbc.log\\n  pos_file /var/log/gcp-glbc.log.pos\\n  tag glbc\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/cluster-autoscaler.log\\n  pos_file /var/log/gcp-cluster-autoscaler.log.pos\\n  tag cluster-autoscaler\\n\\u003c/source\\u003e\\n\\n# Logs from systemd-journal for interesting services.\\n# TODO(random-liu): Keep this for compatibility, remove this after\\n# cri container runtime rolls out.\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"docker.service\\\" }]\\n  pos_file /var/log/gcp-journald-docker.pos\\n  read_from_head true\\n  tag docker\\n\\u003c/source\\u003e\\n\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"containerd.service\\\" }]\\n  pos_file /var/log/gcp-journald-container-runtime.pos\\n  read_from_head true\\n  tag container-runtime\\n\\u003c/source\\u003e\\n\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"kubelet.service\\\" }]\\n  pos_file /var/log/gcp-journald-kubelet.pos\\n  read_from_head true\\n  tag kubelet\\n\\u003c/source\\u003e\\n\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"node-problem-detector.service\\\" }]\\n  pos_file /var/log/gcp-journald-node-problem-detector.pos\\n  read_from_head true\\n  tag node-problem-detector\\n\\u003c/source\\u003e\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"fluentd-gcp-config-old-v1.2.5\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2019-11-11T21:20:09Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile"
                        },
                        "name": "fluentd-gcp-config-old-v1.2.5",
                        "namespace": "kube-system",
                        "resourceVersion": "494",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/fluentd-gcp-config-old-v1.2.5",
                        "uid": "0a1cc343-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "e44985a6f5744e858a3ffc0df456b603e4b8643fac05322fcb8d17f64e82c13b": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/vol-[varlog]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[varlog]",
                "name": "varlog",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b066ff60d0ed06d7d52414208448576be6f470820e1f43a9ad9c0905042ea0c3": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/vol-[varlog]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "varlog",
                    "hostPath": {
                        "path": "/var/log",
                        "type": ""
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "9eeeba0adbc24fb8001c3900ce682812ba4cd0813ed2ac64aa6c4e6c6097aa04": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/vol-[varlog]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "varlog",
                    "mountPath": "/var/log"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "20219a583c5c025910bb261a61cb6409b31d1f1260db347d268e9779a06fed78": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/vol-[varlibdockercontainers]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[varlibdockercontainers]",
                "name": "varlibdockercontainers",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b89df3462c89b4beaf2565c105ca5c825f0b677f1516e1e4fc5d0326741cfa3c": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/vol-[varlibdockercontainers]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "varlibdockercontainers",
                    "hostPath": {
                        "path": "/var/lib/docker/containers",
                        "type": ""
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "4f26d81cd48f16c7dc03ab1e758c276d9d93ceb2d21c247940a3a304dec76920": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/vol-[varlibdockercontainers]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "varlibdockercontainers",
                    "readOnly": true,
                    "mountPath": "/var/lib/docker/containers"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "43a9e873bff59be9f60e8f982649e648e83ecbcf90716b4a0b564f9f0e8bfffa": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/vol-[config-volume]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[config-volume]",
                "name": "config-volume",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "462373bf7c93f6262f556c88749975e68a6737a9e241d898fc6f3446fde3edfe": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/vol-[config-volume]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "config-volume",
                    "configMap": {
                        "name": "fluentd-gcp-config-old-v1.2.5",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "85b07843dbe08ae0e8feb79502f0d24ab8f3078d904c7c7cd90b3a13d5eaacb7": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/vol-[config-volume]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "config-volume",
                    "mountPath": "/etc/google-fluentd/config.d"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "4df5c206c8d14cbca773a5094af76c15955f71aa8e2e9cc1c2846d8b69084413": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/vol-[config-volume]/configmap-[fluentd-gcp-config-old-v1.2.5]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[fluentd-gcp-config-old-v1.2.5]",
                "name": "fluentd-gcp-config-old-v1.2.5",
                "kind": "configmap",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "adfd427471bb6f2149e1662e446b3670aaa4b5bed49779a7f603d69d64df265c": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]/cont-[fluentd-gcp]/vol-[config-volume]/configmap-[fluentd-gcp-config-old-v1.2.5]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "containers.input.conf": "# This configuration file for Fluentd is used\n# to watch changes to Docker log files that live in the\n# directory /var/lib/docker/containers/ and are symbolically\n# linked to from the /var/log/containers directory using names that capture the\n# pod name and container name. These logs are then submitted to\n# Google Cloud Logging which assumes the installation of the cloud-logging plug-in.\n#\n# Example\n# =======\n# A line in the Docker log file might look like this JSON:\n#\n# {\"log\":\"2014/09/25 21:15:03 Got request with path wombat\\\\n\",\n#  \"stream\":\"stderr\",\n#   \"time\":\"2014-09-25T21:15:03.499185026Z\"}\n#\n# The original tag is derived from the log file's location.\n# For example a Docker container's logs might be in the directory:\n#  /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b\n# and in the file:\n#  997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\n# where 997599971ee6... is the Docker ID of the running container.\n# The Kubernetes kubelet makes a symbolic link to this file on the host\n# machine in the /var/log/containers directory which includes the pod name,\n# the namespace name and the Kubernetes container name:\n#    synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\n#    ->\n#    /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\n# The /var/log directory on the host is mapped to the /var/log directory in the container\n# running this instance of Fluentd and we end up collecting the file:\n#   /var/log/containers/synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\n# This results in the tag:\n#  var.log.containers.synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\n# where 'synthetic-logger-0.25lps-pod' is the pod name, 'default' is the\n# namespace name, 'synth-lgr' is the container name and '997599971ee6..' is\n# the container ID.\n# The record reformer is used is discard the var.log.containers prefix and\n# the Docker container ID suffix and \"kubernetes.\" is pre-pended giving the tag:\n#   kubernetes.synthetic-logger-0.25lps-pod_default_synth-lgr\n# Tag is then parsed by google_cloud plugin and translated to the metadata,\n# visible in the log viewer\n\n# Json Log Example:\n# {\"log\":\"[info:2016-02-16T16:04:05.930-08:00] Some log text here\\n\",\"stream\":\"stdout\",\"time\":\"2016-02-17T00:04:05.931087621Z\"}\n# CRI Log Example:\n# 2016-02-17T00:04:05.931087621Z stdout F [info:2016-02-16T16:04:05.930-08:00] Some log text here\n<source>\n  @type tail\n  path /var/log/containers/*.log\n  pos_file /var/log/gcp-containers.log.pos\n  # Tags at this point are in the format of:\n  # reform.var.log.containers.<POD_NAME>_<NAMESPACE_NAME>_<CONTAINER_NAME>-<CONTAINER_ID>.log\n  tag reform.*\n  read_from_head true\n  <parse>\n    @type multi_format\n    <pattern>\n      format json\n      time_key time\n      time_format %Y-%m-%dT%H:%M:%S.%NZ\n    </pattern>\n    <pattern>\n      format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/\n      time_format %Y-%m-%dT%H:%M:%S.%N%:z\n    </pattern>\n  </parse>\n</source>\n\n<filter reform.**>\n  @type parser\n  format /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<log>.*)/\n  reserve_data true\n  suppress_parse_error_log true\n  emit_invalid_record_to_error false\n  key_name log\n</filter>\n\n<match reform.**>\n  @type record_reformer\n  enable_ruby true\n  # Tags at this point are in the format of:\n  # 'raw.kubernetes.<POD_NAME>_<NAMESPACE_NAME>_<CONTAINER_NAME>'.\n  tag raw.kubernetes.${tag_suffix[4].split('-')[0..-2].join('-')}\n</match>\n\n# Detect exceptions in the log output and forward them as one log entry.\n<match raw.kubernetes.**>\n  @type detect_exceptions\n\n  remove_tag_prefix raw\n  message log\n  stream stream\n  multiline_flush_interval 5\n  max_bytes 500000\n  max_lines 1000\n</match>",
                        "monitoring.conf": "# This source is used to acquire approximate process start timestamp,\n# which purpose is explained before the corresponding output plugin.\n<source>\n  @type exec\n  command /bin/sh -c 'date +%s'\n  tag process_start\n  time_format %Y-%m-%d %H:%M:%S\n  keys process_start_timestamp\n</source>\n\n# This filter is used to convert process start timestamp to integer\n# value for correct ingestion in the prometheus output plugin.\n<filter process_start>\n  @type record_transformer\n  enable_ruby true\n  auto_typecast true\n  <record>\n    process_start_timestamp ${record[\"process_start_timestamp\"].to_i}\n  </record>\n</filter>",
                        "output.conf": "# This match is placed before the all-matching output to provide metric\n# exporter with a process start timestamp for correct exporting of\n# cumulative metrics to Stackdriver.\n<match process_start>\n  @type prometheus\n\n  <metric>\n    type gauge\n    name process_start_time_seconds\n    desc Timestamp of the process start in seconds\n    key process_start_timestamp\n  </metric>\n</match>\n\n# This filter allows to count the number of log entries read by fluentd\n# before they are processed by the output plugin. This in turn allows to\n# monitor the number of log entries that were read but never sent, e.g.\n# because of liveness probe removing buffer.\n<filter **>\n  @type prometheus\n  <metric>\n    type counter\n    name logging_entry_count\n    desc Total number of log entries generated by either application containers or system components\n  </metric>\n</filter>\n\n# TODO(instrumentation): Reconsider this workaround later.\n# Trim the entries which exceed slightly less than 100KB, to avoid\n# dropping them. It is a necessity, because Stackdriver only supports\n# entries that are up to 100KB in size.\n<filter kubernetes.**>\n  @type record_transformer\n  enable_ruby true\n  <record>\n    log ${record['log'].length > 100000 ? \"[Trimmed]#{record['log'][0..100000]}...\" : record['log']}\n  </record>\n</filter>\n\n# Do not collect fluentd's own logs to avoid infinite loops.\n<match fluent.**>\n  @type null\n</match>\n\n# We use 2 output stanzas - one to handle the container logs and one to handle\n# the node daemon logs, the latter of which explicitly sends its logs to the\n# compute.googleapis.com service rather than container.googleapis.com to keep\n# them separate since most users don't care about the node logs.\n<match kubernetes.**>\n  @type google_cloud\n\n  # Try to detect JSON formatted log entries.\n  detect_json true\n  # Collect metrics in Prometheus registry about plugin activity.\n  enable_monitoring true\n  monitoring_type prometheus\n  # Allow log entries from multiple containers to be sent in the same request.\n  split_logs_by_tag false\n  # Set the buffer type to file to improve the reliability and reduce the memory consumption\n  buffer_type file\n  buffer_path /var/log/fluentd-buffers/kubernetes.containers.buffer\n  # Set queue_full action to block because we want to pause gracefully\n  # in case of the off-the-limits load instead of throwing an exception\n  buffer_queue_full_action block\n  # Set the chunk limit conservatively to avoid exceeding the recommended\n  # chunk size of 5MB per write request.\n  buffer_chunk_limit 1M\n  # Cap the combined memory usage of this buffer and the one below to\n  # 1MiB/chunk * (6 + 2) chunks = 8 MiB\n  buffer_queue_limit 6\n  # Never wait more than 5 seconds before flushing logs in the non-error case.\n  flush_interval 5s\n  # Never wait longer than 30 seconds between retries.\n  max_retry_wait 30\n  # Disable the limit on the number of retries (retry forever).\n  disable_retry_limit\n  # Use multiple threads for processing.\n  num_threads 2\n  use_grpc true\n</match>\n\n# Keep a smaller buffer here since these logs are less important than the user's\n# container logs.\n<match **>\n  @type google_cloud\n\n  detect_json true\n  enable_monitoring true\n  monitoring_type prometheus\n  # Allow entries from multiple system logs to be sent in the same request.\n  split_logs_by_tag false\n  detect_subservice false\n  buffer_type file\n  buffer_path /var/log/fluentd-buffers/kubernetes.system.buffer\n  buffer_queue_full_action block\n  buffer_chunk_limit 1M\n  buffer_queue_limit 2\n  flush_interval 5s\n  max_retry_wait 30\n  disable_retry_limit\n  num_threads 2\n  use_grpc true\n</match>",
                        "system.input.conf": "# Example:\n# Dec 21 23:17:22 gke-foo-1-1-4b5cbd14-node-4eoj startupscript: Finished running startup script /var/run/google.startup.script\n<source>\n  @type tail\n  format syslog\n  path /var/log/startupscript.log\n  pos_file /var/log/gcp-startupscript.log.pos\n  tag startupscript\n</source>\n\n# Examples:\n# time=\"2016-02-04T06:51:03.053580605Z\" level=info msg=\"GET /containers/json\"\n# time=\"2016-02-04T07:53:57.505612354Z\" level=error msg=\"HTTP Error\" err=\"No such image: -f\" statusCode=404\n# TODO(random-liu): Remove this after cri container runtime rolls out.\n<source>\n  @type tail\n  format /^time=\"(?<time>[^)]*)\" level=(?<severity>[^ ]*) msg=\"(?<message>[^\"]*)\"( err=\"(?<error>[^\"]*)\")?( statusCode=($<status_code>\\d+))?/\n  path /var/log/docker.log\n  pos_file /var/log/gcp-docker.log.pos\n  tag docker\n</source>\n\n# Example:\n# 2016/02/04 06:52:38 filePurge: successfully removed file /var/etcd/data/member/wal/00000000000006d0-00000000010a23d1.wal\n<source>\n  @type tail\n  # Not parsing this, because it doesn't have anything particularly useful to\n  # parse out of it (like severities).\n  format none\n  path /var/log/etcd.log\n  pos_file /var/log/gcp-etcd.log.pos\n  tag etcd\n</source>\n\n# Multi-line parsing is required for all the kube logs because very large log\n# statements, such as those that include entire object bodies, get split into\n# multiple lines by glog.\n\n# Example:\n# I0204 07:32:30.020537    3368 server.go:1048] POST /stats/container/: (13.972191ms) 200 [[Go-http-client/1.1] 10.244.1.3:40537]\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kubelet.log\n  pos_file /var/log/gcp-kubelet.log.pos\n  tag kubelet\n</source>\n\n# Example:\n# I1118 21:26:53.975789       6 proxier.go:1096] Port \"nodePort for kube-system/default-http-backend:http\" (:31429/tcp) was open before and is still needed\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-proxy.log\n  pos_file /var/log/gcp-kube-proxy.log.pos\n  tag kube-proxy\n</source>\n\n# Example:\n# I0204 07:00:19.604280       5 handlers.go:131] GET /api/v1/nodes: (1.624207ms) 200 [[kube-controller-manager/v1.1.3 (linux/amd64) kubernetes/6a81b50] 127.0.0.1:38266]\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-apiserver.log\n  pos_file /var/log/gcp-kube-apiserver.log.pos\n  tag kube-apiserver\n</source>\n\n# Example:\n# I0204 06:55:31.872680       5 servicecontroller.go:277] LB already exists and doesn't need update for service kube-system/kube-ui\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-controller-manager.log\n  pos_file /var/log/gcp-kube-controller-manager.log.pos\n  tag kube-controller-manager\n</source>\n\n# Example:\n# W0204 06:49:18.239674       7 reflector.go:245] pkg/scheduler/factory/factory.go:193: watch of *api.Service ended with: 401: The event in requested index is outdated and cleared (the requested history has been cleared [2578313/2577886]) [2579312]\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-scheduler.log\n  pos_file /var/log/gcp-kube-scheduler.log.pos\n  tag kube-scheduler\n</source>\n\n# Example:\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/glbc.log\n  pos_file /var/log/gcp-glbc.log.pos\n  tag glbc\n</source>\n\n# Example:\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/cluster-autoscaler.log\n  pos_file /var/log/gcp-cluster-autoscaler.log.pos\n  tag cluster-autoscaler\n</source>\n\n# Logs from systemd-journal for interesting services.\n# TODO(random-liu): Keep this for compatibility, remove this after\n# cri container runtime rolls out.\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"docker.service\" }]\n  pos_file /var/log/gcp-journald-docker.pos\n  read_from_head true\n  tag docker\n</source>\n\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"containerd.service\" }]\n  pos_file /var/log/gcp-journald-container-runtime.pos\n  read_from_head true\n  tag container-runtime\n</source>\n\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"kubelet.service\" }]\n  pos_file /var/log/gcp-journald-kubelet.pos\n  read_from_head true\n  tag kubelet\n</source>\n\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"node-problem-detector.service\" }]\n  pos_file /var/log/gcp-journald-node-problem-detector.pos\n  read_from_head true\n  tag node-problem-detector\n</source>"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"containers.input.conf\":\"# This configuration file for Fluentd is used\\n# to watch changes to Docker log files that live in the\\n# directory /var/lib/docker/containers/ and are symbolically\\n# linked to from the /var/log/containers directory using names that capture the\\n# pod name and container name. These logs are then submitted to\\n# Google Cloud Logging which assumes the installation of the cloud-logging plug-in.\\n#\\n# Example\\n# =======\\n# A line in the Docker log file might look like this JSON:\\n#\\n# {\\\"log\\\":\\\"2014/09/25 21:15:03 Got request with path wombat\\\\\\\\n\\\",\\n#  \\\"stream\\\":\\\"stderr\\\",\\n#   \\\"time\\\":\\\"2014-09-25T21:15:03.499185026Z\\\"}\\n#\\n# The original tag is derived from the log file's location.\\n# For example a Docker container's logs might be in the directory:\\n#  /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b\\n# and in the file:\\n#  997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\\n# where 997599971ee6... is the Docker ID of the running container.\\n# The Kubernetes kubelet makes a symbolic link to this file on the host\\n# machine in the /var/log/containers directory which includes the pod name,\\n# the namespace name and the Kubernetes container name:\\n#    synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\\n#    -\\u003e\\n#    /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\\n# The /var/log directory on the host is mapped to the /var/log directory in the container\\n# running this instance of Fluentd and we end up collecting the file:\\n#   /var/log/containers/synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\\n# This results in the tag:\\n#  var.log.containers.synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\\n# where 'synthetic-logger-0.25lps-pod' is the pod name, 'default' is the\\n# namespace name, 'synth-lgr' is the container name and '997599971ee6..' is\\n# the container ID.\\n# The record reformer is used is discard the var.log.containers prefix and\\n# the Docker container ID suffix and \\\"kubernetes.\\\" is pre-pended giving the tag:\\n#   kubernetes.synthetic-logger-0.25lps-pod_default_synth-lgr\\n# Tag is then parsed by google_cloud plugin and translated to the metadata,\\n# visible in the log viewer\\n\\n# Json Log Example:\\n# {\\\"log\\\":\\\"[info:2016-02-16T16:04:05.930-08:00] Some log text here\\\\n\\\",\\\"stream\\\":\\\"stdout\\\",\\\"time\\\":\\\"2016-02-17T00:04:05.931087621Z\\\"}\\n# CRI Log Example:\\n# 2016-02-17T00:04:05.931087621Z stdout F [info:2016-02-16T16:04:05.930-08:00] Some log text here\\n\\u003csource\\u003e\\n  @type tail\\n  path /var/log/containers/*.log\\n  pos_file /var/log/gcp-containers.log.pos\\n  # Tags at this point are in the format of:\\n  # reform.var.log.containers.\\u003cPOD_NAME\\u003e_\\u003cNAMESPACE_NAME\\u003e_\\u003cCONTAINER_NAME\\u003e-\\u003cCONTAINER_ID\\u003e.log\\n  tag reform.*\\n  read_from_head true\\n  \\u003cparse\\u003e\\n    @type multi_format\\n    \\u003cpattern\\u003e\\n      format json\\n      time_key time\\n      time_format %Y-%m-%dT%H:%M:%S.%NZ\\n    \\u003c/pattern\\u003e\\n    \\u003cpattern\\u003e\\n      format /^(?\\u003ctime\\u003e.+) (?\\u003cstream\\u003estdout|stderr) [^ ]* (?\\u003clog\\u003e.*)$/\\n      time_format %Y-%m-%dT%H:%M:%S.%N%:z\\n    \\u003c/pattern\\u003e\\n  \\u003c/parse\\u003e\\n\\u003c/source\\u003e\\n\\n\\u003cfilter reform.**\\u003e\\n  @type parser\\n  format /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003clog\\u003e.*)/\\n  reserve_data true\\n  suppress_parse_error_log true\\n  emit_invalid_record_to_error false\\n  key_name log\\n\\u003c/filter\\u003e\\n\\n\\u003cmatch reform.**\\u003e\\n  @type record_reformer\\n  enable_ruby true\\n  # Tags at this point are in the format of:\\n  # 'raw.kubernetes.\\u003cPOD_NAME\\u003e_\\u003cNAMESPACE_NAME\\u003e_\\u003cCONTAINER_NAME\\u003e'.\\n  tag raw.kubernetes.${tag_suffix[4].split('-')[0..-2].join('-')}\\n\\u003c/match\\u003e\\n\\n# Detect exceptions in the log output and forward them as one log entry.\\n\\u003cmatch raw.kubernetes.**\\u003e\\n  @type detect_exceptions\\n\\n  remove_tag_prefix raw\\n  message log\\n  stream stream\\n  multiline_flush_interval 5\\n  max_bytes 500000\\n  max_lines 1000\\n\\u003c/match\\u003e\",\"monitoring.conf\":\"# This source is used to acquire approximate process start timestamp,\\n# which purpose is explained before the corresponding output plugin.\\n\\u003csource\\u003e\\n  @type exec\\n  command /bin/sh -c 'date +%s'\\n  tag process_start\\n  time_format %Y-%m-%d %H:%M:%S\\n  keys process_start_timestamp\\n\\u003c/source\\u003e\\n\\n# This filter is used to convert process start timestamp to integer\\n# value for correct ingestion in the prometheus output plugin.\\n\\u003cfilter process_start\\u003e\\n  @type record_transformer\\n  enable_ruby true\\n  auto_typecast true\\n  \\u003crecord\\u003e\\n    process_start_timestamp ${record[\\\"process_start_timestamp\\\"].to_i}\\n  \\u003c/record\\u003e\\n\\u003c/filter\\u003e\",\"output.conf\":\"# This match is placed before the all-matching output to provide metric\\n# exporter with a process start timestamp for correct exporting of\\n# cumulative metrics to Stackdriver.\\n\\u003cmatch process_start\\u003e\\n  @type prometheus\\n\\n  \\u003cmetric\\u003e\\n    type gauge\\n    name process_start_time_seconds\\n    desc Timestamp of the process start in seconds\\n    key process_start_timestamp\\n  \\u003c/metric\\u003e\\n\\u003c/match\\u003e\\n\\n# This filter allows to count the number of log entries read by fluentd\\n# before they are processed by the output plugin. This in turn allows to\\n# monitor the number of log entries that were read but never sent, e.g.\\n# because of liveness probe removing buffer.\\n\\u003cfilter **\\u003e\\n  @type prometheus\\n  \\u003cmetric\\u003e\\n    type counter\\n    name logging_entry_count\\n    desc Total number of log entries generated by either application containers or system components\\n  \\u003c/metric\\u003e\\n\\u003c/filter\\u003e\\n\\n# TODO(instrumentation): Reconsider this workaround later.\\n# Trim the entries which exceed slightly less than 100KB, to avoid\\n# dropping them. It is a necessity, because Stackdriver only supports\\n# entries that are up to 100KB in size.\\n\\u003cfilter kubernetes.**\\u003e\\n  @type record_transformer\\n  enable_ruby true\\n  \\u003crecord\\u003e\\n    log ${record['log'].length \\u003e 100000 ? \\\"[Trimmed]#{record['log'][0..100000]}...\\\" : record['log']}\\n  \\u003c/record\\u003e\\n\\u003c/filter\\u003e\\n\\n# Do not collect fluentd's own logs to avoid infinite loops.\\n\\u003cmatch fluent.**\\u003e\\n  @type null\\n\\u003c/match\\u003e\\n\\n# We use 2 output stanzas - one to handle the container logs and one to handle\\n# the node daemon logs, the latter of which explicitly sends its logs to the\\n# compute.googleapis.com service rather than container.googleapis.com to keep\\n# them separate since most users don't care about the node logs.\\n\\u003cmatch kubernetes.**\\u003e\\n  @type google_cloud\\n\\n  # Try to detect JSON formatted log entries.\\n  detect_json true\\n  # Collect metrics in Prometheus registry about plugin activity.\\n  enable_monitoring true\\n  monitoring_type prometheus\\n  # Allow log entries from multiple containers to be sent in the same request.\\n  split_logs_by_tag false\\n  # Set the buffer type to file to improve the reliability and reduce the memory consumption\\n  buffer_type file\\n  buffer_path /var/log/fluentd-buffers/kubernetes.containers.buffer\\n  # Set queue_full action to block because we want to pause gracefully\\n  # in case of the off-the-limits load instead of throwing an exception\\n  buffer_queue_full_action block\\n  # Set the chunk limit conservatively to avoid exceeding the recommended\\n  # chunk size of 5MB per write request.\\n  buffer_chunk_limit 1M\\n  # Cap the combined memory usage of this buffer and the one below to\\n  # 1MiB/chunk * (6 + 2) chunks = 8 MiB\\n  buffer_queue_limit 6\\n  # Never wait more than 5 seconds before flushing logs in the non-error case.\\n  flush_interval 5s\\n  # Never wait longer than 30 seconds between retries.\\n  max_retry_wait 30\\n  # Disable the limit on the number of retries (retry forever).\\n  disable_retry_limit\\n  # Use multiple threads for processing.\\n  num_threads 2\\n  use_grpc true\\n\\u003c/match\\u003e\\n\\n# Keep a smaller buffer here since these logs are less important than the user's\\n# container logs.\\n\\u003cmatch **\\u003e\\n  @type google_cloud\\n\\n  detect_json true\\n  enable_monitoring true\\n  monitoring_type prometheus\\n  # Allow entries from multiple system logs to be sent in the same request.\\n  split_logs_by_tag false\\n  detect_subservice false\\n  buffer_type file\\n  buffer_path /var/log/fluentd-buffers/kubernetes.system.buffer\\n  buffer_queue_full_action block\\n  buffer_chunk_limit 1M\\n  buffer_queue_limit 2\\n  flush_interval 5s\\n  max_retry_wait 30\\n  disable_retry_limit\\n  num_threads 2\\n  use_grpc true\\n\\u003c/match\\u003e\",\"system.input.conf\":\"# Example:\\n# Dec 21 23:17:22 gke-foo-1-1-4b5cbd14-node-4eoj startupscript: Finished running startup script /var/run/google.startup.script\\n\\u003csource\\u003e\\n  @type tail\\n  format syslog\\n  path /var/log/startupscript.log\\n  pos_file /var/log/gcp-startupscript.log.pos\\n  tag startupscript\\n\\u003c/source\\u003e\\n\\n# Examples:\\n# time=\\\"2016-02-04T06:51:03.053580605Z\\\" level=info msg=\\\"GET /containers/json\\\"\\n# time=\\\"2016-02-04T07:53:57.505612354Z\\\" level=error msg=\\\"HTTP Error\\\" err=\\\"No such image: -f\\\" statusCode=404\\n# TODO(random-liu): Remove this after cri container runtime rolls out.\\n\\u003csource\\u003e\\n  @type tail\\n  format /^time=\\\"(?\\u003ctime\\u003e[^)]*)\\\" level=(?\\u003cseverity\\u003e[^ ]*) msg=\\\"(?\\u003cmessage\\u003e[^\\\"]*)\\\"( err=\\\"(?\\u003cerror\\u003e[^\\\"]*)\\\")?( statusCode=($\\u003cstatus_code\\u003e\\\\d+))?/\\n  path /var/log/docker.log\\n  pos_file /var/log/gcp-docker.log.pos\\n  tag docker\\n\\u003c/source\\u003e\\n\\n# Example:\\n# 2016/02/04 06:52:38 filePurge: successfully removed file /var/etcd/data/member/wal/00000000000006d0-00000000010a23d1.wal\\n\\u003csource\\u003e\\n  @type tail\\n  # Not parsing this, because it doesn't have anything particularly useful to\\n  # parse out of it (like severities).\\n  format none\\n  path /var/log/etcd.log\\n  pos_file /var/log/gcp-etcd.log.pos\\n  tag etcd\\n\\u003c/source\\u003e\\n\\n# Multi-line parsing is required for all the kube logs because very large log\\n# statements, such as those that include entire object bodies, get split into\\n# multiple lines by glog.\\n\\n# Example:\\n# I0204 07:32:30.020537    3368 server.go:1048] POST /stats/container/: (13.972191ms) 200 [[Go-http-client/1.1] 10.244.1.3:40537]\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kubelet.log\\n  pos_file /var/log/gcp-kubelet.log.pos\\n  tag kubelet\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I1118 21:26:53.975789       6 proxier.go:1096] Port \\\"nodePort for kube-system/default-http-backend:http\\\" (:31429/tcp) was open before and is still needed\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-proxy.log\\n  pos_file /var/log/gcp-kube-proxy.log.pos\\n  tag kube-proxy\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0204 07:00:19.604280       5 handlers.go:131] GET /api/v1/nodes: (1.624207ms) 200 [[kube-controller-manager/v1.1.3 (linux/amd64) kubernetes/6a81b50] 127.0.0.1:38266]\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-apiserver.log\\n  pos_file /var/log/gcp-kube-apiserver.log.pos\\n  tag kube-apiserver\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0204 06:55:31.872680       5 servicecontroller.go:277] LB already exists and doesn't need update for service kube-system/kube-ui\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-controller-manager.log\\n  pos_file /var/log/gcp-kube-controller-manager.log.pos\\n  tag kube-controller-manager\\n\\u003c/source\\u003e\\n\\n# Example:\\n# W0204 06:49:18.239674       7 reflector.go:245] pkg/scheduler/factory/factory.go:193: watch of *api.Service ended with: 401: The event in requested index is outdated and cleared (the requested history has been cleared [2578313/2577886]) [2579312]\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-scheduler.log\\n  pos_file /var/log/gcp-kube-scheduler.log.pos\\n  tag kube-scheduler\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/glbc.log\\n  pos_file /var/log/gcp-glbc.log.pos\\n  tag glbc\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/cluster-autoscaler.log\\n  pos_file /var/log/gcp-cluster-autoscaler.log.pos\\n  tag cluster-autoscaler\\n\\u003c/source\\u003e\\n\\n# Logs from systemd-journal for interesting services.\\n# TODO(random-liu): Keep this for compatibility, remove this after\\n# cri container runtime rolls out.\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"docker.service\\\" }]\\n  pos_file /var/log/gcp-journald-docker.pos\\n  read_from_head true\\n  tag docker\\n\\u003c/source\\u003e\\n\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"containerd.service\\\" }]\\n  pos_file /var/log/gcp-journald-container-runtime.pos\\n  read_from_head true\\n  tag container-runtime\\n\\u003c/source\\u003e\\n\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"kubelet.service\\\" }]\\n  pos_file /var/log/gcp-journald-kubelet.pos\\n  read_from_head true\\n  tag kubelet\\n\\u003c/source\\u003e\\n\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"node-problem-detector.service\\\" }]\\n  pos_file /var/log/gcp-journald-node-problem-detector.pos\\n  read_from_head true\\n  tag node-problem-detector\\n\\u003c/source\\u003e\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"fluentd-gcp-config-old-v1.2.5\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2019-11-11T21:20:09Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile"
                        },
                        "name": "fluentd-gcp-config-old-v1.2.5",
                        "namespace": "kube-system",
                        "resourceVersion": "494",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/fluentd-gcp-config-old-v1.2.5",
                        "uid": "0a1cc343-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "73602f67450e94a9a3037625269a357f838746fde673c76c900c62aba88612dd": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "14713ebedd8b69455bcc7fe14e5977749749e9eadee826e231a46b3b0a3f6e89": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 2
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "6bf8ae50ef17ee517256c0c7f046e76dbdd2b17f2a4bf320aa2d826a2c38008c": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/vol-[Volumes]/vol-[device-plugin]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[device-plugin]",
                "name": "device-plugin",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "4921fd91da980470cd10d2636439f011bbee3fa37bfdeb9480284a9e4e61b569": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/vol-[Volumes]/vol-[device-plugin]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "device-plugin",
                    "hostPath": {
                        "path": "/var/lib/kubelet/device-plugins",
                        "type": ""
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "d31505ff3feac1971c514fd5b50675973f6bcfba9eb1e2eb0741f54b49679c9f": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/vol-[Volumes]/vol-[dev]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[dev]",
                "name": "dev",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "eaf3aa542c10700941a3d07dc27e62a5ca59e7e9e1ac5bfdb229d5b8e95a9843": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/vol-[Volumes]/vol-[dev]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "dev",
                    "hostPath": {
                        "path": "/dev",
                        "type": ""
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "1180279ecfdd3ddb651faebedf6f0c14e9922e236fb8b2414c2d60ae39cdf316": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]/vol-[device-plugin]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[device-plugin]",
                "name": "device-plugin",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "d169614be1da6376cfd44f044575d1faccbe8249299a5b2ef5037882bde018d0": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]/vol-[device-plugin]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "device-plugin",
                    "hostPath": {
                        "path": "/var/lib/kubelet/device-plugins",
                        "type": ""
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "54f33c1a1b5dc41531686eb596410ba90dcdb334a5840c4fa71c3761f256c941": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]/vol-[device-plugin]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "device-plugin",
                    "mountPath": "/device-plugin"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "ee63563e9feb4d6ad46901538b09352c15a4e1dffa2b98764bffbbd165ea7846": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]/vol-[dev]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[dev]",
                "name": "dev",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "6a2dfa0375771e1e5aa2c18df52e68d795626cc2621ead5601c10efa7df176fd": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]/vol-[dev]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "dev",
                    "hostPath": {
                        "path": "/dev",
                        "type": ""
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "36972e9e4e525e7e07af23864148fab2efc94bc495d6de477e8750ef02433cde": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]/cont-[nvidia-gpu-device-plugin]/vol-[dev]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "dev",
                    "mountPath": "/dev"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "00070010bda4566d0cc4f05b2ed20c033aeefe941bcff71a7d9d7f0f89b186fe": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "20de16d96fcf34e5e841e6924d7bbebf17e1d14aa33548f5934b98bc8a2da66e": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "f55b60e3ed5c3a6d93690455134908dcbbd8c65f9a6a77fa8a82ae64cdf18f03": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/vol-[Volumes]/vol-[ssl-certs]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[ssl-certs]",
                "name": "ssl-certs",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "02738aec89bff5cea386764420a14f3f18e4c1ad060c2107a900f70d0b553139": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]/vol-[Volumes]/vol-[ssl-certs]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "ssl-certs",
                    "hostPath": {
                        "path": "/etc/ssl/certs",
                        "type": ""
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "6ab004d19e4ed756adb1e64ca904cee994eb3264de473258e2e6eb43f0207fdc": {
            "dn": "root/ns-[kube-system]/app-[heapster]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "a1d0a42554d765954882d6097c42fb94174dd0848e5f461a7fafe130f702a2d7": {
            "dn": "root/ns-[kube-system]/app-[heapster]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "714d878c268d990bfdaaa23154fbe6172ef1898791b8ae5906d252a5a5bc9e7f": {
            "dn": "root/ns-[kube-system]/app-[heapster]/vol-[Volumes]/vol-[heapster-config-volume]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[heapster-config-volume]",
                "name": "heapster-config-volume",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "113b5187af96dd693223bddff0c9d6e9106421fabf713d9c161bc50d1060031c": {
            "dn": "root/ns-[kube-system]/app-[heapster]/vol-[Volumes]/vol-[heapster-config-volume]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "heapster-config-volume",
                    "configMap": {
                        "name": "heapster-config",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "86bc6f2afea39ba09d6632d42b920beda4e2a2a648114fd3e26b13ae2e866f15": {
            "dn": "root/ns-[kube-system]/app-[heapster]/vol-[Volumes]/vol-[heapster-config-volume]/configmap-[heapster-config]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[heapster-config]",
                "name": "heapster-config",
                "kind": "configmap",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b7f267d96ee452da9d04f58633f537ea6dd9294b458deaa15eabd9bebaea1bb7": {
            "dn": "root/ns-[kube-system]/app-[heapster]/vol-[Volumes]/vol-[heapster-config-volume]/configmap-[heapster-config]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "NannyConfiguration": "apiVersion: nannyconfig/v1alpha1\nkind: NannyConfiguration"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:19:56Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "EnsureExists",
                            "kubernetes.io/cluster-service": "true"
                        },
                        "name": "heapster-config",
                        "namespace": "kube-system",
                        "resourceVersion": "285",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/heapster-config",
                        "uid": "02823c4f-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "343162b1accf3602383cd636ccefcbe39d4e9d856f3a465c8a8a0756798f56bb": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster-nanny]/vol-[heapster-config-volume]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[heapster-config-volume]",
                "name": "heapster-config-volume",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b4dcb1d3da438d6f29a36a119c24461302d44644082183d5e16a16ec69e82a72": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster-nanny]/vol-[heapster-config-volume]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "heapster-config-volume",
                    "configMap": {
                        "name": "heapster-config",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "df093ac49d27209a8d1f0b86f734b7e5783cd59266e106ff8cd2ba1f441c871f": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster-nanny]/vol-[heapster-config-volume]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "heapster-config-volume",
                    "mountPath": "/etc/config"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "13d6478e2b886fb5f289cd42dc3a7dd6dea4fed282fbb92b98dae36df30a9cae": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster-nanny]/vol-[heapster-config-volume]/configmap-[heapster-config]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[heapster-config]",
                "name": "heapster-config",
                "kind": "configmap",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "80986ca80df97673a98bb011129271bd20e3ab3ac62cc6743372195ec2c4258e": {
            "dn": "root/ns-[kube-system]/app-[heapster]/cont-[heapster-nanny]/vol-[heapster-config-volume]/configmap-[heapster-config]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "NannyConfiguration": "apiVersion: nannyconfig/v1alpha1\nkind: NannyConfiguration"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:19:56Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "EnsureExists",
                            "kubernetes.io/cluster-service": "true"
                        },
                        "name": "heapster-config",
                        "namespace": "kube-system",
                        "resourceVersion": "285",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/heapster-config",
                        "uid": "02823c4f-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "3e37682c8cbb686542078dd326bb7dfd6ee17538bdb194681e1db1f36dce8a0f": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "c91ad020add08c170a08c21a3b6fd398c7f820906cc4d1120b43b050e75a0f4d": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "ffef255a8250c335652efe4d7f5e16da1270826fc959005e47383092d11508b2": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/vol-[Volumes]/vol-[kube-dns-config]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[kube-dns-config]",
                "name": "kube-dns-config",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "2f34d937138e2ffc7ee9758d2a1c9eed5257701d1b4f7d5d6b968cf37623d20a": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/vol-[Volumes]/vol-[kube-dns-config]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "kube-dns-config",
                    "configMap": {
                        "name": "kube-dns",
                        "defaultMode": 420,
                        "optional": true
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "b83d51bf890f44044f9be3991cb5c7ab1de7dfe93c90949d30b9b494176b9f4d": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/vol-[Volumes]/vol-[kube-dns-config]/configmap-[kube-dns]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[kube-dns]",
                "name": "kube-dns",
                "kind": "configmap",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b3dd692a1d50cc6a646ae2f3febd3f0155e56ee8f39d28e3ce13cc703613413f": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/vol-[Volumes]/vol-[kube-dns-config]/configmap-[kube-dns]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:19:56Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "EnsureExists"
                        },
                        "name": "kube-dns",
                        "namespace": "kube-system",
                        "resourceVersion": "284",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/kube-dns",
                        "uid": "027cb8d8-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "926c242e2d7abb1879daa2d752725421419bc1521266fd0ae90a385e60f680dc": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/vol-[kube-dns-config]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[kube-dns-config]",
                "name": "kube-dns-config",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "270c2f5a6e0039ed2c7f533ac89f7fbd55c8e37bd978c27e6196060157ae96db": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/vol-[kube-dns-config]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "kube-dns-config",
                    "configMap": {
                        "name": "kube-dns",
                        "defaultMode": 420,
                        "optional": true
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "86142816c84125e2b69bde43e59e40ffc92406d130ba2cd38b6af6749683b891": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/vol-[kube-dns-config]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "kube-dns-config",
                    "mountPath": "/kube-dns-config"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "6fe97017201ce82049edd0a8dcf289aad6bcc9f23aa38db2d7e6403281f2b525": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/vol-[kube-dns-config]/configmap-[kube-dns]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[kube-dns]",
                "name": "kube-dns",
                "kind": "configmap",
                "order": 100,
                "alertCount": {},
                "flags": {
                    "shared": {
                        "name": "shared"
                    }
                }
            }
        },
        "d2bdc7f8cad99ef6ab26b75146c9b6a5bb9c80477d512ca27b5e92a05146a8fa": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/vol-[kube-dns-config]/configmap-[kube-dns]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:19:56Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "EnsureExists"
                        },
                        "name": "kube-dns",
                        "namespace": "kube-system",
                        "resourceVersion": "284",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/kube-dns",
                        "uid": "027cb8d8-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "5bf17f1f4ada9753998cc373b813bc0256c974fd0f8df265714e89badef93212": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/vol-[kube-dns-config]/configmap-[kube-dns]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "shared-with",
            "config": {
                "kind": "dn-list",
                "id": "shared-with",
                "title": "Shared With",
                "order": 5,
                "config": [
                    "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/vol-[kube-dns-config]/configmap-[kube-dns]"
                ],
                "tooltip": "Other objects that also use this configuration."
            }
        },
        "7603b433bc97704cb4f0db2574bd56d0fc9b5d06483f5e407577eede2dab1986": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/vol-[kube-dns-config]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[kube-dns-config]",
                "name": "kube-dns-config",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f12257b985e9fe273c1d6e69a533c566e8b6163657248daf95c029e091308621": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/vol-[kube-dns-config]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "kube-dns-config",
                    "configMap": {
                        "name": "kube-dns",
                        "defaultMode": 420,
                        "optional": true
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "06908db6a5cf7e4068a21376c1ca389c65687dd3bb88153d6873b1ac720e7b86": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/vol-[kube-dns-config]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "kube-dns-config",
                    "mountPath": "/etc/k8s/dns/dnsmasq-nanny"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "a56cee7c0912d5b4d126a00017a9942b6ab895c37d59d5f24425ffb28c74fd55": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/vol-[kube-dns-config]/configmap-[kube-dns]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[kube-dns]",
                "name": "kube-dns",
                "kind": "configmap",
                "order": 100,
                "alertCount": {},
                "flags": {
                    "shared": {
                        "name": "shared"
                    }
                }
            }
        },
        "85d7dc7f78c887c7f807645a894418722cdef71fed0a0bca5b1afa8f7560fdf6": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/vol-[kube-dns-config]/configmap-[kube-dns]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:19:56Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "EnsureExists"
                        },
                        "name": "kube-dns",
                        "namespace": "kube-system",
                        "resourceVersion": "284",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/kube-dns",
                        "uid": "027cb8d8-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "3717f59ee1fb58002631121af2b9c5e99fa06a537b1120eecdffaff4d887910e": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/vol-[kube-dns-config]/configmap-[kube-dns]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "shared-with",
            "config": {
                "kind": "dn-list",
                "id": "shared-with",
                "title": "Shared With",
                "order": 5,
                "config": [
                    "root/ns-[kube-system]/app-[kube-dns]/cont-[kubedns]/vol-[kube-dns-config]/configmap-[kube-dns]"
                ],
                "tooltip": "Other objects that also use this configuration."
            }
        },
        "26564b7e421372fc69a4306c0b36b9304d9ce343b320cc3ffc1ac7e966930735": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "2e7f62c0db59ce4fd8e75d0d1730ab4f0628146ab1f8961670110e273dd15810": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "232346aff767d2d9a7256aa129846f0b01445fed1d44c7c7a6a92530e2e5b378": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/vol-[Volumes]/vol-[metrics-server-config-volume]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[metrics-server-config-volume]",
                "name": "metrics-server-config-volume",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "df1d4769573fce1524c8206438864a293a5b977ff5d4989d910c2b279f8287e3": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/vol-[Volumes]/vol-[metrics-server-config-volume]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "metrics-server-config-volume",
                    "configMap": {
                        "name": "metrics-server-config",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "5f3a97736d98b089f3fb0a2a0a372808c12b2063c5c8e82dc78a5a6e07d880e9": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/vol-[Volumes]/vol-[metrics-server-config-volume]/configmap-[metrics-server-config]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[metrics-server-config]",
                "name": "metrics-server-config",
                "kind": "configmap",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "70c705452f5f05b3637672bdd47874354d266d5f0f75e6b69ea73fbfa99be094": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/vol-[Volumes]/vol-[metrics-server-config-volume]/configmap-[metrics-server-config]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "NannyConfiguration": "apiVersion: nannyconfig/v1alpha1\nkind: NannyConfiguration"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:19:56Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "EnsureExists",
                            "kubernetes.io/cluster-service": "true"
                        },
                        "name": "metrics-server-config",
                        "namespace": "kube-system",
                        "resourceVersion": "286",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/metrics-server-config",
                        "uid": "0285fac6-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "da0308e243d6fac22de0f07707ef5e63bfb6ef5bce8774a4c0360f83b4a1e240": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server-nanny]/vol-[metrics-server-config-volume]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[metrics-server-config-volume]",
                "name": "metrics-server-config-volume",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "62b2809a5087d9258c1b47802ffc638881dc97d2b64a93704aa74b44a869f71b": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server-nanny]/vol-[metrics-server-config-volume]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "metrics-server-config-volume",
                    "configMap": {
                        "name": "metrics-server-config",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "9e8ad4faa47570e023207c88faf7bce47e547554e8290dc5b8d77eef53aa8d04": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server-nanny]/vol-[metrics-server-config-volume]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "metrics-server-config-volume",
                    "mountPath": "/etc/config"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "4695dbb47914639c772a384dcbbcbbd51197d5341c0760c368d53c8dff7d5c08": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server-nanny]/vol-[metrics-server-config-volume]/configmap-[metrics-server-config]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[metrics-server-config]",
                "name": "metrics-server-config",
                "kind": "configmap",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "919fee89e1fd6d4ddef493f58f5ae809c1079fea603b2534278fa0e91fa1737f": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server-nanny]/vol-[metrics-server-config-volume]/configmap-[metrics-server-config]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "NannyConfiguration": "apiVersion: nannyconfig/v1alpha1\nkind: NannyConfiguration"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:19:56Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "EnsureExists",
                            "kubernetes.io/cluster-service": "true"
                        },
                        "name": "metrics-server-config",
                        "namespace": "kube-system",
                        "resourceVersion": "286",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/metrics-server-config",
                        "uid": "0285fac6-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "8c75cee6f22e04ba65af507bcdc57675139dc09131516a36d25b0ceb25d7c4fb": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "8fc7009ae8748935da82bce2825b31460ff3068d6e6575078abc63cda34bdac3": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 3
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "074b32c58a1cd24d9cf1a93de8413390ee620ba9d83a208d7df360289a97e6b1": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "262252c0185a0148395ff698685430322a689d68f08cfd25aa5c3f7f77e366e2": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-addr-main-app",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "f79243aca332adb6206c8cbee68f83b09ad44f08dcda0df47176b0214f3b8eec": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]/vol-[google-cloud-key]/secret-[gprod-addr-main-app]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-addr-main-app]",
                "name": "gprod-addr-main-app",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "92b737e844cdeba6b4ac22c0e5ffe0342501a62d863ca85224786bee5899285a": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]/vol-[gprod-addr-main-app-consumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[gprod-addr-main-app-consumes]",
                "name": "gprod-addr-main-app-consumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "d6fe26cc1027a33cbb98d68d75ddd5888114a9c2062f642290e77be668de394e": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]/vol-[gprod-addr-main-app-consumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "gprod-addr-main-app-consumes",
                    "configMap": {
                        "name": "addr-gprod-addr-main-app-consumes",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "adaa4a82bb32471dacd13972a3641fa612ee3d1a1ceea72a0598320b00f3a8ba": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]/vol-[gprod-addr-main-app-consumesdatabase]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[gprod-addr-main-app-consumesdatabase]",
                "name": "gprod-addr-main-app-consumesdatabase",
                "kind": "vol",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "2366ee89763ee7c6f552dadd0117ccefdb42398e10ae5e165d722510ccbc3e6d": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]/vol-[gprod-addr-main-app-consumesdatabase]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "gprod-addr-main-app-consumesdatabase",
                    "configMap": {
                        "name": "addr-gprod-addr-main-app-consumesdatabase",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "ad99d81536d59e7278e32c46556bcf8d8a7ad89494919d0653dd38f102c3730c": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "d73fe5666115bf960bd8986cae36d032ebe0e007a090ecbb58580083089f7b20": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-addr-main-app",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "982915e1dfd44973e9bd78110a8fe2256683f8b582eb7fef58791dea38238b12": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "google-cloud-key",
                    "mountPath": "/var/secrets/google"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "9213ab9e2f70676ad6a621aacb17301eb2c0a5420aa44f9ce2a82eda8633c8d0": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[google-cloud-key]/secret-[gprod-addr-main-app]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-addr-main-app]",
                "name": "gprod-addr-main-app",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "254bfa6b0944e43eb333c91ca183935098bfd0003e6a7f0974f3d83406775335": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[gprod-addr-main-app-consumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[gprod-addr-main-app-consumes]",
                "name": "gprod-addr-main-app-consumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "81243a7ab97dc2c29a02bb84247c37af4bfca223840fc7ed6bc2d8ba80ca4797": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[gprod-addr-main-app-consumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "gprod-addr-main-app-consumes",
                    "configMap": {
                        "name": "addr-gprod-addr-main-app-consumes",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "9d6e57166339fe2820940f619c624bf2bf55ae81a68a1fd1f03b6fcc4e76f7a3": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[gprod-addr-main-app-consumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "gprod-addr-main-app-consumes",
                    "mountPath": "/etc/berlioz/consumes"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "c15984604fd56188859d61c1758623ba6121c98851c83c146b64ebae6d9f7bd2": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[gprod-addr-main-app-consumesdatabase]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[gprod-addr-main-app-consumesdatabase]",
                "name": "gprod-addr-main-app-consumesdatabase",
                "kind": "vol",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "aa3b7872d8dac3df996523ecd84fae3309ed4b80adbbb34594a9bf9a7cc09f3f": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[gprod-addr-main-app-consumesdatabase]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "gprod-addr-main-app-consumesdatabase",
                    "configMap": {
                        "name": "addr-gprod-addr-main-app-consumesdatabase",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "18d9dbd03b719f6b409f4121fbdab6b357a92ec74c8e6028ac6b793274ab3223": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[gprod-addr-main-app-consumesdatabase]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "gprod-addr-main-app-consumesdatabase",
                    "mountPath": "/etc/berlioz/consumes/database"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "b998f074d23159499e3ef2d4e3ce7f315d732310570e5eebef78cd4206b09dc9": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[cloudsql-proxy-gprod-addr-uswest1c-main-book]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {
                    "error": 1
                },
                "flags": {}
            }
        },
        "957abc4c1a1ba6a6187fc57959638ad19036a7baf49e2b1d23267763f51e4458": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[cloudsql-proxy-gprod-addr-uswest1c-main-book]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-addr-main-app",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "d868f89e6e0d1339562e43fcf999e1095ef7e53b9b33815ad0529466dc07b467": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[cloudsql-proxy-gprod-addr-uswest1c-main-book]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "google-cloud-key",
                    "readOnly": true,
                    "mountPath": "/var/secrets/google"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "f3fedfeedf91ecece6fb533194ff3fc95ce6829b2d34a019202fea2ead4dbd84": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[cloudsql-proxy-gprod-addr-uswest1c-main-book]/vol-[google-cloud-key]/secret-[gprod-addr-main-app]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-addr-main-app]",
                "name": "gprod-addr-main-app",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f3ff7b961a93963e66d7481356e3ef3d34129805fd7272e0bf27029a283e6167": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f03802bbebbdbe3313c390c16d52081a2254ac532c36e78449a0d636a6916a63": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "af34f38f1a89d4f92c09a4823ffd83101caa781b9657ff5faf78530f41bc46b2": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b96382a624f1f0463869e62b82935afccedecfaf03aa0f0da4f9c35bab8f2613": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-addr-main-web",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "8d8ac54fdc2be7048e8c0519d013cc99d734fde64b9ca86c262c4121063030c5": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/vol-[Volumes]/vol-[google-cloud-key]/secret-[gprod-addr-main-web]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-addr-main-web]",
                "name": "gprod-addr-main-web",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "d90093c333443ded3ece78431d2c189918d4c1a507ed5c0130b21fd127995d8e": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "0921e33de06514a849c58d277a08422e681eead95b0729b03f91903fec09d97d": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-addr-main-web",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "321bb3dfc95ce100dd1e7ab72051a45140d64a67af1aea9ff46ff5e87e9b5bad": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "google-cloud-key",
                    "mountPath": "/var/secrets/google"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "2fb90c37aee87a4f4904dd60ba1374ceccff7e3ba2f8292d64783a3bcddb43b0": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/vol-[google-cloud-key]/secret-[gprod-addr-main-web]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-addr-main-web]",
                "name": "gprod-addr-main-web",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "0734b7086bfab19e22b77597f1af907ec00573f395caa0bf027ec877f88788bb": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "335398e06209d1de9635bafcaeb1a25cc32a21e4a03c2ccb20da0102968b334f": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "f02b98f80cfe544fe8dc6d7efbaabc950dfce1151000a3d7fe6a17591912c4db": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "4a0e39f00c89fdc8a662a5cfcfd810aa524d803d695cb00e88919ff2ee36c0ac": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-sprt-main-dtrace",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "0a4f84ae6dc36b298d3edd56f69467e7ee05b720d68b00d0b4f0421a299aa646": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/vol-[Volumes]/vol-[google-cloud-key]/secret-[gprod-sprt-main-dtrace]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-sprt-main-dtrace]",
                "name": "gprod-sprt-main-dtrace",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "7aa01393a58dc590a8fd6ed3ed2f9b9e4494243ed8ec65ef3d3bfd217223381e": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "fc50edca4d4041bc61ddc1f7104871835de6d05e3eb4d7905b58961bd4c18941": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-sprt-main-dtrace",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "a9cad615415bd03e7105c6348d7454855963b36a6999a11dd5b535356cd29017": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "google-cloud-key",
                    "mountPath": "/var/secrets/google"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "b36f131f61dbecb9a3de30a38fc4f6f54d75c626ad46e79a4eade67478cc9fe9": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/vol-[google-cloud-key]/secret-[gprod-sprt-main-dtrace]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-sprt-main-dtrace]",
                "name": "gprod-sprt-main-dtrace",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "454e36a7c3ea5782b62361301167d8ae4ef2782c31216acd01bf2971aed89127": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "dd0e257ef62781d3d5aea17f681d29e954b02069c60525d76715e629a2ee7a3a": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "e848fead805d885c5fcae17b840f491b0bcb87fccd3bf7a413b9aff3b5a3402f": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "71c24e375e70c191725ebfc59150814d1d33fd3d234821b2b835a7d38f4d619e": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-sprt-main-grfna",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "9a14e8057934ccfe8615e8db1f3eeb1522d989a06168569f07ddb33351adb0a4": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/vol-[Volumes]/vol-[google-cloud-key]/secret-[gprod-sprt-main-grfna]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-sprt-main-grfna]",
                "name": "gprod-sprt-main-grfna",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "af148d9b39ffb076bc0c267a674c5ffb80d1a8e693ebd5938402b45dd094a637": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "530f7dde2800f48db4f95a95e977e6a8df4a8c03e996919a91ace4fb4350084c": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-sprt-main-grfna",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "c157156e34e4e93e9270ea3b9ddc67ca186cfd6aa9eab0e275dfa923eaca53d9": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "google-cloud-key",
                    "mountPath": "/var/secrets/google"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "0c480083d4e906215bbb8ab460cdf9f8be1593b3069b671a3e3222afca169996": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]/vol-[google-cloud-key]/secret-[gprod-sprt-main-grfna]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-sprt-main-grfna]",
                "name": "gprod-sprt-main-grfna",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "873cc09372320004607658308041cd8c14ceb169153a82407a72c772da5df010": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[Volumes]",
                "name": "Volumes",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "c191985b484ae59214ccbd185e20281dcb93f33474070dc88b4756fd1dd38336": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/vol-[Volumes]",
            "kind": "vol",
            "config_kind": "props",
            "name": "properties",
            "config": {
                "kind": "key-value",
                "id": "properties",
                "title": "Properties",
                "order": 5,
                "config": {
                    "Count": 1
                },
                "tooltip": "Top level properties associated with this object."
            }
        },
        "b41d21135d54d752d8e5128643f687dd8948b75a93c16ec188b747c19768611a": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "122031577f9277ab327248c680905866f369366937e55bb090dfe4a965580e6f": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-sprt-main-prmts",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "53a767c42c001154c3bd6e705c14143a6e0f0825ae257840dd68ee6053907a1a": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/vol-[Volumes]/vol-[google-cloud-key]/secret-[gprod-sprt-main-prmts]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-sprt-main-prmts]",
                "name": "gprod-sprt-main-prmts",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "63d5e7428f79c09ccab3fcb855c0179d13df4736cd88773883e31e9c4218f002": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "node",
            "config": {
                "rn": "vol-[google-cloud-key]",
                "name": "google-cloud-key",
                "kind": "vol",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f4ffbda5546aad6f53643ffd589c5a5df88804e57255e096357ffd060522bfad": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "name": "google-cloud-key",
                    "secret": {
                        "secretName": "gprod-sprt-main-prmts",
                        "defaultMode": 420
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "b2568740c4a4ead944a0ded3505a003b15c6941a2d697622f0847ac6da7e8ac4": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "props",
            "name": "env",
            "config": {
                "kind": "yaml",
                "id": "env",
                "title": "Mount Config",
                "order": 5,
                "config": {
                    "name": "google-cloud-key",
                    "mountPath": "/var/secrets/google"
                },
                "tooltip": "Environment variables applied to this container. Also contains variables defined in related ConfigMaps."
            }
        },
        "2389599fc96062b4a7a137785a96695db756a7327d0e113c7b52e0d9b7ba69cf": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/vol-[google-cloud-key]/secret-[gprod-sprt-main-prmts]",
            "kind": "secret",
            "config_kind": "node",
            "config": {
                "rn": "secret-[gprod-sprt-main-prmts]",
                "name": "gprod-sprt-main-prmts",
                "kind": "secret",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "9523f2caee02db6387e76f2f1beb6f4adb5a4c925ceddcf53944c57f6d106c38": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/service-[NodePort]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[NodePort]",
                "name": "NodePort",
                "kind": "service",
                "order": 200,
                "alertCount": {},
                "flags": {}
            }
        },
        "ab2ba94c479923c27106bf27e0fa6732fa486dc2d8bf48eb98d100e96d44c92b": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/service-[NodePort]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "default-http-backend",
                        "namespace": "kube-system",
                        "selfLink": "/api/v1/namespaces/kube-system/services/default-http-backend",
                        "uid": "431e245f-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "305",
                        "creationTimestamp": "2019-11-26T21:11:07Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "glbc",
                            "kubernetes.io/cluster-service": "true",
                            "kubernetes.io/name": "GLBCDefaultBackend"
                        },
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"glbc\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"GLBCDefaultBackend\"},\"name\":\"default-http-backend\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080}],\"selector\":{\"k8s-app\":\"glbc\"},\"type\":\"NodePort\"}}\n"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 8080,
                                "nodePort": 30472
                            }
                        ],
                        "selector": {
                            "k8s-app": "glbc"
                        },
                        "clusterIP": "10.11.253.4",
                        "type": "NodePort",
                        "sessionAffinity": "None",
                        "externalTrafficPolicy": "Cluster"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "9ae5ec15792dac04afa418eee0aa58b23a4417d1111f4a758cec3444f334b37d": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/cont-[default-http-backend]/port-[TCP-8080]/service-[NodePort]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[NodePort]",
                "name": "NodePort",
                "kind": "service",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "0c05ddb9e3daa3d261a0c22cc0996afa6b54a64c67a00d352299bc41d491acac": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]/cont-[default-http-backend]/port-[TCP-8080]/service-[NodePort]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "default-http-backend",
                        "namespace": "kube-system",
                        "selfLink": "/api/v1/namespaces/kube-system/services/default-http-backend",
                        "uid": "431e245f-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "305",
                        "creationTimestamp": "2019-11-26T21:11:07Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "glbc",
                            "kubernetes.io/cluster-service": "true",
                            "kubernetes.io/name": "GLBCDefaultBackend"
                        },
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"glbc\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"GLBCDefaultBackend\"},\"name\":\"default-http-backend\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080}],\"selector\":{\"k8s-app\":\"glbc\"},\"type\":\"NodePort\"}}\n"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 8080,
                                "nodePort": 30472
                            }
                        ],
                        "selector": {
                            "k8s-app": "glbc"
                        },
                        "clusterIP": "10.11.253.4",
                        "type": "NodePort",
                        "sessionAffinity": "None",
                        "externalTrafficPolicy": "Cluster"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "c87cda7a5b35c8cb5ce12b1808cae94b3d61afae1ba5d7db1033785922dfe9dd": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP]",
                "name": "ClusterIP",
                "kind": "service",
                "order": 200,
                "alertCount": {},
                "flags": {}
            }
        },
        "32c84176df69323d4b35a01ab6e212282f2d838569b076301ea528fff6c27401": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-addr-main-app-default",
                        "namespace": "addr",
                        "selfLink": "/api/v1/namespaces/addr/services/gprod-addr-main-app-default",
                        "uid": "86fdfd24-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1189",
                        "creationTimestamp": "2019-11-26T21:13:00Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "addr",
                            "deployment": "gprod",
                            "endpoint": "default",
                            "name": "gprod-addr-main-app-default",
                            "sector": "main",
                            "service": "app"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 4000
                            }
                        ],
                        "selector": {
                            "name": "gprod-addr-main-app"
                        },
                        "clusterIP": "10.11.251.155",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "c623bdf1b578efd74dc8588f141037d5e62fe249d577688fa3bf317831e92c46": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/port-[default (TCP-4000)]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP]",
                "name": "ClusterIP",
                "kind": "service",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b76bd910c8ee29405f5c310a9245de419408efb8f10906beea145997caa32be9": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/port-[default (TCP-4000)]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-addr-main-app-default",
                        "namespace": "addr",
                        "selfLink": "/api/v1/namespaces/addr/services/gprod-addr-main-app-default",
                        "uid": "86fdfd24-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1189",
                        "creationTimestamp": "2019-11-26T21:13:00Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "addr",
                            "deployment": "gprod",
                            "endpoint": "default",
                            "name": "gprod-addr-main-app-default",
                            "sector": "main",
                            "service": "app"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 4000
                            }
                        ],
                        "selector": {
                            "name": "gprod-addr-main-app"
                        },
                        "clusterIP": "10.11.251.155",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "67255364a7721a1c2509a0ddd1711d9cd20f8cb8a47083b913338c94e241a30b": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/service-[NodePort]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[NodePort]",
                "name": "NodePort",
                "kind": "service",
                "order": 200,
                "alertCount": {},
                "flags": {}
            }
        },
        "5ec9dd585bf25846be6609a3fca2c83a28f269e2c32c3754199f522fccae7050": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/service-[NodePort]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-addr-main-web-default",
                        "namespace": "addr",
                        "selfLink": "/api/v1/namespaces/addr/services/gprod-addr-main-web-default",
                        "uid": "86ffd210-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1192",
                        "creationTimestamp": "2019-11-26T21:13:00Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "addr",
                            "deployment": "gprod",
                            "endpoint": "default",
                            "name": "gprod-addr-main-web-default",
                            "sector": "main",
                            "service": "web"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 3000,
                                "nodePort": 32260
                            }
                        ],
                        "selector": {
                            "name": "gprod-addr-main-web"
                        },
                        "clusterIP": "10.11.252.10",
                        "type": "NodePort",
                        "sessionAffinity": "None",
                        "externalTrafficPolicy": "Cluster"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "8565488579f541e6974a80517bf95f6ba0578d27c931dca469ad4aa09f8be507": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/port-[default (TCP-3000)]/service-[NodePort]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[NodePort]",
                "name": "NodePort",
                "kind": "service",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "a00e4b920fbd3c41acacd451f902946b518d0806cde187d0ac946cf3d4864867": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/port-[default (TCP-3000)]/service-[NodePort]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-addr-main-web-default",
                        "namespace": "addr",
                        "selfLink": "/api/v1/namespaces/addr/services/gprod-addr-main-web-default",
                        "uid": "86ffd210-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1192",
                        "creationTimestamp": "2019-11-26T21:13:00Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "addr",
                            "deployment": "gprod",
                            "endpoint": "default",
                            "name": "gprod-addr-main-web-default",
                            "sector": "main",
                            "service": "web"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 3000,
                                "nodePort": 32260
                            }
                        ],
                        "selector": {
                            "name": "gprod-addr-main-web"
                        },
                        "clusterIP": "10.11.252.10",
                        "type": "NodePort",
                        "sessionAffinity": "None",
                        "externalTrafficPolicy": "Cluster"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "f55aec6eafadb2be704a3a64896c73147f3629337027238edf09efe0c4a51673": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP]",
                "name": "ClusterIP",
                "kind": "service",
                "order": 200,
                "alertCount": {},
                "flags": {}
            }
        },
        "f4ec59777f763f86240602372c8f13495f5aa8978fd9cf89736cb4c4701a006e": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-sprt-main-dtrace-client",
                        "namespace": "sprt",
                        "selfLink": "/api/v1/namespaces/sprt/services/gprod-sprt-main-dtrace-client",
                        "uid": "6ddc421e-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "963",
                        "creationTimestamp": "2019-11-26T21:12:18Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "endpoint": "client",
                            "name": "gprod-sprt-main-dtrace-client",
                            "sector": "main",
                            "service": "dtrace"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 9411
                            }
                        ],
                        "selector": {
                            "name": "gprod-sprt-main-dtrace"
                        },
                        "clusterIP": "10.11.247.123",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "3fa6ac36dafd00ec8549acd46b92b1d9558846c9b2e6282d7cfa69ef3341c4b0": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/port-[client (TCP-9411)]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP]",
                "name": "ClusterIP",
                "kind": "service",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "ba470b9580325abe8cb6cce14cdc9814de84a9a91b807cd170a0457de6899f11": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/port-[client (TCP-9411)]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-sprt-main-dtrace-client",
                        "namespace": "sprt",
                        "selfLink": "/api/v1/namespaces/sprt/services/gprod-sprt-main-dtrace-client",
                        "uid": "6ddc421e-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "963",
                        "creationTimestamp": "2019-11-26T21:12:18Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "endpoint": "client",
                            "name": "gprod-sprt-main-dtrace-client",
                            "sector": "main",
                            "service": "dtrace"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 9411
                            }
                        ],
                        "selector": {
                            "name": "gprod-sprt-main-dtrace"
                        },
                        "clusterIP": "10.11.247.123",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "eacdd9ccdc24ece5e28868f6a3e8bfda85997ec43492ccde3e7dba9cc61f0135": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/service-[LoadBalancer]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[LoadBalancer]",
                "name": "LoadBalancer",
                "kind": "service",
                "order": 200,
                "alertCount": {},
                "flags": {}
            }
        },
        "c592f77765eb60100ce506030b956bcb2bd7a39178a816b3d00074892ced71ac": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/service-[LoadBalancer]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-sprt-main-dtrace-web",
                        "namespace": "sprt",
                        "selfLink": "/api/v1/namespaces/sprt/services/gprod-sprt-main-dtrace-web",
                        "uid": "6e21fcbb-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1406",
                        "creationTimestamp": "2019-11-26T21:12:19Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "endpoint": "web",
                            "name": "gprod-sprt-main-dtrace-web",
                            "sector": "main",
                            "service": "dtrace"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 16686,
                                "nodePort": 31956
                            }
                        ],
                        "selector": {
                            "name": "gprod-sprt-main-dtrace"
                        },
                        "clusterIP": "10.11.255.15",
                        "type": "LoadBalancer",
                        "sessionAffinity": "None",
                        "externalTrafficPolicy": "Cluster"
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "ip": "35.247.49.191"
                                }
                            ]
                        }
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "c7ddc30eb0486ed3c867b8f96d2edf944eb2b5d5edb5f354f67acd3f86ea778c": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/port-[web (TCP-16686)]/service-[LoadBalancer]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[LoadBalancer]",
                "name": "LoadBalancer",
                "kind": "service",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "e7f29bd07918b82f7528fa9bfadc0fad81b1fcf418c50191b210125500045d4a": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]/cont-[gprod-sprt-main-dtrace]/port-[web (TCP-16686)]/service-[LoadBalancer]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-sprt-main-dtrace-web",
                        "namespace": "sprt",
                        "selfLink": "/api/v1/namespaces/sprt/services/gprod-sprt-main-dtrace-web",
                        "uid": "6e21fcbb-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1406",
                        "creationTimestamp": "2019-11-26T21:12:19Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "endpoint": "web",
                            "name": "gprod-sprt-main-dtrace-web",
                            "sector": "main",
                            "service": "dtrace"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 16686,
                                "nodePort": 31956
                            }
                        ],
                        "selector": {
                            "name": "gprod-sprt-main-dtrace"
                        },
                        "clusterIP": "10.11.255.15",
                        "type": "LoadBalancer",
                        "sessionAffinity": "None",
                        "externalTrafficPolicy": "Cluster"
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "ip": "35.247.49.191"
                                }
                            ]
                        }
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "da8b256e68f43f6637740b0267797448af29cc292df4b7b649872dec50275875": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/service-[LoadBalancer]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[LoadBalancer]",
                "name": "LoadBalancer",
                "kind": "service",
                "order": 200,
                "alertCount": {},
                "flags": {}
            }
        },
        "50babd68eb2f423b4b13bdead355dc25c94436d1f2ad3be7dc58f3d7ad448645": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/service-[LoadBalancer]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-sprt-main-grfna-default",
                        "namespace": "sprt",
                        "selfLink": "/api/v1/namespaces/sprt/services/gprod-sprt-main-grfna-default",
                        "uid": "6e12c45a-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1251",
                        "creationTimestamp": "2019-11-26T21:12:19Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "endpoint": "default",
                            "name": "gprod-sprt-main-grfna-default",
                            "sector": "main",
                            "service": "grfna"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 3000,
                                "nodePort": 31004
                            }
                        ],
                        "selector": {
                            "name": "gprod-sprt-main-grfna"
                        },
                        "clusterIP": "10.11.253.204",
                        "type": "LoadBalancer",
                        "sessionAffinity": "None",
                        "externalTrafficPolicy": "Cluster"
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "ip": "104.196.237.68"
                                }
                            ]
                        }
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "f412ac278c9e25eccef5efdabe3d88dc753c512e40319b5c79c47d48c00cd9af": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]/port-[default (TCP-3000)]/service-[LoadBalancer]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[LoadBalancer]",
                "name": "LoadBalancer",
                "kind": "service",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "6f9c59cca7fb804b3d22c212561c5fc0f0c6c88d775f99a2352b9813947c440c": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]/cont-[gprod-sprt-main-grfna]/port-[default (TCP-3000)]/service-[LoadBalancer]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-sprt-main-grfna-default",
                        "namespace": "sprt",
                        "selfLink": "/api/v1/namespaces/sprt/services/gprod-sprt-main-grfna-default",
                        "uid": "6e12c45a-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "1251",
                        "creationTimestamp": "2019-11-26T21:12:19Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "endpoint": "default",
                            "name": "gprod-sprt-main-grfna-default",
                            "sector": "main",
                            "service": "grfna"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 3000,
                                "nodePort": 31004
                            }
                        ],
                        "selector": {
                            "name": "gprod-sprt-main-grfna"
                        },
                        "clusterIP": "10.11.253.204",
                        "type": "LoadBalancer",
                        "sessionAffinity": "None",
                        "externalTrafficPolicy": "Cluster"
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "ip": "104.196.237.68"
                                }
                            ]
                        }
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "c8fe554439b5ae176618506869da82db17cf566081d76d4136c013ab6c08347c": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP]",
                "name": "ClusterIP",
                "kind": "service",
                "order": 200,
                "alertCount": {},
                "flags": {}
            }
        },
        "66c053db92f3f9b44fe1fdf9c646c498dcc20ded761baf53b8d1445ca9a446c8": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-sprt-main-prmts-push",
                        "namespace": "sprt",
                        "selfLink": "/api/v1/namespaces/sprt/services/gprod-sprt-main-prmts-push",
                        "uid": "6dcff62a-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "964",
                        "creationTimestamp": "2019-11-26T21:12:18Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "endpoint": "push",
                            "name": "gprod-sprt-main-prmts-push",
                            "sector": "main",
                            "service": "prmts"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 9091
                            }
                        ],
                        "selector": {
                            "name": "gprod-sprt-main-prmts"
                        },
                        "clusterIP": "10.11.253.232",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "dd48a3f49c24e618c919024cbe36a6e23584376651ca32ffe69efe982a18a875": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/port-[push (TCP-9091)]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP]",
                "name": "ClusterIP",
                "kind": "service",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "6a47bf5222c0b9830246390e5a95fad05c904aef2f7fa8228f1c707fd31058a7": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/port-[push (TCP-9091)]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-sprt-main-prmts-push",
                        "namespace": "sprt",
                        "selfLink": "/api/v1/namespaces/sprt/services/gprod-sprt-main-prmts-push",
                        "uid": "6dcff62a-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "964",
                        "creationTimestamp": "2019-11-26T21:12:18Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "endpoint": "push",
                            "name": "gprod-sprt-main-prmts-push",
                            "sector": "main",
                            "service": "prmts"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 9091
                            }
                        ],
                        "selector": {
                            "name": "gprod-sprt-main-prmts"
                        },
                        "clusterIP": "10.11.253.232",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "6d0b73464b973b63359fdf2a545508837748f4752dc4efd450751c05556ac3f8": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/service-[ClusterIP 2]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP 2]",
                "name": "ClusterIP 2",
                "kind": "service",
                "order": 200,
                "alertCount": {},
                "flags": {}
            }
        },
        "328966560686e3111156b70a2ad21cd053ea97f7ad1e77325c095931f32008ec": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/service-[ClusterIP 2]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-sprt-main-prmts-server",
                        "namespace": "sprt",
                        "selfLink": "/api/v1/namespaces/sprt/services/gprod-sprt-main-prmts-server",
                        "uid": "6de8bc8e-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "967",
                        "creationTimestamp": "2019-11-26T21:12:18Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "endpoint": "server",
                            "name": "gprod-sprt-main-prmts-server",
                            "sector": "main",
                            "service": "prmts"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 9090
                            }
                        ],
                        "selector": {
                            "name": "gprod-sprt-main-prmts"
                        },
                        "clusterIP": "10.11.245.157",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "44c7f1f4802696bff27a15750567a33fb75f1e077a58585a5a06fd30c4db1c8b": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/port-[server (TCP-9090)]/service-[ClusterIP 2]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP 2]",
                "name": "ClusterIP 2",
                "kind": "service",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "bd704d6a91621068bf79bf3c8f7bdec6ee2c4de0f06e1957663f4c1f74442004": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]/cont-[gprod-sprt-main-prmts]/port-[server (TCP-9090)]/service-[ClusterIP 2]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "gprod-sprt-main-prmts-server",
                        "namespace": "sprt",
                        "selfLink": "/api/v1/namespaces/sprt/services/gprod-sprt-main-prmts-server",
                        "uid": "6de8bc8e-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "967",
                        "creationTimestamp": "2019-11-26T21:12:18Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "sprt",
                            "deployment": "gprod",
                            "endpoint": "server",
                            "name": "gprod-sprt-main-prmts-server",
                            "sector": "main",
                            "service": "prmts"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 9090
                            }
                        ],
                        "selector": {
                            "name": "gprod-sprt-main-prmts"
                        },
                        "clusterIP": "10.11.245.157",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "26241fac41e41cfd155ebdd7013bfacc4d61db900e97db6a72cb92137e8050ff": {
            "dn": "root/ns-[kube-system]/app-[heapster]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP]",
                "name": "ClusterIP",
                "kind": "service",
                "order": 200,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "a663431617a40b7db2852de87041da420998fe14fb1f9895904e7da91593f8c3": {
            "dn": "root/ns-[kube-system]/app-[heapster]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "heapster",
                        "namespace": "kube-system",
                        "selfLink": "/api/v1/namespaces/kube-system/services/heapster",
                        "uid": "43e7e585-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "374",
                        "creationTimestamp": "2019-11-26T21:11:08Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "kubernetes.io/cluster-service": "true",
                            "kubernetes.io/name": "Heapster"
                        },
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"Heapster\"},\"name\":\"heapster\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":80,\"targetPort\":8082}],\"selector\":{\"k8s-app\":\"heapster\"}}}\n"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 80,
                                "targetPort": 8082
                            }
                        ],
                        "selector": {
                            "k8s-app": "heapster"
                        },
                        "clusterIP": "10.11.251.8",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "967a57a4e45a1ce36500bfdb50bd073516e8889b53b5af59b2f5de065bb7257d": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP]",
                "name": "ClusterIP",
                "kind": "service",
                "order": 200,
                "alertCount": {},
                "flags": {}
            }
        },
        "466cf6ef39b7ad9c9180eeb61c7c30ed1460bc7e0c1c5696bb2e5749fb510724": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "kube-dns",
                        "namespace": "kube-system",
                        "selfLink": "/api/v1/namespaces/kube-system/services/kube-dns",
                        "uid": "43272ca7-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "310",
                        "creationTimestamp": "2019-11-26T21:11:07Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "kube-dns",
                            "kubernetes.io/cluster-service": "true",
                            "kubernetes.io/name": "KubeDNS"
                        },
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"KubeDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.11.240.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "dns",
                                "protocol": "UDP",
                                "port": 53,
                                "targetPort": 53
                            },
                            {
                                "name": "dns-tcp",
                                "protocol": "TCP",
                                "port": 53,
                                "targetPort": 53
                            }
                        ],
                        "selector": {
                            "k8s-app": "kube-dns"
                        },
                        "clusterIP": "10.11.240.10",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "a1ab108e906a89afe4389457709e50d408cc7d829b8ce506ccb6b2a94fee729f": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/port-[dns-tcp (TCP-53)]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP]",
                "name": "ClusterIP",
                "kind": "service",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "d7bb7d4f0654c9c0cb15bc6dfca0cc1908bfd42947d665a5895ee1e066bcdc77": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]/cont-[dnsmasq]/port-[dns-tcp (TCP-53)]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "kube-dns",
                        "namespace": "kube-system",
                        "selfLink": "/api/v1/namespaces/kube-system/services/kube-dns",
                        "uid": "43272ca7-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "310",
                        "creationTimestamp": "2019-11-26T21:11:07Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "k8s-app": "kube-dns",
                            "kubernetes.io/cluster-service": "true",
                            "kubernetes.io/name": "KubeDNS"
                        },
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"KubeDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.11.240.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "dns",
                                "protocol": "UDP",
                                "port": 53,
                                "targetPort": 53
                            },
                            {
                                "name": "dns-tcp",
                                "protocol": "TCP",
                                "port": 53,
                                "targetPort": 53
                            }
                        ],
                        "selector": {
                            "k8s-app": "kube-dns"
                        },
                        "clusterIP": "10.11.240.10",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "39ae8712ba148902b2f75cc48fe6c92f9428aeaa84955d19d07237da77fe06f8": {
            "dn": "root/ns-[default]/raw-[Raw Configs]",
            "kind": "raw",
            "config_kind": "node",
            "config": {
                "rn": "raw-[Raw Configs]",
                "name": "Raw Configs",
                "kind": "raw",
                "order": 1000,
                "alertCount": {},
                "flags": {}
            }
        },
        "d05e72bb8d94fcaedcd6495bcd5b0404ce45ea973b0a660983e9c4e7eb3e533d": {
            "dn": "root/ns-[default]/raw-[Raw Configs]/raw-[Services]",
            "kind": "raw",
            "config_kind": "node",
            "config": {
                "rn": "raw-[Services]",
                "name": "Services",
                "kind": "raw",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "a76134afeaf18e614252d465bf8ab29821ce8d5edcc53a37b17b4a3dfd9b6f12": {
            "dn": "root/ns-[default]/raw-[Raw Configs]/raw-[Services]/service-[kubernetes]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[kubernetes]",
                "name": "kubernetes",
                "kind": "service",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "e1c3838cc604f4aa6f8ca6d56fd535583f5dc9b8bcd966731402cbe5db94e252": {
            "dn": "root/ns-[default]/raw-[Raw Configs]/raw-[Services]/service-[kubernetes]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "kubernetes",
                        "namespace": "default",
                        "selfLink": "/api/v1/namespaces/default/services/kubernetes",
                        "uid": "342a07ad-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "38",
                        "creationTimestamp": "2019-11-26T21:10:41Z",
                        "labels": {
                            "component": "apiserver",
                            "provider": "kubernetes"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "https",
                                "protocol": "TCP",
                                "port": 443,
                                "targetPort": 443
                            }
                        ],
                        "clusterIP": "10.11.240.1",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "352bff01fbc836215506be440eba4e8eaa460c2d8e30e631494f4e31043d5390": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP]",
                "name": "ClusterIP",
                "kind": "service",
                "order": 200,
                "alertCount": {},
                "flags": {}
            }
        },
        "1aac9510a2a9c94b0d754a8ae6d9059eb870396d4ec1c03ef8ebdf8edc13319b": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "metrics-server",
                        "namespace": "kube-system",
                        "selfLink": "/api/v1/namespaces/kube-system/services/metrics-server",
                        "uid": "453ee323-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "416",
                        "creationTimestamp": "2019-11-26T21:11:10Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "kubernetes.io/cluster-service": "true",
                            "kubernetes.io/name": "Metrics-server"
                        },
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"Metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"k8s-app\":\"metrics-server\"}}}\n"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 443,
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "k8s-app": "metrics-server"
                        },
                        "clusterIP": "10.11.250.143",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "c23524ce2ddb6c9bf9657aa67792397849a3719679c429a361a9fa2d4e169ccc": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server]/port-[https (TCP-443)]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "node",
            "config": {
                "rn": "service-[ClusterIP]",
                "name": "ClusterIP",
                "kind": "service",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "aeb1cb37255b00dc8d4a9c21abd7b2857df64a649298ab6b12c1a59797c48133": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]/cont-[metrics-server]/port-[https (TCP-443)]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Service",
                    "apiVersion": "v1",
                    "metadata": {
                        "name": "metrics-server",
                        "namespace": "kube-system",
                        "selfLink": "/api/v1/namespaces/kube-system/services/metrics-server",
                        "uid": "453ee323-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "416",
                        "creationTimestamp": "2019-11-26T21:11:10Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile",
                            "kubernetes.io/cluster-service": "true",
                            "kubernetes.io/name": "Metrics-server"
                        },
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"Metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"k8s-app\":\"metrics-server\"}}}\n"
                        }
                    },
                    "spec": {
                        "ports": [
                            {
                                "protocol": "TCP",
                                "port": 443,
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "k8s-app": "metrics-server"
                        },
                        "clusterIP": "10.11.250.143",
                        "type": "ClusterIP",
                        "sessionAffinity": "None"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "99b1006fc6230276ebaeda90df29ddeff7ab2335a1380a042b852b4f0b08d0bb": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/service-[NodePort]/ingress-[gprod-addr-web]",
            "kind": "ingress",
            "config_kind": "node",
            "config": {
                "rn": "ingress-[gprod-addr-web]",
                "name": "gprod-addr-web",
                "kind": "ingress",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b34e6def4cc9bdd02dff3e9912ecc0a738cbe88fef297fdc3c5cbd0a38d5cc8a": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/service-[NodePort]/ingress-[gprod-addr-web]",
            "kind": "ingress",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Ingress",
                    "apiVersion": "extensions/v1beta1",
                    "metadata": {
                        "name": "gprod-addr-web",
                        "namespace": "addr",
                        "selfLink": "/apis/extensions/v1beta1/namespaces/addr/ingresses/gprod-addr-web",
                        "uid": "87116134-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "3051",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:13:01Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "addr",
                            "deployment": "gprod",
                            "endpoint": "web",
                            "name": "gprod-addr-web"
                        },
                        "annotations": {
                            "ingress.gcp.kubernetes.io/pre-shared-cert": "mcrt-5da07044-22f6-4eaf-bc11-083f48517fea",
                            "ingress.kubernetes.io/backends": "{\"k8s-be-32260--4c6574cadcecffe0\":\"HEALTHY\"}",
                            "ingress.kubernetes.io/forwarding-rule": "k8s-fw-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/https-forwarding-rule": "k8s-fws-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/https-target-proxy": "k8s-tps-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/ssl-cert": "mcrt-5da07044-22f6-4eaf-bc11-083f48517fea",
                            "ingress.kubernetes.io/target-proxy": "k8s-tp-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/url-map": "k8s-um-addr-gprod-addr-web--4c6574cadcecffe0",
                            "kubernetes.io/ingress.allow-http": "true",
                            "kubernetes.io/ingress.global-static-ip-name": "gprod-addr-web",
                            "networking.gke.io/managed-certificates": "gprod-addr-web"
                        }
                    },
                    "spec": {
                        "backend": {
                            "serviceName": "gprod-addr-main-web-default",
                            "servicePort": 80
                        },
                        "tls": [
                            {
                                "hosts": [
                                    "www.example.com"
                                ]
                            }
                        ],
                        "rules": [
                            {
                                "host": "www.example.com",
                                "http": {
                                    "paths": [
                                        {
                                            "backend": {
                                                "serviceName": "gprod-addr-main-web-default",
                                                "servicePort": 80
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "ip": "35.227.208.85"
                                }
                            ]
                        }
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "002f138e35184538f9f4b8465e5c4b43afa21d4ca5c9c0da019e1929c40a51a5": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/port-[default (TCP-3000)]/service-[NodePort]/ingress-[gprod-addr-web]",
            "kind": "ingress",
            "config_kind": "node",
            "config": {
                "rn": "ingress-[gprod-addr-web]",
                "name": "gprod-addr-web",
                "kind": "ingress",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "c99b68c797106474d05b40473253bf932edebacb25c8138d98eb3dc78d478c18": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/cont-[gprod-addr-main-web]/port-[default (TCP-3000)]/service-[NodePort]/ingress-[gprod-addr-web]",
            "kind": "ingress",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Ingress",
                    "apiVersion": "extensions/v1beta1",
                    "metadata": {
                        "name": "gprod-addr-web",
                        "namespace": "addr",
                        "selfLink": "/apis/extensions/v1beta1/namespaces/addr/ingresses/gprod-addr-web",
                        "uid": "87116134-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "3051",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:13:01Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "addr",
                            "deployment": "gprod",
                            "endpoint": "web",
                            "name": "gprod-addr-web"
                        },
                        "annotations": {
                            "ingress.gcp.kubernetes.io/pre-shared-cert": "mcrt-5da07044-22f6-4eaf-bc11-083f48517fea",
                            "ingress.kubernetes.io/backends": "{\"k8s-be-32260--4c6574cadcecffe0\":\"HEALTHY\"}",
                            "ingress.kubernetes.io/forwarding-rule": "k8s-fw-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/https-forwarding-rule": "k8s-fws-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/https-target-proxy": "k8s-tps-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/ssl-cert": "mcrt-5da07044-22f6-4eaf-bc11-083f48517fea",
                            "ingress.kubernetes.io/target-proxy": "k8s-tp-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/url-map": "k8s-um-addr-gprod-addr-web--4c6574cadcecffe0",
                            "kubernetes.io/ingress.allow-http": "true",
                            "kubernetes.io/ingress.global-static-ip-name": "gprod-addr-web",
                            "networking.gke.io/managed-certificates": "gprod-addr-web"
                        }
                    },
                    "spec": {
                        "backend": {
                            "serviceName": "gprod-addr-main-web-default",
                            "servicePort": 80
                        },
                        "tls": [
                            {
                                "hosts": [
                                    "www.example.com"
                                ]
                            }
                        ],
                        "rules": [
                            {
                                "host": "www.example.com",
                                "http": {
                                    "paths": [
                                        {
                                            "backend": {
                                                "serviceName": "gprod-addr-main-web-default",
                                                "servicePort": 80
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "ip": "35.227.208.85"
                                }
                            ]
                        }
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "1fe81e5f43a4b6a06492169f8bd812592edb3dd25ce8249bd3af7cc49935a59c": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/ingress-[gprod-addr-web]",
            "kind": "ingress",
            "config_kind": "node",
            "config": {
                "rn": "ingress-[gprod-addr-web]",
                "name": "gprod-addr-web",
                "kind": "ingress",
                "order": 250,
                "alertCount": {},
                "flags": {}
            }
        },
        "cf105b51fc803a7400525e8ebf388d3ae2423e5fa5daed5b1dca92744e942f16": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]/ingress-[gprod-addr-web]",
            "kind": "ingress",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "kind": "Ingress",
                    "apiVersion": "extensions/v1beta1",
                    "metadata": {
                        "name": "gprod-addr-web",
                        "namespace": "addr",
                        "selfLink": "/apis/extensions/v1beta1/namespaces/addr/ingresses/gprod-addr-web",
                        "uid": "87116134-1091-11ea-9c04-42010a8a00bb",
                        "resourceVersion": "3051",
                        "generation": 1,
                        "creationTimestamp": "2019-11-26T21:13:01Z",
                        "labels": {
                            "berlioz_managed": "true",
                            "cluster": "addr",
                            "deployment": "gprod",
                            "endpoint": "web",
                            "name": "gprod-addr-web"
                        },
                        "annotations": {
                            "ingress.gcp.kubernetes.io/pre-shared-cert": "mcrt-5da07044-22f6-4eaf-bc11-083f48517fea",
                            "ingress.kubernetes.io/backends": "{\"k8s-be-32260--4c6574cadcecffe0\":\"HEALTHY\"}",
                            "ingress.kubernetes.io/forwarding-rule": "k8s-fw-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/https-forwarding-rule": "k8s-fws-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/https-target-proxy": "k8s-tps-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/ssl-cert": "mcrt-5da07044-22f6-4eaf-bc11-083f48517fea",
                            "ingress.kubernetes.io/target-proxy": "k8s-tp-addr-gprod-addr-web--4c6574cadcecffe0",
                            "ingress.kubernetes.io/url-map": "k8s-um-addr-gprod-addr-web--4c6574cadcecffe0",
                            "kubernetes.io/ingress.allow-http": "true",
                            "kubernetes.io/ingress.global-static-ip-name": "gprod-addr-web",
                            "networking.gke.io/managed-certificates": "gprod-addr-web"
                        }
                    },
                    "spec": {
                        "backend": {
                            "serviceName": "gprod-addr-main-web-default",
                            "servicePort": 80
                        },
                        "tls": [
                            {
                                "hosts": [
                                    "www.example.com"
                                ]
                            }
                        ],
                        "rules": [
                            {
                                "host": "www.example.com",
                                "http": {
                                    "paths": [
                                        {
                                            "backend": {
                                                "serviceName": "gprod-addr-main-web-default",
                                                "servicePort": 80
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "ip": "35.227.208.85"
                                }
                            ]
                        }
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "f2d41e5eb150fd801a4433479207d45fdd3d6add14d3820d215c75c1a4f2fd42": {
            "dn": "root/ns-[berlioz]/raw-[Raw Configs]",
            "kind": "raw",
            "config_kind": "node",
            "config": {
                "rn": "raw-[Raw Configs]",
                "name": "Raw Configs",
                "kind": "raw",
                "order": 1000,
                "alertCount": {},
                "flags": {}
            }
        },
        "1a0be44958e9d47c9d2fd28aaa75336e13a3f72a6f5830f939abc23b934bb6b8": {
            "dn": "root/ns-[berlioz]/raw-[Raw Configs]/raw-[ConfigMaps]",
            "kind": "raw",
            "config_kind": "node",
            "config": {
                "rn": "raw-[ConfigMaps]",
                "name": "ConfigMaps",
                "kind": "raw",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "9db51e5c68fcab737cdf98618ee99f7d970896f859b27418a191c910b8a1779d": {
            "dn": "root/ns-[berlioz]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[sql-schema]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[sql-schema]",
                "name": "sql-schema",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "c611c6f4aa88bb72ee5f393726550ab3116aaf854123da13ffeed1ad547658f1": {
            "dn": "root/ns-[berlioz]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[sql-schema]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "dump": "CREATE DATABASE IF NOT EXISTS demo;\n\nUSE demo;\n\nCREATE TABLE IF NOT EXISTS contacts (\n    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    name varchar(100),\n    phone varchar(100)\n    );"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T23:53:01Z",
                        "labels": {
                            "app": "app"
                        },
                        "name": "sql-schema",
                        "namespace": "berlioz",
                        "resourceVersion": "35910",
                        "selfLink": "/api/v1/namespaces/berlioz/configmaps/sql-schema",
                        "uid": "654c0f76-04de-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "6a9fc899be16c9551ca4a506b01168762439b9fe165bd80089ea8e3ee0e2482b": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]",
            "kind": "raw",
            "config_kind": "node",
            "config": {
                "rn": "raw-[Raw Configs]",
                "name": "Raw Configs",
                "kind": "raw",
                "order": 1000,
                "alertCount": {},
                "flags": {}
            }
        },
        "2350cfda64f0cf369c27b73de519b1335024d88cb19a8de1da7d68b151830190": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]",
            "kind": "raw",
            "config_kind": "node",
            "config": {
                "rn": "raw-[ConfigMaps]",
                "name": "ConfigMaps",
                "kind": "raw",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "f27ae1d3110ec472236ac0749061f4c933febb4d70df5fa6565bc7fdb07e1d9b": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-crd-10]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[istio-crd-10]",
                "name": "istio-crd-10",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "02066827e1fde730d554cddb0190c1626c6735471ecf35b6c942a0fe65e374d4": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-crd-10]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "crd-10.yaml": "apiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: virtualservices.networking.istio.io\n  labels:\n    app: istio-pilot\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: networking.istio.io\n  names:\n    kind: VirtualService\n    listKind: VirtualServiceList\n    plural: virtualservices\n    singular: virtualservice\n    shortNames:\n    - vs\n    categories:\n    - istio-io\n    - networking-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha3\n      served: true\n      storage: true\n  additionalPrinterColumns:\n  - JSONPath: .spec.gateways\n    description: The names of gateways and sidecars that should apply these routes\n    name: Gateways\n    type: string\n  - JSONPath: .spec.hosts\n    description: The destination hosts to which traffic is being sent\n    name: Hosts\n    type: string\n  - JSONPath: .metadata.creationTimestamp\n    description: |-\n      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\n      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n    name: Age\n    type: date\n---\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: destinationrules.networking.istio.io\n  labels:\n    app: istio-pilot\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: networking.istio.io\n  names:\n    kind: DestinationRule\n    listKind: DestinationRuleList\n    plural: destinationrules\n    singular: destinationrule\n    shortNames:\n    - dr\n    categories:\n    - istio-io\n    - networking-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha3\n      served: true\n      storage: true\n  additionalPrinterColumns:\n  - JSONPath: .spec.host\n    description: The name of a service from the service registry\n    name: Host\n    type: string\n  - JSONPath: .metadata.creationTimestamp\n    description: |-\n      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\n      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n    name: Age\n    type: date\n---\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: serviceentries.networking.istio.io\n  labels:\n    app: istio-pilot\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: networking.istio.io\n  names:\n    kind: ServiceEntry\n    listKind: ServiceEntryList\n    plural: serviceentries\n    singular: serviceentry\n    shortNames:\n    - se\n    categories:\n    - istio-io\n    - networking-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha3\n      served: true\n      storage: true\n  additionalPrinterColumns:\n  - JSONPath: .spec.hosts\n    description: The hosts associated with the ServiceEntry\n    name: Hosts\n    type: string\n  - JSONPath: .spec.location\n    description: Whether the service is external to the mesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)\n    name: Location\n    type: string\n  - JSONPath: .spec.resolution\n    description: Service discovery mode for the hosts (NONE, STATIC, or DNS)\n    name: Resolution\n    type: string\n  - JSONPath: .metadata.creationTimestamp\n    description: |-\n      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\n      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n    name: Age\n    type: date\n---\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: gateways.networking.istio.io\n  labels:\n    app: istio-pilot\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: networking.istio.io\n  names:\n    kind: Gateway\n    plural: gateways\n    singular: gateway\n    shortNames:\n    - gw\n    categories:\n    - istio-io\n    - networking-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha3\n      served: true\n      storage: true\n---\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: envoyfilters.networking.istio.io\n  labels:\n    app: istio-pilot\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: networking.istio.io\n  names:\n    kind: EnvoyFilter\n    plural: envoyfilters\n    singular: envoyfilter\n    categories:\n    - istio-io\n    - networking-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha3\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: clusterrbacconfigs.rbac.istio.io\n  labels:\n    app: istio-pilot\n    istio: rbac\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: rbac.istio.io\n  names:\n    kind: ClusterRbacConfig\n    plural: clusterrbacconfigs\n    singular: clusterrbacconfig\n    categories:\n    - istio-io\n    - rbac-istio-io\n  scope: Cluster\n  versions:\n    - name: v1alpha1\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: policies.authentication.istio.io\n  labels:\n    app: istio-citadel\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: authentication.istio.io\n  names:\n    kind: Policy\n    plural: policies\n    singular: policy\n    categories:\n    - istio-io\n    - authentication-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha1\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: meshpolicies.authentication.istio.io\n  labels:\n    app: istio-citadel\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: authentication.istio.io\n  names:\n    kind: MeshPolicy\n    listKind: MeshPolicyList\n    plural: meshpolicies\n    singular: meshpolicy\n    categories:\n    - istio-io\n    - authentication-istio-io\n  scope: Cluster\n  versions:\n    - name: v1alpha1\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: httpapispecbindings.config.istio.io\n  labels:\n    app: istio-mixer\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: config.istio.io\n  names:\n    kind: HTTPAPISpecBinding\n    plural: httpapispecbindings\n    singular: httpapispecbinding\n    categories:\n    - istio-io\n    - apim-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha2\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: httpapispecs.config.istio.io\n  labels:\n    app: istio-mixer\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: config.istio.io\n  names:\n    kind: HTTPAPISpec\n    plural: httpapispecs\n    singular: httpapispec\n    categories:\n    - istio-io\n    - apim-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha2\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: quotaspecbindings.config.istio.io\n  labels:\n    app: istio-mixer\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: config.istio.io\n  names:\n    kind: QuotaSpecBinding\n    plural: quotaspecbindings\n    singular: quotaspecbinding\n    categories:\n    - istio-io\n    - apim-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha2\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: quotaspecs.config.istio.io\n  labels:\n    app: istio-mixer\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: config.istio.io\n  names:\n    kind: QuotaSpec\n    plural: quotaspecs\n    singular: quotaspec\n    categories:\n    - istio-io\n    - apim-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha2\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: rules.config.istio.io\n  labels:\n    app: mixer\n    package: istio.io.mixer\n    istio: core\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: config.istio.io\n  names:\n    kind: rule\n    plural: rules\n    singular: rule\n    categories:\n    - istio-io\n    - policy-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha2\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: attributemanifests.config.istio.io\n  labels:\n    app: mixer\n    package: istio.io.mixer\n    istio: core\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: config.istio.io\n  names:\n    kind: attributemanifest\n    plural: attributemanifests\n    singular: attributemanifest\n    categories:\n    - istio-io\n    - policy-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha2\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: rbacconfigs.rbac.istio.io\n  labels:\n    app: mixer\n    package: istio.io.mixer\n    istio: rbac\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: rbac.istio.io\n  names:\n    kind: RbacConfig\n    plural: rbacconfigs\n    singular: rbacconfig\n    categories:\n    - istio-io\n    - rbac-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha1\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: serviceroles.rbac.istio.io\n  labels:\n    app: mixer\n    package: istio.io.mixer\n    istio: rbac\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: rbac.istio.io\n  names:\n    kind: ServiceRole\n    plural: serviceroles\n    singular: servicerole\n    categories:\n    - istio-io\n    - rbac-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha1\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: servicerolebindings.rbac.istio.io\n  labels:\n    app: mixer\n    package: istio.io.mixer\n    istio: rbac\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: rbac.istio.io\n  names:\n    kind: ServiceRoleBinding\n    plural: servicerolebindings\n    singular: servicerolebinding\n    categories:\n    - istio-io\n    - rbac-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha1\n      served: true\n      storage: true\n  additionalPrinterColumns:\n  - JSONPath: .spec.roleRef.name\n    description: The name of the ServiceRole object being referenced\n    name: Reference\n    type: string\n  - JSONPath: .metadata.creationTimestamp\n    description: |-\n      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\n      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n    name: Age\n    type: date\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: adapters.config.istio.io\n  labels:\n    app: mixer\n    package: adapter\n    istio: mixer-adapter\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: config.istio.io\n  names:\n    kind: adapter\n    plural: adapters\n    singular: adapter\n    categories:\n    - istio-io\n    - policy-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha2\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: instances.config.istio.io\n  labels:\n    app: mixer\n    package: instance\n    istio: mixer-instance\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: config.istio.io\n  names:\n    kind: instance\n    plural: instances\n    singular: instance\n    categories:\n    - istio-io\n    - policy-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha2\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: templates.config.istio.io\n  labels:\n    app: mixer\n    package: template\n    istio: mixer-template\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: config.istio.io\n  names:\n    kind: template\n    plural: templates\n    singular: template\n    categories:\n    - istio-io\n    - policy-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha2\n      served: true\n      storage: true\n---\nkind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: handlers.config.istio.io\n  labels:\n    app: mixer\n    package: handler\n    istio: mixer-handler\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: config.istio.io\n  names:\n    kind: handler\n    plural: handlers\n    singular: handler\n    categories:\n    - istio-io\n    - policy-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha2\n      served: true\n      storage: true\n---"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:29:18Z",
                        "name": "istio-crd-10",
                        "namespace": "istio-system",
                        "resourceVersion": "1632",
                        "selfLink": "/api/v1/namespaces/istio-system/configmaps/istio-crd-10",
                        "uid": "51343b1e-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "599a747b42e88fc3b46e63536d12bc69747545551dc36b50afd4e30bce39f6d1": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-crd-11]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[istio-crd-11]",
                "name": "istio-crd-11",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "be7bec59fa3419f0d089d334fe53d663cf0fd0258f867384b12cf4ca289c481e": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-crd-11]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "crd-11.yaml": "apiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: sidecars.networking.istio.io\n  labels:\n    app: istio-pilot\n    chart: istio\n    heritage: Tiller\n    release: istio\n  annotations:\n    \"helm.sh/resource-policy\": keep\nspec:\n  group: networking.istio.io\n  names:\n    kind: Sidecar\n    plural: sidecars\n    singular: sidecar\n    categories:\n    - istio-io\n    - networking-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha3\n      served: true\n      storage: true\n---"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:29:18Z",
                        "name": "istio-crd-11",
                        "namespace": "istio-system",
                        "resourceVersion": "1633",
                        "selfLink": "/api/v1/namespaces/istio-system/configmaps/istio-crd-11",
                        "uid": "5134692f-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "4c2630cfdc02714d43468c6e09be26378d0f6768b86307257d8b9e3a661d5222": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-crd-12]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[istio-crd-12]",
                "name": "istio-crd-12",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "7a93ab159b7e8a6932b33af6d95525fe1b8e59b6d6503424acb0fcd7e2189784": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-crd-12]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "crd-12.yaml": "kind: CustomResourceDefinition\napiVersion: apiextensions.k8s.io/v1beta1\nmetadata:\n  name: authorizationpolicies.rbac.istio.io\n  labels:\n    app: istio-pilot\n    istio: rbac\n    heritage: Tiller\n    release: istio\nspec:\n  group: rbac.istio.io\n  names:\n    kind: AuthorizationPolicy\n    plural: authorizationpolicies\n    singular: authorizationpolicy\n    categories:\n      - istio-io\n      - rbac-istio-io\n  scope: Namespaced\n  versions:\n    - name: v1alpha1\n      served: true\n      storage: true\n---"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:29:18Z",
                        "name": "istio-crd-12",
                        "namespace": "istio-system",
                        "resourceVersion": "1634",
                        "selfLink": "/api/v1/namespaces/istio-system/configmaps/istio-crd-12",
                        "uid": "5133c728-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "29cb698bef6332551fc3e047da22ce0e1362e42b885aad458c08576cc93f38bf": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-galley-configuration]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[istio-galley-configuration]",
                "name": "istio-galley-configuration",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "82fcdb4e90dfb6e6d2cd6b2737e3ab3347df3fe78477ee597268cb4ba6065447": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-galley-configuration]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "validatingwebhookconfiguration.yaml": "apiVersion: admissionregistration.k8s.io/v1beta1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  name: istio-galley\n  labels:\n    app: galley\n    chart: galley\n    heritage: Tiller\n    release: istio\n    istio: galley\nwebhooks:\n  - name: pilot.validation.istio.io\n    clientConfig:\n      service:\n        name: istio-galley\n        namespace: istio-system\n        path: \"/admitpilot\"\n      caBundle: \"\"\n    rules:\n      - operations:\n        - CREATE\n        - UPDATE\n        apiGroups:\n        - config.istio.io\n        apiVersions:\n        - v1alpha2\n        resources:\n        - httpapispecs\n        - httpapispecbindings\n        - quotaspecs\n        - quotaspecbindings\n      - operations:\n        - CREATE\n        - UPDATE\n        apiGroups:\n        - rbac.istio.io\n        apiVersions:\n        - \"*\"\n        resources:\n        - \"*\"\n      - operations:\n        - CREATE\n        - UPDATE\n        apiGroups:\n        - authentication.istio.io\n        apiVersions:\n        - \"*\"\n        resources:\n        - \"*\"\n      - operations:\n        - CREATE\n        - UPDATE\n        apiGroups:\n        - networking.istio.io\n        apiVersions:\n        - \"*\"\n        resources:\n        - destinationrules\n        - envoyfilters\n        - gateways\n        - serviceentries\n        - sidecars\n        - virtualservices\n    failurePolicy: Fail\n    sideEffects: None\n  - name: mixer.validation.istio.io\n    clientConfig:\n      service:\n        name: istio-galley\n        namespace: istio-system\n        path: \"/admitmixer\"\n      caBundle: \"\"\n    rules:\n      - operations:\n        - CREATE\n        - UPDATE\n        apiGroups:\n        - config.istio.io\n        apiVersions:\n        - v1alpha2\n        resources:\n        - rules\n        - attributemanifests\n        - circonuses\n        - deniers\n        - fluentds\n        - kubernetesenvs\n        - listcheckers\n        - memquotas\n        - noops\n        - opas\n        - prometheuses\n        - rbacs\n        - solarwindses\n        - stackdrivers\n        - cloudwatches\n        - dogstatsds\n        - statsds\n        - stdios\n        - apikeys\n        - authorizations\n        - checknothings\n        # - kuberneteses\n        - listentries\n        - logentries\n        - metrics\n        - quotas\n        - reportnothings\n        - tracespans\n        - adapters\n        - handlers\n        - instances\n        - templates\n        - zipkins\n    failurePolicy: Fail\n    sideEffects: None"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:30:22Z",
                        "labels": {
                            "app": "galley",
                            "chart": "galley",
                            "heritage": "Tiller",
                            "istio": "galley",
                            "release": "istio"
                        },
                        "name": "istio-galley-configuration",
                        "namespace": "istio-system",
                        "resourceVersion": "2034",
                        "selfLink": "/api/v1/namespaces/istio-system/configmaps/istio-galley-configuration",
                        "uid": "77af6eb2-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "516164e3233c0b50d7948f4e916e342902e15beb11c8ec4a524f2c79b281f1e7": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-security-custom-resources]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[istio-security-custom-resources]",
                "name": "istio-security-custom-resources",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "d3c3107b333dc34979052bb06bcee4db861527c29cbb75518319775226fe0d6c": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-security-custom-resources]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "custom-resources.yaml": "# These policy and destination rules effectively enable mTLS for all services in the mesh. For now,\n# they are added to Istio installation yaml for backward compatible. In future, they should be in\n# a separated yaml file so that customer can enable mTLS independent from installation.\n\n# Authentication policy to enable mutual TLS for all services (that have sidecar) in the mesh.\napiVersion: \"authentication.istio.io/v1alpha1\"\nkind: \"MeshPolicy\"\nmetadata:\n  name: \"default\"\n  labels:\n    app: security\n    chart: security\n    heritage: Tiller\n    release: istio\nspec:\n  peers:\n  - mtls: {}\n---\n# Corresponding destination rule to configure client side to use mutual TLS when talking to\n# any service (host) in the mesh.\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: \"default\"\n  namespace: istio-system\n  labels:\n    app: security\n    chart: security\n    heritage: Tiller\n    release: istio\nspec:\n  host: \"*.local\"\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n---\n# Destination rule to disable (m)TLS when talking to API server, as API server doesn't have sidecar.\n# Customer should add similar destination rules for other services that don't have sidecar.\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: \"api-server\"\n  namespace: istio-system\n  labels:\n    app: security\n    chart: security\n    heritage: Tiller\n    release: istio\nspec:\n  host: \"kubernetes.default.svc.cluster.local\"\n  trafficPolicy:\n    tls:\n      mode: DISABLE",
                        "run.sh": "#!/bin/sh\n\nset -x\n\nif [ \"$#\" -ne \"1\" ]; then\n    echo \"first argument should be path to custom resource yaml\"\n    exit 1\nfi\n\npathToResourceYAML=${1}\n\nkubectl get validatingwebhookconfiguration istio-galley 2>/dev/null\nif [ \"$?\" -eq 0 ]; then\n    echo \"istio-galley validatingwebhookconfiguration found - waiting for istio-galley deployment to be ready\"\n    while true; do\n        kubectl -n istio-system get deployment istio-galley 2>/dev/null\n        if [ \"$?\" -eq 0 ]; then\n            break\n        fi\n        sleep 1\n    done\n    kubectl -n istio-system rollout status deployment istio-galley\n    if [ \"$?\" -ne 0 ]; then\n        echo \"istio-galley deployment rollout status check failed\"\n        exit 1\n    fi\n    echo \"istio-galley deployment ready for configuration validation\"\nfi\nsleep 5\nkubectl apply -f ${pathToResourceYAML}"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:30:22Z",
                        "labels": {
                            "app": "security",
                            "chart": "security",
                            "heritage": "Tiller",
                            "istio": "citadel",
                            "release": "istio"
                        },
                        "name": "istio-security-custom-resources",
                        "namespace": "istio-system",
                        "resourceVersion": "2032",
                        "selfLink": "/api/v1/namespaces/istio-system/configmaps/istio-security-custom-resources",
                        "uid": "77af3e57-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "4246dfd51cb3ca979dd4ba21310de9fc5ce3b02bcde5aaa814784c0b0fdca05f": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-security]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[istio-security]",
                "name": "istio-security",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "41e861581e9792766e8b8d3e8681f7b1280a982ba522923540b0d82b0ce96b12": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-security]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "caTLSRootCert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRVjhJcjI0UE01Yi9LU0lXNloxMVdyREFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRFNU1URXhNVEl4TXpBek4xb1hEVEk1TVRFdwpPREl4TXpBek4xb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOZFpHYmVpS3BZdXhFZkdEa05jM1NGMlN3L1NkUFhza0ZIeXhnVmoKVWdFQWMxdDhpQUV5VGVJZVhoemt3T1hianpseEZtQUplbytaRTVlMVM5U2psWHhwR005QytHZ1hKWjVpRFoweAptWHRQaHAya2lxUloxcjZKUU0vTkhXY0hKUEFYenRxLzIxSEdYaThIU1dTOWU2SjdjWk1pYUFlbGFaNmZqaTR6CngvV0tSUnRYYnhxd0s4WGJxdUdpMEthYjE2VGEza3pZNGdZNzZ3NDQwakMreE1HRUlqZ2FScTBuUXdXUHllOFcKbXY5MnFZMEN5V3hxVmtOd044QmlyNmxkT0EvQ1pvM2ZFREE2REtkalNWbTc0ZU5wQUNUTmRaTUc5NGdYaGl4WApaUHVlZ3dZVE5xTitKMjhrVkI5TWZGOFBsNnFPZXkzSWx6UzNBMFl2VlQvOVhPRUNBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQU5FSWlEYzVNTG0zWVVEQzh6SERKbmcxS0owcmY5L09Hc1BJcHRZVVFvejNGMjJVd1Jhclc0RGl2YzFEMitNQwpRRkpRREJDUGxyUVdxWXVJc2dvVVR6L2h4cDJXWjZwVXlmRW5VekVER1FHM1hTOTRrbG5peC9ZSStuZDhYMk13CnYvMkxheGNFU0ZuR0ZENFhYOGdpTEZuU3ZGaUhla2xPeTJxUWdtbmkwWXRmYnByeVF3cko2KzdIb2lZbzZQcVgKWFkxVW80bWxwR2FGeTA4ejZJMzF3bXhzUTlDemE4cWdveHJ3YkxRU29oelEwTlk5Y0pSR3FwWjd5UlZkNUVyOQpyYmJaTWVzWmdZUXBSNmE2UUcyRmVwMTgzNGltdm9wbHBYanJFMzBRektabnF0NTZxSVduMUNqME9kSnZoY00vCjc1RTBVQ2l6OHltckRoaDJEd0xCWW9NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:30:37Z",
                        "name": "istio-security",
                        "namespace": "istio-system",
                        "resourceVersion": "2385",
                        "selfLink": "/api/v1/namespaces/istio-system/configmaps/istio-security",
                        "uid": "808c2a26-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "b1af8cc0f2669dd654c9b5846e049f31760a6be3bb313cc0f2eacfaddf6de086": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-sidecar-injector]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[istio-sidecar-injector]",
                "name": "istio-sidecar-injector",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "bb982c832addeaddcd07e8ad122eafdb4d7c91f1573fcb96a3124b5fd8b87330": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-sidecar-injector]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "config": "policy: enabled\nalwaysInjectSelector:\n  []\nneverInjectSelector:\n  []\ntemplate: |-\n  rewriteAppHTTPProbe: {{ valueOrDefault .Values.sidecarInjectorWebhook.rewriteAppHTTPProbe false }}\n  {{- if or (not .Values.istio_cni.enabled) .Values.global.proxy.enableCoreDump }}\n  initContainers:\n  {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}\n  {{- if not .Values.istio_cni.enabled }}\n  - name: istio-init\n  {{- if contains \"/\" .Values.global.proxy_init.image }}\n    image: \"{{ .Values.global.proxy_init.image }}\"\n  {{- else }}\n    image: \"{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}\"\n  {{- end }}\n    args:\n    - \"-p\"\n    - \"15001\"\n    - \"-z\"\n    - \"15006\"\n    - \"-u\"\n    - 1337\n    - \"-m\"\n    - \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\"\n    - \"-i\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}\"\n    - \"-x\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}\"\n    - \"-b\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}\"\n    - \"-d\"\n    - \"{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\"\n    {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts \"\") -}}\n    - \"-o\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\"\n    {{ end -}}\n    {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}\n    - \"-k\"\n    - \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}\"\n    {{ end -}}\n    imagePullPolicy: \"{{ .Values.global.imagePullPolicy }}\"\n  {{- if .Values.global.proxy.init.resources }}\n    resources:\n      {{ toYaml .Values.global.proxy.init.resources | indent 4 }}\n  {{- else }}\n    resources: {}\n  {{- end }}\n    securityContext:\n      runAsUser: 0\n      runAsNonRoot: false\n      capabilities:\n        add:\n        - NET_ADMIN\n      {{- if .Values.global.proxy.privileged }}\n      privileged: true\n      {{- end }}\n    restartPolicy: Always\n  {{- end }}\n  {{  end -}}\n  {{- if eq .Values.global.proxy.enableCoreDump true }}\n  - name: enable-core-dump\n    args:\n    - -c\n    - sysctl -w kernel.core_pattern=/var/lib/istio/core.proxy && ulimit -c unlimited\n    command:\n      - /bin/sh\n    image: {{ $.Values.global.proxy.enableCoreDumpImage }}\n    imagePullPolicy: IfNotPresent\n    resources: {}\n    securityContext:\n      runAsUser: 0\n      runAsNonRoot: false\n      privileged: true\n  {{ end }}\n  {{- end }}\n  containers:\n  - name: istio-proxy\n  {{- if contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\n    image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\"\n  {{- else }}\n    image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}\"\n  {{- end }}\n    ports:\n    - containerPort: 15090\n      protocol: TCP\n      name: http-envoy-prom\n    args:\n    - proxy\n    - sidecar\n    - --domain\n    - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n    - --configPath\n    - \"{{ .ProxyConfig.ConfigPath }}\"\n    - --binaryPath\n    - \"{{ .ProxyConfig.BinaryPath }}\"\n    - --serviceCluster\n    {{ if ne \"\" (index .ObjectMeta.Labels \"app\") -}}\n    - \"{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)\"\n    {{ else -}}\n    - \"{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}\"\n    {{ end -}}\n    - --drainDuration\n    - \"{{ formatDuration .ProxyConfig.DrainDuration }}\"\n    - --parentShutdownDuration\n    - \"{{ formatDuration .ProxyConfig.ParentShutdownDuration }}\"\n    - --discoveryAddress\n    - \"{{ annotation .ObjectMeta `sidecar.istio.io/discoveryAddress` .ProxyConfig.DiscoveryAddress }}\"\n  {{- if eq .Values.global.proxy.tracer \"lightstep\" }}\n    - --lightstepAddress\n    - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetAddress }}\"\n    - --lightstepAccessToken\n    - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetAccessToken }}\"\n    - --lightstepSecure={{ .ProxyConfig.GetTracing.GetLightstep.GetSecure }}\n    - --lightstepCacertPath\n    - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetCacertPath }}\"\n  {{- else if eq .Values.global.proxy.tracer \"zipkin\" }}\n    - --zipkinAddress\n    - \"{{ .ProxyConfig.GetTracing.GetZipkin.GetAddress }}\"\n  {{- else if eq .Values.global.proxy.tracer \"datadog\" }}\n    - --datadogAgentAddress\n    - \"{{ .ProxyConfig.GetTracing.GetDatadog.GetAddress }}\"\n  {{- end }}\n  {{- if .Values.global.proxy.logLevel }}\n    - --proxyLogLevel={{ .Values.global.proxy.logLevel }}\n  {{- end}}\n  {{- if .Values.global.proxy.componentLogLevel }}\n    - --proxyComponentLogLevel={{ .Values.global.proxy.componentLogLevel }}\n  {{- end}}\n    - --dnsRefreshRate\n    - {{ .Values.global.proxy.dnsRefreshRate }}\n    - --connectTimeout\n    - \"{{ formatDuration .ProxyConfig.ConnectTimeout }}\"\n  {{- if .Values.global.proxy.envoyStatsd.enabled }}\n    - --statsdUdpAddress\n    - \"{{ .ProxyConfig.StatsdUdpAddress }}\"\n  {{- end }}\n  {{- if .Values.global.proxy.envoyMetricsService.enabled }}\n    - --envoyMetricsServiceAddress\n    - \"{{ .ProxyConfig.GetEnvoyMetricsService.GetAddress }}\"\n  {{- end }}\n  {{- if .Values.global.proxy.envoyAccessLogService.enabled }}\n    - --envoyAccessLogService\n    - '{{ structToJSON .ProxyConfig.EnvoyAccessLogService }}'\n  {{- end }}\n    - --proxyAdminPort\n    - \"{{ .ProxyConfig.ProxyAdminPort }}\"\n    {{ if gt .ProxyConfig.Concurrency 0 -}}\n    - --concurrency\n    - \"{{ .ProxyConfig.Concurrency }}\"\n    {{ end -}}\n    - --controlPlaneAuthPolicy\n    - \"{{ annotation .ObjectMeta `sidecar.istio.io/controlPlaneAuthPolicy` .ProxyConfig.ControlPlaneAuthPolicy }}\"\n  {{- if (ne (annotation .ObjectMeta \"status.sidecar.istio.io/port\" .Values.global.proxy.statusPort) \"0\") }}\n    - --statusPort\n    - \"{{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort }}\"\n    - --applicationPorts\n    - \"{{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/applicationPorts` (applicationPorts .Spec.Containers) }}\"\n  {{- end }}\n  {{- if .Values.global.trustDomain }}\n    - --trust-domain={{ .Values.global.trustDomain }}\n  {{- end }}\n    env:\n    - name: POD_NAME\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.name\n    - name: ISTIO_META_POD_PORTS\n      value: |-\n        [\n        {{- range $index1, $c := .Spec.Containers }}\n          {{- range $index2, $p := $c.Ports }}\n            {{if or (ne $index1 0) (ne $index2 0)}},{{end}}{{ structToJSON $p }}\n          {{- end}}\n        {{- end}}\n        ]\n    - name: ISTIO_META_CLUSTER_ID\n      value: \"{{ valueOrDefault .Values.global.multicluster.clusterName `Kubernetes` }}\"\n    - name: POD_NAMESPACE\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.namespace\n    - name: INSTANCE_IP\n      valueFrom:\n        fieldRef:\n          fieldPath: status.podIP\n    - name: SERVICE_ACCOUNT\n      valueFrom:\n        fieldRef:\n          fieldPath: spec.serviceAccountName\n  {{- if eq .Values.global.proxy.tracer \"datadog\" }}\n    - name: HOST_IP\n      valueFrom:\n        fieldRef:\n          fieldPath: status.hostIP\n  {{- if isset .ObjectMeta.Annotations `apm.datadoghq.com/env` }}\n  {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n    - name: {{ $key }}\n      value: \"{{ $value }}\"\n  {{- end }}\n  {{- end }}\n  {{- end }}\n    - name: ISTIO_META_POD_NAME\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.name\n    - name: ISTIO_META_CONFIG_NAMESPACE\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.namespace\n    - name: SDS_ENABLED\n      value: {{ $.Values.global.sds.enabled }}\n    - name: ISTIO_META_INTERCEPTION_MODE\n      value: \"{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}\"\n    - name: ISTIO_META_INCLUDE_INBOUND_PORTS\n      value: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (applicationPorts .Spec.Containers) }}\"\n    {{- if .Values.global.network }}\n    - name: ISTIO_META_NETWORK\n      value: \"{{ .Values.global.network }}\"\n    {{- end }}\n    {{ if .ObjectMeta.Annotations }}\n    - name: ISTIO_METAJSON_ANNOTATIONS\n      value: |\n             {{ toJSON .ObjectMeta.Annotations }}\n    {{ end }}\n    {{ if .ObjectMeta.Labels }}\n    - name: ISTIO_METAJSON_LABELS\n      value: |\n             {{ toJSON .ObjectMeta.Labels }}\n    {{ end }}\n    {{- if .DeploymentMeta.Name }}\n    - name: ISTIO_META_WORKLOAD_NAME\n      value: {{ .DeploymentMeta.Name }}\n    {{ end }}\n    {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\n    - name: ISTIO_META_OWNER\n      value: kubernetes://api/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n     {{- end}}\n    {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n    - name: ISTIO_BOOTSTRAP_OVERRIDE\n      value: \"/etc/istio/custom-bootstrap/custom_bootstrap.json\"\n    {{- end }}\n    {{- if .Values.global.sds.customTokenDirectory }}\n    - name: ISTIO_META_SDS_TOKEN_PATH\n      value: \"{{ .Values.global.sds.customTokenDirectory -}}/sdstoken\"\n    {{- end }}\n    {{- if .Values.global.meshID }}\n    - name: ISTIO_META_MESH_ID\n      value: \"{{ .Values.global.meshID }}\"\n    {{- else if .Values.global.trustDomain }}\n    - name: ISTIO_META_MESH_ID\n      value: \"{{ .Values.global.trustDomain }}\"\n    {{- end }}\n    imagePullPolicy: {{ .Values.global.imagePullPolicy }}\n    {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\n    readinessProbe:\n      httpGet:\n        path: /healthz/ready\n        port: {{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort }}\n      initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}\n      periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}\n      failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}\n    {{ end -}}\n    securityContext:\n      {{- if .Values.global.proxy.privileged }}\n      privileged: true\n      {{- end }}\n      {{- if ne .Values.global.proxy.enableCoreDump true }}\n      readOnlyRootFilesystem: true\n      {{- end }}\n      {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}\n      capabilities:\n        add:\n        - NET_ADMIN\n      runAsGroup: 1337\n      {{ else -}}\n      {{ if .Values.global.sds.enabled }}\n      runAsGroup: 1337\n      {{- end }}\n      runAsUser: 1337\n      {{- end }}\n    resources:\n      {{ if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\n      requests:\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}\n        cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}\"\n        {{ end}}\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\n        memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}\"\n        {{ end }}\n    {{ else -}}\n  {{- if .Values.global.proxy.resources }}\n      {{ toYaml .Values.global.proxy.resources | indent 4 }}\n  {{- end }}\n    {{  end -}}\n    volumeMounts:\n    {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n    - mountPath: /etc/istio/custom-bootstrap\n      name: custom-bootstrap-volume\n    {{- end }}\n    - mountPath: /etc/istio/proxy\n      name: istio-envoy\n    {{- if .Values.global.sds.enabled }}\n    - mountPath: /var/run/sds\n      name: sds-uds-path\n      readOnly: true\n    - mountPath: /var/run/secrets/tokens\n      name: istio-token\n    {{- if .Values.global.sds.customTokenDirectory }}\n    - mountPath: \"{{ .Values.global.sds.customTokenDirectory -}}\"\n      name: custom-sds-token\n      readOnly: true\n    {{- end }}\n    {{- else }}\n    - mountPath: /etc/certs/\n      name: istio-certs\n      readOnly: true\n    {{- end }}\n    {{- if and (eq .Values.global.proxy.tracer \"lightstep\") .Values.global.tracer.lightstep.cacertPath }}\n    - mountPath: {{ directory .ProxyConfig.GetTracing.GetLightstep.GetCacertPath }}\n      name: lightstep-certs\n      readOnly: true\n    {{- end }}\n      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\n      {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}\n    - name: \"{{  $index }}\"\n      {{ toYaml $value | indent 4 }}\n      {{ end }}\n      {{- end }}\n  volumes:\n  {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n  - name: custom-bootstrap-volume\n    configMap:\n      name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` \"\" }}\n  {{- end }}\n  - emptyDir:\n      medium: Memory\n    name: istio-envoy\n  {{- if .Values.global.sds.enabled }}\n  - name: sds-uds-path\n    hostPath:\n      path: /var/run/sds\n  - name: istio-token\n    projected:\n      sources:\n        - serviceAccountToken:\n            path: istio-token\n            expirationSeconds: 43200\n            audience: {{ .Values.global.sds.token.aud }}\n  {{- if .Values.global.sds.customTokenDirectory }}\n  - name: custom-sds-token\n    secret:\n      secretName: sdstokensecret\n  {{- end }}\n  {{- else }}\n  - name: istio-certs\n    secret:\n      optional: true\n      {{ if eq .Spec.ServiceAccountName \"\" }}\n      secretName: istio.default\n      {{ else -}}\n      secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName }}\n      {{  end -}}\n    {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}\n    {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\n  - name: \"{{ $index }}\"\n    {{ toYaml $value | indent 2 }}\n    {{ end }}\n    {{ end }}\n  {{- end }}\n  {{- if and (eq .Values.global.proxy.tracer \"lightstep\") .Values.global.tracer.lightstep.cacertPath }}\n  - name: lightstep-certs\n    secret:\n      optional: true\n      secretName: lightstep.cacert\n  {{- end }}\n  {{- if .Values.global.podDNSSearchNamespaces }}\n  dnsConfig:\n    searches:\n      {{- range .Values.global.podDNSSearchNamespaces }}\n      - {{ render . }}\n      {{- end }}\n  {{- end }}\n  podRedirectAnnot:\n     sidecar.istio.io/interceptionMode: \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\"\n     traffic.sidecar.istio.io/includeOutboundIPRanges: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}\"\n     traffic.sidecar.istio.io/excludeOutboundIPRanges: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}\"\n     traffic.sidecar.istio.io/includeInboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (includeInboundPorts .Spec.Containers) }}\"\n     traffic.sidecar.istio.io/excludeInboundPorts: \"{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\"\n  {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts \"\") }}\n     traffic.sidecar.istio.io/excludeOutboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\"\n  {{- end }}\n     traffic.sidecar.istio.io/kubevirtInterfaces: \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}\"",
                        "values": "{\"certmanager\":{\"enabled\":false},\"galley\":{\"enabled\":true,\"global\":{\"arch\":{\"amd64\":2,\"ppc64le\":2,\"s390x\":2},\"configValidation\":true,\"controlPlaneSecurityEnabled\":false,\"defaultNodeSelector\":{},\"defaultPodDisruptionBudget\":{\"enabled\":true},\"defaultResources\":{\"requests\":{\"cpu\":\"10m\"}},\"defaultTolerations\":[],\"disablePolicyChecks\":false,\"enableHelmTest\":false,\"enableTracing\":true,\"hub\":\"docker.io/istio\",\"imagePullPolicy\":\"IfNotPresent\",\"imagePullSecrets\":[],\"k8sIngress\":{\"enableHttps\":false,\"enabled\":false,\"gatewayName\":\"ingressgateway\"},\"localityLbSetting\":{\"enabled\":true},\"logging\":{\"level\":\"default:info\"},\"meshExpansion\":{\"enabled\":false,\"useILB\":false},\"meshID\":\"\",\"meshNetworks\":{},\"monitoringPort\":15014,\"mtls\":{\"enabled\":true},\"multiCluster\":{\"clusterName\":\"\",\"enabled\":false},\"oneNamespace\":false,\"outboundTrafficPolicy\":{\"mode\":\"ALLOW_ANY\"},\"policyCheckFailOpen\":false,\"priorityClassName\":\"\",\"proxy\":{\"accessLogEncoding\":\"TEXT\",\"accessLogFile\":\"/dev/stdout\",\"accessLogFormat\":\"\",\"autoInject\":\"enabled\",\"clusterDomain\":\"cluster.local\",\"componentLogLevel\":\"\",\"concurrency\":2,\"dnsRefreshRate\":\"300s\",\"enableCoreDump\":false,\"enableCoreDumpImage\":\"ubuntu:xenial\",\"envoyAccessLogService\":{\"enabled\":false,\"tcpKeepalive\":{\"interval\":\"10s\",\"probes\":3,\"time\":\"10s\"},\"tlsSettings\":{\"mode\":\"DISABLE\",\"subjectAltNames\":[]}},\"envoyMetricsService\":{\"enabled\":false},\"envoyStatsd\":{\"enabled\":false},\"excludeIPRanges\":\"\",\"excludeInboundPorts\":\"\",\"excludeOutboundPorts\":\"\",\"image\":\"proxyv2\",\"includeIPRanges\":\"*\",\"includeInboundPorts\":\"*\",\"init\":{\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}}},\"kubevirtInterfaces\":\"\",\"logLevel\":\"\",\"privileged\":false,\"protocolDetectionTimeout\":\"100ms\",\"readinessFailureThreshold\":30,\"readinessInitialDelaySeconds\":1,\"readinessPeriodSeconds\":2,\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"statusPort\":15020,\"tracer\":\"zipkin\"},\"proxy_init\":{\"image\":\"proxy_init\"},\"sds\":{\"enabled\":false,\"token\":{\"aud\":\"istio-ca\"},\"udsPath\":\"\"},\"tag\":\"1.3.4\",\"tracer\":{\"datadog\":{\"address\":\"$(HOST_IP):8126\"},\"lightstep\":{\"accessToken\":\"\",\"address\":\"\",\"cacertPath\":\"\",\"secure\":true},\"zipkin\":{\"address\":\"\"}},\"trustDomain\":\"\",\"useMCP\":true},\"image\":\"galley\",\"nodeSelector\":{},\"podAntiAffinityLabelSelector\":[],\"podAntiAffinityTermLabelSelector\":[],\"replicaCount\":1,\"rollingMaxSurge\":\"100%\",\"rollingMaxUnavailable\":\"25%\",\"tolerations\":[]},\"gateways\":{\"enabled\":true,\"global\":{\"arch\":{\"amd64\":2,\"ppc64le\":2,\"s390x\":2},\"configValidation\":true,\"controlPlaneSecurityEnabled\":false,\"defaultNodeSelector\":{},\"defaultPodDisruptionBudget\":{\"enabled\":true},\"defaultResources\":{\"requests\":{\"cpu\":\"10m\"}},\"defaultTolerations\":[],\"disablePolicyChecks\":false,\"enableHelmTest\":false,\"enableTracing\":true,\"hub\":\"docker.io/istio\",\"imagePullPolicy\":\"IfNotPresent\",\"imagePullSecrets\":[],\"k8sIngress\":{\"enableHttps\":false,\"enabled\":false,\"gatewayName\":\"ingressgateway\"},\"localityLbSetting\":{\"enabled\":true},\"logging\":{\"level\":\"default:info\"},\"meshExpansion\":{\"enabled\":false,\"useILB\":false},\"meshID\":\"\",\"meshNetworks\":{},\"monitoringPort\":15014,\"mtls\":{\"enabled\":true},\"multiCluster\":{\"clusterName\":\"\",\"enabled\":false},\"oneNamespace\":false,\"outboundTrafficPolicy\":{\"mode\":\"ALLOW_ANY\"},\"policyCheckFailOpen\":false,\"priorityClassName\":\"\",\"proxy\":{\"accessLogEncoding\":\"TEXT\",\"accessLogFile\":\"/dev/stdout\",\"accessLogFormat\":\"\",\"autoInject\":\"enabled\",\"clusterDomain\":\"cluster.local\",\"componentLogLevel\":\"\",\"concurrency\":2,\"dnsRefreshRate\":\"300s\",\"enableCoreDump\":false,\"enableCoreDumpImage\":\"ubuntu:xenial\",\"envoyAccessLogService\":{\"enabled\":false,\"tcpKeepalive\":{\"interval\":\"10s\",\"probes\":3,\"time\":\"10s\"},\"tlsSettings\":{\"mode\":\"DISABLE\",\"subjectAltNames\":[]}},\"envoyMetricsService\":{\"enabled\":false},\"envoyStatsd\":{\"enabled\":false},\"excludeIPRanges\":\"\",\"excludeInboundPorts\":\"\",\"excludeOutboundPorts\":\"\",\"image\":\"proxyv2\",\"includeIPRanges\":\"*\",\"includeInboundPorts\":\"*\",\"init\":{\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}}},\"kubevirtInterfaces\":\"\",\"logLevel\":\"\",\"privileged\":false,\"protocolDetectionTimeout\":\"100ms\",\"readinessFailureThreshold\":30,\"readinessInitialDelaySeconds\":1,\"readinessPeriodSeconds\":2,\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"statusPort\":15020,\"tracer\":\"zipkin\"},\"proxy_init\":{\"image\":\"proxy_init\"},\"sds\":{\"enabled\":false,\"token\":{\"aud\":\"istio-ca\"},\"udsPath\":\"\"},\"tag\":\"1.3.4\",\"tracer\":{\"datadog\":{\"address\":\"$(HOST_IP):8126\"},\"lightstep\":{\"accessToken\":\"\",\"address\":\"\",\"cacertPath\":\"\",\"secure\":true},\"zipkin\":{\"address\":\"\"}},\"trustDomain\":\"\",\"useMCP\":true},\"istio-egressgateway\":{\"autoscaleEnabled\":false,\"autoscaleMax\":5,\"autoscaleMin\":1,\"cpu\":{\"targetAverageUtilization\":80},\"enabled\":true,\"env\":{\"ISTIO_META_ROUTER_MODE\":\"sni-dnat\"},\"labels\":{\"app\":\"istio-egressgateway\",\"istio\":\"egressgateway\"},\"nodeSelector\":{},\"podAnnotations\":{},\"podAntiAffinityLabelSelector\":[],\"podAntiAffinityTermLabelSelector\":[],\"ports\":[{\"name\":\"http2\",\"port\":80},{\"name\":\"https\",\"port\":443},{\"name\":\"tls\",\"port\":15443,\"targetPort\":15443}],\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"rollingMaxSurge\":\"100%\",\"rollingMaxUnavailable\":\"25%\",\"secretVolumes\":[{\"mountPath\":\"/etc/istio/egressgateway-certs\",\"name\":\"egressgateway-certs\",\"secretName\":\"istio-egressgateway-certs\"},{\"mountPath\":\"/etc/istio/egressgateway-ca-certs\",\"name\":\"egressgateway-ca-certs\",\"secretName\":\"istio-egressgateway-ca-certs\"}],\"serviceAnnotations\":{},\"tolerations\":[],\"type\":\"ClusterIP\"},\"istio-ilbgateway\":{\"autoscaleEnabled\":true,\"autoscaleMax\":5,\"autoscaleMin\":1,\"cpu\":{\"targetAverageUtilization\":80},\"enabled\":false,\"labels\":{\"app\":\"istio-ilbgateway\",\"istio\":\"ilbgateway\"},\"loadBalancerIP\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"ports\":[{\"name\":\"grpc-pilot-mtls\",\"port\":15011},{\"name\":\"grpc-pilot\",\"port\":15010},{\"name\":\"tcp-citadel-grpc-tls\",\"port\":8060,\"targetPort\":8060},{\"name\":\"tcp-dns\",\"port\":5353}],\"resources\":{\"requests\":{\"cpu\":\"800m\",\"memory\":\"512Mi\"}},\"rollingMaxSurge\":\"100%\",\"rollingMaxUnavailable\":\"25%\",\"secretVolumes\":[{\"mountPath\":\"/etc/istio/ilbgateway-certs\",\"name\":\"ilbgateway-certs\",\"secretName\":\"istio-ilbgateway-certs\"},{\"mountPath\":\"/etc/istio/ilbgateway-ca-certs\",\"name\":\"ilbgateway-ca-certs\",\"secretName\":\"istio-ilbgateway-ca-certs\"}],\"serviceAnnotations\":{\"cloud.google.com/load-balancer-type\":\"internal\"},\"tolerations\":[],\"type\":\"LoadBalancer\"},\"istio-ingressgateway\":{\"applicationPorts\":\"\",\"autoscaleEnabled\":false,\"autoscaleMax\":5,\"autoscaleMin\":1,\"cpu\":{\"targetAverageUtilization\":80},\"enabled\":true,\"env\":{\"ISTIO_META_ROUTER_MODE\":\"sni-dnat\"},\"externalIPs\":[],\"labels\":{\"app\":\"istio-ingressgateway\",\"istio\":\"ingressgateway\"},\"loadBalancerIP\":\"35.197.71.97\",\"loadBalancerSourceRanges\":[],\"meshExpansionPorts\":[{\"name\":\"tcp-pilot-grpc-tls\",\"port\":15011,\"targetPort\":15011},{\"name\":\"tcp-mixer-grpc-tls\",\"port\":15004,\"targetPort\":15004},{\"name\":\"tcp-citadel-grpc-tls\",\"port\":8060,\"targetPort\":8060},{\"name\":\"tcp-dns-tls\",\"port\":853,\"targetPort\":853}],\"nodeSelector\":{},\"podAnnotations\":{},\"podAntiAffinityLabelSelector\":[],\"podAntiAffinityTermLabelSelector\":[],\"ports\":[{\"name\":\"status-port\",\"port\":15020,\"targetPort\":15020},{\"name\":\"http2\",\"nodePort\":31380,\"port\":80,\"targetPort\":80},{\"name\":\"https\",\"nodePort\":31390,\"port\":443},{\"name\":\"tcp\",\"nodePort\":31400,\"port\":31400},{\"name\":\"https-kiali\",\"port\":15029,\"targetPort\":15029},{\"name\":\"https-prometheus\",\"port\":15030,\"targetPort\":15030},{\"name\":\"https-grafana\",\"port\":15031,\"targetPort\":15031},{\"name\":\"https-tracing\",\"port\":15032,\"targetPort\":15032},{\"name\":\"tls\",\"port\":15443,\"targetPort\":15443}],\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"rollingMaxSurge\":\"100%\",\"rollingMaxUnavailable\":\"25%\",\"sds\":{\"enabled\":false,\"image\":\"node-agent-k8s\",\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"}}},\"secretVolumes\":[{\"mountPath\":\"/etc/istio/ingressgateway-certs\",\"name\":\"ingressgateway-certs\",\"secretName\":\"istio-ingressgateway-certs\"},{\"mountPath\":\"/etc/istio/ingressgateway-ca-certs\",\"name\":\"ingressgateway-ca-certs\",\"secretName\":\"istio-ingressgateway-ca-certs\"}],\"serviceAnnotations\":{},\"tolerations\":[],\"type\":\"LoadBalancer\"}},\"global\":{\"arch\":{\"amd64\":2,\"ppc64le\":2,\"s390x\":2},\"configValidation\":true,\"controlPlaneSecurityEnabled\":false,\"defaultNodeSelector\":{},\"defaultPodDisruptionBudget\":{\"enabled\":true},\"defaultResources\":{\"requests\":{\"cpu\":\"10m\"}},\"defaultTolerations\":[],\"disablePolicyChecks\":false,\"enableHelmTest\":false,\"enableTracing\":true,\"hub\":\"docker.io/istio\",\"imagePullPolicy\":\"IfNotPresent\",\"imagePullSecrets\":[],\"k8sIngress\":{\"enableHttps\":false,\"enabled\":false,\"gatewayName\":\"ingressgateway\"},\"localityLbSetting\":{\"enabled\":true},\"logging\":{\"level\":\"default:info\"},\"meshExpansion\":{\"enabled\":false,\"useILB\":false},\"meshID\":\"\",\"meshNetworks\":{},\"monitoringPort\":15014,\"mtls\":{\"enabled\":true},\"multiCluster\":{\"clusterName\":\"\",\"enabled\":false},\"oneNamespace\":false,\"outboundTrafficPolicy\":{\"mode\":\"ALLOW_ANY\"},\"policyCheckFailOpen\":false,\"priorityClassName\":\"\",\"proxy\":{\"accessLogEncoding\":\"TEXT\",\"accessLogFile\":\"/dev/stdout\",\"accessLogFormat\":\"\",\"autoInject\":\"enabled\",\"clusterDomain\":\"cluster.local\",\"componentLogLevel\":\"\",\"concurrency\":2,\"dnsRefreshRate\":\"300s\",\"enableCoreDump\":false,\"enableCoreDumpImage\":\"ubuntu:xenial\",\"envoyAccessLogService\":{\"enabled\":false,\"host\":null,\"port\":null,\"tcpKeepalive\":{\"interval\":\"10s\",\"probes\":3,\"time\":\"10s\"},\"tlsSettings\":{\"caCertificates\":null,\"clientCertificate\":null,\"mode\":\"DISABLE\",\"privateKey\":null,\"sni\":null,\"subjectAltNames\":[]}},\"envoyMetricsService\":{\"enabled\":false,\"host\":null,\"port\":null},\"envoyStatsd\":{\"enabled\":false,\"host\":null,\"port\":null},\"excludeIPRanges\":\"\",\"excludeInboundPorts\":\"\",\"excludeOutboundPorts\":\"\",\"image\":\"proxyv2\",\"includeIPRanges\":\"*\",\"includeInboundPorts\":\"*\",\"init\":{\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}}},\"kubevirtInterfaces\":\"\",\"logLevel\":\"\",\"privileged\":false,\"protocolDetectionTimeout\":\"100ms\",\"readinessFailureThreshold\":30,\"readinessInitialDelaySeconds\":1,\"readinessPeriodSeconds\":2,\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"statusPort\":15020,\"tracer\":\"zipkin\"},\"proxy_init\":{\"image\":\"proxy_init\"},\"sds\":{\"enabled\":false,\"token\":{\"aud\":\"istio-ca\"},\"udsPath\":\"\"},\"tag\":\"1.3.4\",\"tracer\":{\"datadog\":{\"address\":\"$(HOST_IP):8126\"},\"lightstep\":{\"accessToken\":\"\",\"address\":\"\",\"cacertPath\":\"\",\"secure\":true},\"zipkin\":{\"address\":\"\"}},\"trustDomain\":\"\",\"useMCP\":true},\"grafana\":{\"enabled\":false},\"istio_cni\":{\"enabled\":false},\"istiocoredns\":{\"enabled\":false},\"kiali\":{\"createDemoSecret\":true,\"enabled\":false},\"mixer\":{\"adapters\":{\"kubernetesenv\":{\"enabled\":true},\"prometheus\":{\"enabled\":true,\"metricsExpiryDuration\":\"10m\"},\"stdio\":{\"enabled\":true,\"outputAsJson\":true},\"useAdapterCRDs\":false},\"env\":{\"GODEBUG\":\"gctrace=1\",\"GOMAXPROCS\":\"6\"},\"global\":{\"arch\":{\"amd64\":2,\"ppc64le\":2,\"s390x\":2},\"configValidation\":true,\"controlPlaneSecurityEnabled\":false,\"defaultNodeSelector\":{},\"defaultPodDisruptionBudget\":{\"enabled\":true},\"defaultResources\":{\"requests\":{\"cpu\":\"10m\"}},\"defaultTolerations\":[],\"disablePolicyChecks\":false,\"enableHelmTest\":false,\"enableTracing\":true,\"hub\":\"docker.io/istio\",\"imagePullPolicy\":\"IfNotPresent\",\"imagePullSecrets\":[],\"k8sIngress\":{\"enableHttps\":false,\"enabled\":false,\"gatewayName\":\"ingressgateway\"},\"localityLbSetting\":{\"enabled\":true},\"logging\":{\"level\":\"default:info\"},\"meshExpansion\":{\"enabled\":false,\"useILB\":false},\"meshID\":\"\",\"meshNetworks\":{},\"monitoringPort\":15014,\"mtls\":{\"enabled\":true},\"multiCluster\":{\"clusterName\":\"\",\"enabled\":false},\"oneNamespace\":false,\"outboundTrafficPolicy\":{\"mode\":\"ALLOW_ANY\"},\"policyCheckFailOpen\":false,\"priorityClassName\":\"\",\"proxy\":{\"accessLogEncoding\":\"TEXT\",\"accessLogFile\":\"/dev/stdout\",\"accessLogFormat\":\"\",\"autoInject\":\"enabled\",\"clusterDomain\":\"cluster.local\",\"componentLogLevel\":\"\",\"concurrency\":2,\"dnsRefreshRate\":\"300s\",\"enableCoreDump\":false,\"enableCoreDumpImage\":\"ubuntu:xenial\",\"envoyAccessLogService\":{\"enabled\":false,\"tcpKeepalive\":{\"interval\":\"10s\",\"probes\":3,\"time\":\"10s\"},\"tlsSettings\":{\"mode\":\"DISABLE\",\"subjectAltNames\":[]}},\"envoyMetricsService\":{\"enabled\":false},\"envoyStatsd\":{\"enabled\":false},\"excludeIPRanges\":\"\",\"excludeInboundPorts\":\"\",\"excludeOutboundPorts\":\"\",\"image\":\"proxyv2\",\"includeIPRanges\":\"*\",\"includeInboundPorts\":\"*\",\"init\":{\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}}},\"kubevirtInterfaces\":\"\",\"logLevel\":\"\",\"privileged\":false,\"protocolDetectionTimeout\":\"100ms\",\"readinessFailureThreshold\":30,\"readinessInitialDelaySeconds\":1,\"readinessPeriodSeconds\":2,\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"statusPort\":15020,\"tracer\":\"zipkin\"},\"proxy_init\":{\"image\":\"proxy_init\"},\"sds\":{\"enabled\":false,\"token\":{\"aud\":\"istio-ca\"},\"udsPath\":\"\"},\"tag\":\"1.3.4\",\"tracer\":{\"datadog\":{\"address\":\"$(HOST_IP):8126\"},\"lightstep\":{\"accessToken\":\"\",\"address\":\"\",\"cacertPath\":\"\",\"secure\":true},\"zipkin\":{\"address\":\"\"}},\"trustDomain\":\"\",\"useMCP\":true},\"image\":\"mixer\",\"nodeSelector\":{},\"podAnnotations\":{},\"podAntiAffinityLabelSelector\":[],\"podAntiAffinityTermLabelSelector\":[],\"policy\":{\"autoscaleEnabled\":false,\"autoscaleMax\":5,\"autoscaleMin\":1,\"cpu\":{\"targetAverageUtilization\":80},\"enabled\":true,\"replicaCount\":1,\"resources\":{\"requests\":{\"cpu\":\"10m\",\"memory\":\"100Mi\"}},\"rollingMaxSurge\":\"100%\",\"rollingMaxUnavailable\":\"25%\"},\"telemetry\":{\"autoscaleEnabled\":false,\"autoscaleMax\":5,\"autoscaleMin\":1,\"cpu\":{\"targetAverageUtilization\":80},\"enabled\":true,\"loadshedding\":{\"latencyThreshold\":\"100ms\",\"mode\":\"enforce\"},\"replicaCount\":1,\"reportBatchMaxEntries\":100,\"reportBatchMaxTime\":\"1s\",\"resources\":{\"limits\":{\"cpu\":\"4800m\",\"memory\":\"4G\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"100Mi\"}},\"rollingMaxSurge\":\"100%\",\"rollingMaxUnavailable\":\"25%\",\"sessionAffinityEnabled\":false},\"tolerations\":[]},\"nodeagent\":{\"enabled\":false},\"pilot\":{\"autoscaleEnabled\":false,\"autoscaleMax\":5,\"autoscaleMin\":1,\"cpu\":{\"targetAverageUtilization\":80},\"enableProtocolSniffingForInbound\":false,\"enableProtocolSniffingForOutbound\":true,\"enabled\":true,\"env\":{\"GODEBUG\":\"gctrace=1\",\"PILOT_PUSH_THROTTLE\":100},\"global\":{\"arch\":{\"amd64\":2,\"ppc64le\":2,\"s390x\":2},\"configValidation\":true,\"controlPlaneSecurityEnabled\":false,\"defaultNodeSelector\":{},\"defaultPodDisruptionBudget\":{\"enabled\":true},\"defaultResources\":{\"requests\":{\"cpu\":\"10m\"}},\"defaultTolerations\":[],\"disablePolicyChecks\":false,\"enableHelmTest\":false,\"enableTracing\":true,\"hub\":\"docker.io/istio\",\"imagePullPolicy\":\"IfNotPresent\",\"imagePullSecrets\":[],\"k8sIngress\":{\"enableHttps\":false,\"enabled\":false,\"gatewayName\":\"ingressgateway\"},\"localityLbSetting\":{\"enabled\":true},\"logging\":{\"level\":\"default:info\"},\"meshExpansion\":{\"enabled\":false,\"useILB\":false},\"meshID\":\"\",\"meshNetworks\":{},\"monitoringPort\":15014,\"mtls\":{\"enabled\":true},\"multiCluster\":{\"clusterName\":\"\",\"enabled\":false},\"oneNamespace\":false,\"outboundTrafficPolicy\":{\"mode\":\"ALLOW_ANY\"},\"policyCheckFailOpen\":false,\"priorityClassName\":\"\",\"proxy\":{\"accessLogEncoding\":\"TEXT\",\"accessLogFile\":\"/dev/stdout\",\"accessLogFormat\":\"\",\"autoInject\":\"enabled\",\"clusterDomain\":\"cluster.local\",\"componentLogLevel\":\"\",\"concurrency\":2,\"dnsRefreshRate\":\"300s\",\"enableCoreDump\":false,\"enableCoreDumpImage\":\"ubuntu:xenial\",\"envoyAccessLogService\":{\"enabled\":false,\"tcpKeepalive\":{\"interval\":\"10s\",\"probes\":3,\"time\":\"10s\"},\"tlsSettings\":{\"mode\":\"DISABLE\",\"subjectAltNames\":[]}},\"envoyMetricsService\":{\"enabled\":false},\"envoyStatsd\":{\"enabled\":false},\"excludeIPRanges\":\"\",\"excludeInboundPorts\":\"\",\"excludeOutboundPorts\":\"\",\"image\":\"proxyv2\",\"includeIPRanges\":\"*\",\"includeInboundPorts\":\"*\",\"init\":{\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}}},\"kubevirtInterfaces\":\"\",\"logLevel\":\"\",\"privileged\":false,\"protocolDetectionTimeout\":\"100ms\",\"readinessFailureThreshold\":30,\"readinessInitialDelaySeconds\":1,\"readinessPeriodSeconds\":2,\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"statusPort\":15020,\"tracer\":\"zipkin\"},\"proxy_init\":{\"image\":\"proxy_init\"},\"sds\":{\"enabled\":false,\"token\":{\"aud\":\"istio-ca\"},\"udsPath\":\"\"},\"tag\":\"1.3.4\",\"tracer\":{\"datadog\":{\"address\":\"$(HOST_IP):8126\"},\"lightstep\":{\"accessToken\":\"\",\"address\":\"\",\"cacertPath\":\"\",\"secure\":true},\"zipkin\":{\"address\":\"\"}},\"trustDomain\":\"\",\"useMCP\":true},\"image\":\"pilot\",\"keepaliveMaxServerConnectionAge\":\"30m\",\"nodeSelector\":{},\"podAntiAffinityLabelSelector\":[],\"podAntiAffinityTermLabelSelector\":[],\"resources\":{\"requests\":{\"cpu\":\"10m\",\"memory\":\"100Mi\"}},\"rollingMaxSurge\":\"100%\",\"rollingMaxUnavailable\":\"25%\",\"sidecar\":true,\"tolerations\":[],\"traceSampling\":100},\"prometheus\":{\"contextPath\":\"/prometheus\",\"enabled\":true,\"global\":{\"arch\":{\"amd64\":2,\"ppc64le\":2,\"s390x\":2},\"configValidation\":true,\"controlPlaneSecurityEnabled\":false,\"defaultNodeSelector\":{},\"defaultPodDisruptionBudget\":{\"enabled\":true},\"defaultResources\":{\"requests\":{\"cpu\":\"10m\"}},\"defaultTolerations\":[],\"disablePolicyChecks\":false,\"enableHelmTest\":false,\"enableTracing\":true,\"hub\":\"docker.io/istio\",\"imagePullPolicy\":\"IfNotPresent\",\"imagePullSecrets\":[],\"k8sIngress\":{\"enableHttps\":false,\"enabled\":false,\"gatewayName\":\"ingressgateway\"},\"localityLbSetting\":{\"enabled\":true},\"logging\":{\"level\":\"default:info\"},\"meshExpansion\":{\"enabled\":false,\"useILB\":false},\"meshID\":\"\",\"meshNetworks\":{},\"monitoringPort\":15014,\"mtls\":{\"enabled\":true},\"multiCluster\":{\"clusterName\":\"\",\"enabled\":false},\"oneNamespace\":false,\"outboundTrafficPolicy\":{\"mode\":\"ALLOW_ANY\"},\"policyCheckFailOpen\":false,\"priorityClassName\":\"\",\"proxy\":{\"accessLogEncoding\":\"TEXT\",\"accessLogFile\":\"/dev/stdout\",\"accessLogFormat\":\"\",\"autoInject\":\"enabled\",\"clusterDomain\":\"cluster.local\",\"componentLogLevel\":\"\",\"concurrency\":2,\"dnsRefreshRate\":\"300s\",\"enableCoreDump\":false,\"enableCoreDumpImage\":\"ubuntu:xenial\",\"envoyAccessLogService\":{\"enabled\":false,\"tcpKeepalive\":{\"interval\":\"10s\",\"probes\":3,\"time\":\"10s\"},\"tlsSettings\":{\"mode\":\"DISABLE\",\"subjectAltNames\":[]}},\"envoyMetricsService\":{\"enabled\":false},\"envoyStatsd\":{\"enabled\":false},\"excludeIPRanges\":\"\",\"excludeInboundPorts\":\"\",\"excludeOutboundPorts\":\"\",\"image\":\"proxyv2\",\"includeIPRanges\":\"*\",\"includeInboundPorts\":\"*\",\"init\":{\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}}},\"kubevirtInterfaces\":\"\",\"logLevel\":\"\",\"privileged\":false,\"protocolDetectionTimeout\":\"100ms\",\"readinessFailureThreshold\":30,\"readinessInitialDelaySeconds\":1,\"readinessPeriodSeconds\":2,\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"statusPort\":15020,\"tracer\":\"zipkin\"},\"proxy_init\":{\"image\":\"proxy_init\"},\"sds\":{\"enabled\":false,\"token\":{\"aud\":\"istio-ca\"},\"udsPath\":\"\"},\"tag\":\"1.3.4\",\"tracer\":{\"datadog\":{\"address\":\"$(HOST_IP):8126\"},\"lightstep\":{\"accessToken\":\"\",\"address\":\"\",\"cacertPath\":\"\",\"secure\":true},\"zipkin\":{\"address\":\"\"}},\"trustDomain\":\"\",\"useMCP\":true},\"hub\":\"docker.io/prom\",\"image\":\"prometheus\",\"ingress\":{\"enabled\":false,\"hosts\":[\"prometheus.local\"]},\"nodeSelector\":{},\"podAntiAffinityLabelSelector\":[],\"podAntiAffinityTermLabelSelector\":[],\"replicaCount\":1,\"retention\":\"6h\",\"scrapeInterval\":\"15s\",\"security\":{\"enabled\":true},\"service\":{\"annotations\":{},\"nodePort\":{\"enabled\":false,\"port\":32090}},\"tag\":\"v2.8.0\",\"tolerations\":[]},\"security\":{\"citadelHealthCheck\":false,\"createMeshPolicy\":true,\"enableNamespacesByDefault\":true,\"enabled\":true,\"global\":{\"arch\":{\"amd64\":2,\"ppc64le\":2,\"s390x\":2},\"configValidation\":true,\"controlPlaneSecurityEnabled\":false,\"defaultNodeSelector\":{},\"defaultPodDisruptionBudget\":{\"enabled\":true},\"defaultResources\":{\"requests\":{\"cpu\":\"10m\"}},\"defaultTolerations\":[],\"disablePolicyChecks\":false,\"enableHelmTest\":false,\"enableTracing\":true,\"hub\":\"docker.io/istio\",\"imagePullPolicy\":\"IfNotPresent\",\"imagePullSecrets\":[],\"k8sIngress\":{\"enableHttps\":false,\"enabled\":false,\"gatewayName\":\"ingressgateway\"},\"localityLbSetting\":{\"enabled\":true},\"logging\":{\"level\":\"default:info\"},\"meshExpansion\":{\"enabled\":false,\"useILB\":false},\"meshID\":\"\",\"meshNetworks\":{},\"monitoringPort\":15014,\"mtls\":{\"enabled\":true},\"multiCluster\":{\"clusterName\":\"\",\"enabled\":false},\"oneNamespace\":false,\"outboundTrafficPolicy\":{\"mode\":\"ALLOW_ANY\"},\"policyCheckFailOpen\":false,\"priorityClassName\":\"\",\"proxy\":{\"accessLogEncoding\":\"TEXT\",\"accessLogFile\":\"/dev/stdout\",\"accessLogFormat\":\"\",\"autoInject\":\"enabled\",\"clusterDomain\":\"cluster.local\",\"componentLogLevel\":\"\",\"concurrency\":2,\"dnsRefreshRate\":\"300s\",\"enableCoreDump\":false,\"enableCoreDumpImage\":\"ubuntu:xenial\",\"envoyAccessLogService\":{\"enabled\":false,\"tcpKeepalive\":{\"interval\":\"10s\",\"probes\":3,\"time\":\"10s\"},\"tlsSettings\":{\"mode\":\"DISABLE\",\"subjectAltNames\":[]}},\"envoyMetricsService\":{\"enabled\":false},\"envoyStatsd\":{\"enabled\":false},\"excludeIPRanges\":\"\",\"excludeInboundPorts\":\"\",\"excludeOutboundPorts\":\"\",\"image\":\"proxyv2\",\"includeIPRanges\":\"*\",\"includeInboundPorts\":\"*\",\"init\":{\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}}},\"kubevirtInterfaces\":\"\",\"logLevel\":\"\",\"privileged\":false,\"protocolDetectionTimeout\":\"100ms\",\"readinessFailureThreshold\":30,\"readinessInitialDelaySeconds\":1,\"readinessPeriodSeconds\":2,\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"statusPort\":15020,\"tracer\":\"zipkin\"},\"proxy_init\":{\"image\":\"proxy_init\"},\"sds\":{\"enabled\":false,\"token\":{\"aud\":\"istio-ca\"},\"udsPath\":\"\"},\"tag\":\"1.3.4\",\"tracer\":{\"datadog\":{\"address\":\"$(HOST_IP):8126\"},\"lightstep\":{\"accessToken\":\"\",\"address\":\"\",\"cacertPath\":\"\",\"secure\":true},\"zipkin\":{\"address\":\"\"}},\"trustDomain\":\"\",\"useMCP\":true},\"image\":\"citadel\",\"nodeSelector\":{},\"podAntiAffinityLabelSelector\":[],\"podAntiAffinityTermLabelSelector\":[],\"replicaCount\":1,\"rollingMaxSurge\":\"100%\",\"rollingMaxUnavailable\":\"25%\",\"selfSigned\":true,\"tolerations\":[],\"workloadCertTtl\":\"2160h\"},\"sidecarInjectorWebhook\":{\"alwaysInjectSelector\":[],\"enableNamespacesByDefault\":false,\"enabled\":true,\"global\":{\"arch\":{\"amd64\":2,\"ppc64le\":2,\"s390x\":2},\"configValidation\":true,\"controlPlaneSecurityEnabled\":false,\"defaultNodeSelector\":{},\"defaultPodDisruptionBudget\":{\"enabled\":true},\"defaultResources\":{\"requests\":{\"cpu\":\"10m\"}},\"defaultTolerations\":[],\"disablePolicyChecks\":false,\"enableHelmTest\":false,\"enableTracing\":true,\"hub\":\"docker.io/istio\",\"imagePullPolicy\":\"IfNotPresent\",\"imagePullSecrets\":[],\"k8sIngress\":{\"enableHttps\":false,\"enabled\":false,\"gatewayName\":\"ingressgateway\"},\"localityLbSetting\":{\"enabled\":true},\"logging\":{\"level\":\"default:info\"},\"meshExpansion\":{\"enabled\":false,\"useILB\":false},\"meshID\":\"\",\"meshNetworks\":{},\"monitoringPort\":15014,\"mtls\":{\"enabled\":true},\"multiCluster\":{\"clusterName\":\"\",\"enabled\":false},\"oneNamespace\":false,\"outboundTrafficPolicy\":{\"mode\":\"ALLOW_ANY\"},\"policyCheckFailOpen\":false,\"priorityClassName\":\"\",\"proxy\":{\"accessLogEncoding\":\"TEXT\",\"accessLogFile\":\"/dev/stdout\",\"accessLogFormat\":\"\",\"autoInject\":\"enabled\",\"clusterDomain\":\"cluster.local\",\"componentLogLevel\":\"\",\"concurrency\":2,\"dnsRefreshRate\":\"300s\",\"enableCoreDump\":false,\"enableCoreDumpImage\":\"ubuntu:xenial\",\"envoyAccessLogService\":{\"enabled\":false,\"tcpKeepalive\":{\"interval\":\"10s\",\"probes\":3,\"time\":\"10s\"},\"tlsSettings\":{\"mode\":\"DISABLE\",\"subjectAltNames\":[]}},\"envoyMetricsService\":{\"enabled\":false},\"envoyStatsd\":{\"enabled\":false},\"excludeIPRanges\":\"\",\"excludeInboundPorts\":\"\",\"excludeOutboundPorts\":\"\",\"image\":\"proxyv2\",\"includeIPRanges\":\"*\",\"includeInboundPorts\":\"*\",\"init\":{\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}}},\"kubevirtInterfaces\":\"\",\"logLevel\":\"\",\"privileged\":false,\"protocolDetectionTimeout\":\"100ms\",\"readinessFailureThreshold\":30,\"readinessInitialDelaySeconds\":1,\"readinessPeriodSeconds\":2,\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"statusPort\":15020,\"tracer\":\"zipkin\"},\"proxy_init\":{\"image\":\"proxy_init\"},\"sds\":{\"enabled\":false,\"token\":{\"aud\":\"istio-ca\"},\"udsPath\":\"\"},\"tag\":\"1.3.4\",\"tracer\":{\"datadog\":{\"address\":\"$(HOST_IP):8126\"},\"lightstep\":{\"accessToken\":\"\",\"address\":\"\",\"cacertPath\":\"\",\"secure\":true},\"zipkin\":{\"address\":\"\"}},\"trustDomain\":\"\",\"useMCP\":true},\"image\":\"sidecar_injector\",\"neverInjectSelector\":[],\"nodeSelector\":{},\"podAntiAffinityLabelSelector\":[],\"podAntiAffinityTermLabelSelector\":[],\"replicaCount\":1,\"rewriteAppHTTPProbe\":false,\"rollingMaxSurge\":\"100%\",\"rollingMaxUnavailable\":\"25%\",\"tolerations\":[]},\"tracing\":{\"enabled\":true,\"global\":{\"arch\":{\"amd64\":2,\"ppc64le\":2,\"s390x\":2},\"configValidation\":true,\"controlPlaneSecurityEnabled\":false,\"defaultNodeSelector\":{},\"defaultPodDisruptionBudget\":{\"enabled\":true},\"defaultResources\":{\"requests\":{\"cpu\":\"10m\"}},\"defaultTolerations\":[],\"disablePolicyChecks\":false,\"enableHelmTest\":false,\"enableTracing\":true,\"hub\":\"docker.io/istio\",\"imagePullPolicy\":\"IfNotPresent\",\"imagePullSecrets\":[],\"k8sIngress\":{\"enableHttps\":false,\"enabled\":false,\"gatewayName\":\"ingressgateway\"},\"localityLbSetting\":{\"enabled\":true},\"logging\":{\"level\":\"default:info\"},\"meshExpansion\":{\"enabled\":false,\"useILB\":false},\"meshID\":\"\",\"meshNetworks\":{},\"monitoringPort\":15014,\"mtls\":{\"enabled\":true},\"multiCluster\":{\"clusterName\":\"\",\"enabled\":false},\"oneNamespace\":false,\"outboundTrafficPolicy\":{\"mode\":\"ALLOW_ANY\"},\"policyCheckFailOpen\":false,\"priorityClassName\":\"\",\"proxy\":{\"accessLogEncoding\":\"TEXT\",\"accessLogFile\":\"/dev/stdout\",\"accessLogFormat\":\"\",\"autoInject\":\"enabled\",\"clusterDomain\":\"cluster.local\",\"componentLogLevel\":\"\",\"concurrency\":2,\"dnsRefreshRate\":\"300s\",\"enableCoreDump\":false,\"enableCoreDumpImage\":\"ubuntu:xenial\",\"envoyAccessLogService\":{\"enabled\":false,\"tcpKeepalive\":{\"interval\":\"10s\",\"probes\":3,\"time\":\"10s\"},\"tlsSettings\":{\"mode\":\"DISABLE\",\"subjectAltNames\":[]}},\"envoyMetricsService\":{\"enabled\":false},\"envoyStatsd\":{\"enabled\":false},\"excludeIPRanges\":\"\",\"excludeInboundPorts\":\"\",\"excludeOutboundPorts\":\"\",\"image\":\"proxyv2\",\"includeIPRanges\":\"*\",\"includeInboundPorts\":\"*\",\"init\":{\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}}},\"kubevirtInterfaces\":\"\",\"logLevel\":\"\",\"privileged\":false,\"protocolDetectionTimeout\":\"100ms\",\"readinessFailureThreshold\":30,\"readinessInitialDelaySeconds\":1,\"readinessPeriodSeconds\":2,\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"statusPort\":15020,\"tracer\":\"zipkin\"},\"proxy_init\":{\"image\":\"proxy_init\"},\"sds\":{\"enabled\":false,\"token\":{\"aud\":\"istio-ca\"},\"udsPath\":\"\"},\"tag\":\"1.3.4\",\"tracer\":{\"datadog\":{\"address\":\"$(HOST_IP):8126\"},\"lightstep\":{\"accessToken\":\"\",\"address\":\"\",\"cacertPath\":\"\",\"secure\":true},\"zipkin\":{\"address\":\"\"}},\"trustDomain\":\"\",\"useMCP\":true},\"ingress\":{\"enabled\":false},\"jaeger\":{\"accessMode\":\"ReadWriteMany\",\"hub\":\"docker.io/jaegertracing\",\"image\":\"all-in-one\",\"memory\":{\"max_traces\":50000},\"persist\":false,\"spanStorageType\":\"badger\",\"storageClassName\":\"\",\"tag\":1.14},\"nodeSelector\":{},\"podAntiAffinityLabelSelector\":[],\"podAntiAffinityTermLabelSelector\":[],\"provider\":\"jaeger\",\"service\":{\"annotations\":{},\"externalPort\":9411,\"name\":\"http\",\"type\":\"ClusterIP\"},\"tolerations\":[],\"zipkin\":{\"hub\":\"docker.io/openzipkin\",\"image\":\"zipkin\",\"javaOptsHeap\":700,\"maxSpans\":500000,\"node\":{\"cpus\":2},\"probeStartupDelay\":200,\"queryPort\":9411,\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"900Mi\"},\"requests\":{\"cpu\":\"150m\",\"memory\":\"900Mi\"}},\"tag\":\"2.14.2\"}}}"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:30:22Z",
                        "labels": {
                            "app": "istio",
                            "chart": "istio",
                            "heritage": "Tiller",
                            "istio": "sidecar-injector",
                            "release": "istio"
                        },
                        "name": "istio-sidecar-injector",
                        "namespace": "istio-system",
                        "resourceVersion": "2031",
                        "selfLink": "/api/v1/namespaces/istio-system/configmaps/istio-sidecar-injector",
                        "uid": "77aed0bb-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "8632eace6650145582e97d7e9d4c1d8ff83e5772b1cfe8d3815077f6b0fd3779": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[istio]",
                "name": "istio",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "42efaab2d49fbeac724323675f9efda5b694042650d7d2d7afc4c4f5fc2a3dbf": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "mesh": "# Set the following variable to true to disable policy checks by the Mixer.\n# Note that metrics will still be reported to the Mixer.\ndisablePolicyChecks: false\n# reportBatchMaxEntries is the number of requests that are batched before telemetry data is sent to the mixer server\nreportBatchMaxEntries: 100\n# reportBatchMaxTime is the max waiting time before the telemetry data of a request is sent to the mixer server\nreportBatchMaxTime: 1s\n\n# Set enableTracing to false to disable request tracing.\nenableTracing: true\n\n# Set accessLogFile to empty string to disable access log.\naccessLogFile: \"/dev/stdout\"\n\n# If accessLogEncoding is TEXT, value will be used directly as the log format\n# example: \"[%START_TIME%] %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\\n\"\n# If AccessLogEncoding is JSON, value will be parsed as map[string]string\n# example: '{\"start_time\": \"%START_TIME%\", \"req_method\": \"%REQ(:METHOD)%\"}'\n# Leave empty to use default log format\naccessLogFormat: \"\"\n\n# Set accessLogEncoding to JSON or TEXT to configure sidecar access log\naccessLogEncoding: 'TEXT'\n\nenableEnvoyAccessLogService: false\nmixerCheckServer: istio-policy.istio-system.svc.cluster.local:9091\nmixerReportServer: istio-telemetry.istio-system.svc.cluster.local:9091\n# policyCheckFailOpen allows traffic in cases when the mixer policy service cannot be reached.\n# Default is false which means the traffic is denied when the client is unable to connect to Mixer.\npolicyCheckFailOpen: false\n# Let Pilot give ingresses the public IP of the Istio ingressgateway\ningressService: istio-ingressgateway\n\n# Default connect timeout for dynamic clusters generated by Pilot and returned via XDS\nconnectTimeout: 10s\n\n# Automatic protocol detection uses a set of heuristics to\n# determine whether the connection is using TLS or not (on the\n# server side), as well as the application protocol being used\n# (e.g., http vs tcp). These heuristics rely on the client sending\n# the first bits of data. For server first protocols like MySQL,\n# MongoDB, etc., Envoy will timeout on the protocol detection after\n# the specified period, defaulting to non mTLS plain TCP\n# traffic. Set this field to tweak the period that Envoy will wait\n# for the client to send the first bits of data. (MUST BE >=1ms)\nprotocolDetectionTimeout: 100ms\n\n# DNS refresh rate for Envoy clusters of type STRICT_DNS\ndnsRefreshRate: 300s\n\n# Unix Domain Socket through which envoy communicates with NodeAgent SDS to get\n# key/cert for mTLS. Use secret-mount files instead of SDS if set to empty.\nsdsUdsPath: \"\"\n\n# The trust domain corresponds to the trust root of a system.\n# Refer to https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain\ntrustDomain: \"\"\n\n# Set the default behavior of the sidecar for handling outbound traffic from the application:\n# ALLOW_ANY - outbound traffic to unknown destinations will be allowed, in case there are no\n#   services or ServiceEntries for the destination port\n# REGISTRY_ONLY - restrict outbound traffic to services defined in the service registry as well\n#   as those defined through ServiceEntries\noutboundTrafficPolicy:\n  mode: ALLOW_ANY\nlocalityLbSetting:\n  enabled: true\n# The namespace to treat as the administrative root namespace for istio\n# configuration.\nrootNamespace: istio-system\nconfigSources:\n- address: istio-galley.istio-system.svc:9901\n\ndefaultConfig:\n  #\n  # TCP connection timeout between Envoy & the application, and between Envoys.  Used for static clusters\n  # defined in Envoy's configuration file\n  connectTimeout: 10s\n  #\n  ### ADVANCED SETTINGS #############\n  # Where should envoy's configuration be stored in the istio-proxy container\n  configPath: \"/etc/istio/proxy\"\n  binaryPath: \"/usr/local/bin/envoy\"\n  # The pseudo service name used for Envoy.\n  serviceCluster: istio-proxy\n  # These settings that determine how long an old Envoy\n  # process should be kept alive after an occasional reload.\n  drainDuration: 45s\n  parentShutdownDuration: 1m0s\n  #\n  # The mode used to redirect inbound connections to Envoy. This setting\n  # has no effect on outbound traffic: iptables REDIRECT is always used for\n  # outbound connections.\n  # If \"REDIRECT\", use iptables REDIRECT to NAT and redirect to Envoy.\n  # The \"REDIRECT\" mode loses source addresses during redirection.\n  # If \"TPROXY\", use iptables TPROXY to redirect to Envoy.\n  # The \"TPROXY\" mode preserves both the source and destination IP\n  # addresses and ports, so that they can be used for advanced filtering\n  # and manipulation.\n  # The \"TPROXY\" mode also configures the sidecar to run with the\n  # CAP_NET_ADMIN capability, which is required to use TPROXY.\n  #interceptionMode: REDIRECT\n  #\n  # Port where Envoy listens (on local host) for admin commands\n  # You can exec into the istio-proxy container in a pod and\n  # curl the admin port (curl http://localhost:15000/) to obtain\n  # diagnostic information from Envoy. See\n  # https://lyft.github.io/envoy/docs/operations/admin.html\n  # for more details\n  proxyAdminPort: 15000\n  #\n  # Set concurrency to a specific number to control the number of Proxy worker threads.\n  # If set to 0 (default), then start worker thread for each CPU thread/core.\n  concurrency: 2\n  #\n  tracing:\n    zipkin:\n      # Address of the Zipkin collector\n      address: zipkin.istio-system:9411\n  #\n  # Mutual TLS authentication between sidecars and istio control plane.\n  controlPlaneAuthPolicy: NONE\n  #\n  # Address where istio Pilot service is running\n  discoveryAddress: istio-pilot.istio-system:15010",
                        "meshNetworks": "networks: {}"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:30:22Z",
                        "labels": {
                            "app": "istio",
                            "chart": "istio",
                            "heritage": "Tiller",
                            "release": "istio"
                        },
                        "name": "istio",
                        "namespace": "istio-system",
                        "resourceVersion": "2033",
                        "selfLink": "/api/v1/namespaces/istio-system/configmaps/istio",
                        "uid": "77af2e6b-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "b1c76b8b31500fad0132b717dd7dbb7162e6c8e62b5b62dcd9aed48da29de834": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[prometheus]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[prometheus]",
                "name": "prometheus",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "8010aa75fc8742ed44db5c0edeb41f2f20cbc679a853a1e63a73415ef45648fc": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[prometheus]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "prometheus.yml": "global:\n  scrape_interval: 15s\nscrape_configs:\n\n- job_name: 'istio-mesh'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n      - istio-system\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: istio-telemetry;prometheus\n\n# Scrape config for envoy stats\n- job_name: 'envoy-stats'\n  metrics_path: /stats/prometheus\n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_pod_container_port_name]\n    action: keep\n    regex: '.*-envoy-prom'\n  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n    action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:15090\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: pod_name\n\n- job_name: 'istio-policy'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n      - istio-system\n\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: istio-policy;http-monitoring\n\n- job_name: 'istio-telemetry'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n      - istio-system\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: istio-telemetry;http-monitoring\n\n- job_name: 'pilot'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n      - istio-system\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: istio-pilot;http-monitoring\n\n- job_name: 'galley'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n      - istio-system\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: istio-galley;http-monitoring\n\n- job_name: 'citadel'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n      - istio-system\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: istio-citadel;http-monitoring\n\n# scrape config for API servers\n- job_name: 'kubernetes-apiservers'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n      - default\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: kubernetes;https\n\n# scrape config for nodes (kubelet)\n- job_name: 'kubernetes-nodes'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/${1}/proxy/metrics\n\n# Scrape config for Kubelet cAdvisor.\n#\n# This is required for Kubernetes 1.7.3 and later, where cAdvisor metrics\n# (those whose names begin with 'container_') have been removed from the\n# Kubelet metrics endpoint.  This job scrapes the cAdvisor endpoint to\n# retrieve those metrics.\n#\n# In Kubernetes 1.7.0-1.7.2, these metrics are only exposed on the cAdvisor\n# HTTP endpoint; use \"replacement: /api/v1/nodes/${1}:4194/proxy/metrics\"\n# in that case (and ensure cAdvisor's HTTP server hasn't been disabled with\n# the --cadvisor-port=0 Kubelet flag).\n#\n# This job is not necessary and should be removed in Kubernetes 1.6 and\n# earlier versions, or it will cause the metrics to be scraped twice.\n- job_name: 'kubernetes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor\n\n# scrape config for service endpoints.\n- job_name: 'kubernetes-service-endpoints'\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n    action: replace\n    target_label: __address__\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    action: replace\n    target_label: kubernetes_name\n\n- job_name: 'kubernetes-pods'\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:  # If first two labels are present, pod should be scraped  by the istio-secure job.\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n    regex: true\n  # Keep target if there's no sidecar or if prometheus.io/scheme is explicitly set to \"http\"\n  - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_prometheus_io_scheme]\n    action: keep\n    regex: ((;.*)|(.*;http))\n  - source_labels: [__meta_kubernetes_pod_annotation_istio_mtls]\n    action: drop\n    regex: (true)\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n    action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: pod_name\n\n- job_name: 'kubernetes-pods-istio-secure'\n  scheme: https\n  tls_config:\n    ca_file: /etc/istio-certs/root-cert.pem\n    cert_file: /etc/istio-certs/cert-chain.pem\n    key_file: /etc/istio-certs/key.pem\n    insecure_skip_verify: true  # prometheus does not support secure naming.\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n    regex: true\n  # sidecar status annotation is added by sidecar injector and\n  # istio_workload_mtls_ability can be specifically placed on a pod to indicate its ability to receive mtls traffic.\n  - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_istio_mtls]\n    action: keep\n    regex: (([^;]+);([^;]*))|(([^;]*);(true))\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n    action: drop\n    regex: (http)\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  - source_labels: [__address__]  # Only keep address that is host:port\n    action: keep    # otherwise an extra target with ':443' is added for https scheme\n    regex: ([^:]+):(\\d+)\n  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n    action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: pod_name"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:30:22Z",
                        "labels": {
                            "app": "prometheus",
                            "chart": "prometheus",
                            "heritage": "Tiller",
                            "release": "istio"
                        },
                        "name": "prometheus",
                        "namespace": "istio-system",
                        "resourceVersion": "2035",
                        "selfLink": "/api/v1/namespaces/istio-system/configmaps/prometheus",
                        "uid": "77af6121-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "d6543494b87f7b13fb7cd2845e74e2ac47c8b9ef6a318f30fe7a00dfa0efef6b": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]",
            "kind": "raw",
            "config_kind": "node",
            "config": {
                "rn": "raw-[Raw Configs]",
                "name": "Raw Configs",
                "kind": "raw",
                "order": 1000,
                "alertCount": {},
                "flags": {}
            }
        },
        "b7c571d9915b22a1a394c60aa9a71d96a8cddfeb0379396ca8b0c2a94c5fb405": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]",
            "kind": "raw",
            "config_kind": "node",
            "config": {
                "rn": "raw-[ConfigMaps]",
                "name": "ConfigMaps",
                "kind": "raw",
                "order": 100,
                "alertCount": {},
                "flags": {}
            }
        },
        "b140b98aefa352afcd385535ada540450d0749d75efbfd7d20abcab28b32398e": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[berlioz.v1]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[berlioz.v1]",
                "name": "berlioz.v1",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "d23237d2cf764afc176564ee95ace05b885565510933380c5939d055f8e72676": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[berlioz.v1]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "release": "H4sIAAAAAAAC/+xaX28bx7WHZQTx3SBAIuBe3Bvk4dx1AltquKT+WFaY5kGWlEaILakirTQoCmO4e0hONDu7npmlwtjOF2iBPrVfoUBf+wEKFChQoA9960OBPjboU4ACBdrHYmZ2l7vkkiLlKEn/+EFYzpz5zZnf+TNnZuy82EHBaPTpcsNZunFt+aUbf/zzz7544ZXPf/i7z14r/lh95YBLRRgDPwpjhgpf+8W7zt18vPtCw1vzGquv37O/we8ToaAbCfgg6aDgqFCeLA3WPr6+5jWW//Cy8z8Kw5gRhbL+qI8sRiE9FbPlX7785El9FQY0bIJEBV3KUA1jfDdMpCJ+H5uwWn/2zNFSzv4nMeEBqD4CJyFC1DXfZnLPSeVqEGCXcgQ3VdbTsi7URr0kYQq8XTPsUAN5p4QlKI3k0QCFoAHCU1Ai4T5sbZhPGraSbpd+Am5tBIY8MN9Wv12BRCGQfI5uwtgQHieE0S7FAEgcG80950O06EZe6Tn0KiR00CeJRJBRiAUu7Xq7FFkggQgERkOqMAAVgepTCbc7Q8PF3mFLy1LeAxmjv+I5B10QyJDIlDQ/4opQLlObmTaq4JwyBh2ERGo9JRCjfKrtVGq1TJle2s3ZzDpzRjOZqQJzUc7kCOkNo37z3fmtWtAzZ8KieCeWJjs417XUurCCsaBcdcF9U9belO4Ymp13ET+b9l3yv4JhdbgMUEgacW1UY9zUU6wUIx1kMwxspNypyymybb9P09megsCYER/B/ZYL7iP3MvEUhWHErY5yuo6234KQOPbO8rDxaFTXPDThyROg3GdJMJEXPHj2zOkjCz3Zr5vlVkunTBjxyVmozpfctzOVrVwIDEvRThxnLFVipQazUBNDnsLjJFI5rGasEiUknPQwqHWGZZ1aKAbUL42f8KDxDCvTMcT3o4QrnXUSidMtksrvWPHDaQmiLOb5dnItCABa6Syqb09YY5R4vJVpeLzAfh6UY8hu+uHOBVIRecs/ue7872hz8yPepb2QxN6QhGz570skpqeZPQdrzhnlQRN2jdQDEjshKhIQRZoOgPVU+ZjVpN/HkKRNMibjfpU3g1mRDYCmWRuJYyubLqdD/DPkQb6ObLIgCeMmPK2ZQbsn+zvtfdjbae/c22ntw8F7cHjUhv3vHbTaLQgwjN5xjODD1n7xZzquvXPv/vggk1x9JeG2kdT/aAAHh20jdPjw/n3Yedg+enRwuHuy/2D/sA3HJwcPdk4+gg/2P3orH2PUHhCho+/2WqOxMuqK+xEv9+VdK+84y7951fm/kV0CjFk0DJEra5ifv1o0DIljWc+ts5fLVphnBrWLGWKqcQ+LxtWbuMaTyNBXkbDYIVF+/35hsnmmy8hIIfKVmQLMYnAeKaJoxGUzr7oyTiUN0CfCo1LRSCeYRKI4jViiWbn1/SeuCccmuEHHfQtcib5A5TbhSfp5mHb7LEoC+Zi5z5794NYiszzQ8WinCvXnMVF9DVhH5dflY+ajUFJPXVZEIAmOOBu6Tb3/YDapnY6VOJyHRYDMJMalOVW7toxAUcCppd6iGe4QiTUtmPcC0JD0sAkuETish0Md8z6jyJVbEPKjMCQ8aBaaNLJb71Bel313vL3mF5uI6MmJoWYqqPXfuP3go9Z37z96/6jVXoFakv1+2No/WYFanP0+3mm1Pjw62VuBb0Ndp4y6XoinzVeAHozsMzFlbqqmBSh1V+a87B/ywXsiCscBrTedYLc5BlURoRn93sgFIbe9P8NuJI4nrVXhF6ZnBJkLHyeMHUeM+sPKYXHeXR4bR2KSwVzP4yitTSbgIqHKQFfNnbV4BXGVlvSz7a487YwRAFRhKMfVrMEZDptQ4UcAsfGxzD2dWq3mPH+K74qIq8Wz9uydYAL00km+Qr1pWX6+fFcBWE54s4LmHDszgyYHr4iaBT0/h6p0/XEcq97O8bHJd2OeM9CIs5K+N83Mnhz4ns8SqVB4LPIJmzrv8dHJ/POaNRXK/OUf33BeH5UyZmusUd4TKKWtZr54sejqHNV5JM4o74220cEaYXGfbKT+/x2i8JwMK5w/LbCn+KTB01FmJu+lKGAOCKlP1IwtMxPwJOygaMJ2wykGfV+pLIJjEanIj1gT3m+3j01jP5KZM9TAXXUngnmOFZ5SoRLC0tPOglGeLT5XpAa3Vm85AOmK07aMKzDrsW0majPdE0FHvhgL7NJPmlA3LSJKsiDV5yepKDeVV0G+QGORynnCQCt+cWALVIKOsjhR2smUbMJGZhsUbTFs0xCjRDVhXV61JcbrrQpDzKzOviY7TNuIJ8xQVU9ewgrLf7ru/PcoI9gd2qaC317X5XT51JlX2dYgLSOeN+YGKRTj5ep1rOOCA2kuPQ46KjmrCw0SBDqrwFPobG0i94tY2ei9e9Vj05u06QN1ZVs9VJ8wZg7NiuDq4TGR8jwSwWyIo5Mpiy4l+3GI5R/9V/HmPL2asIb+y43Kq4VLhdl8Fw3VW8LFR6bC3p5uDhfHzoxtor17nLYpInqoLiyLx3PWYlzNXwJegqwK8NlsTcn4z0PXBKQzRwYxxM2RQqpuUgt3d+VYSavTvKVqcHbZ68FToDxArmCziGJ4L2CqYVy2ZxZEuqM8vWW+dCVRYYFsfMrW2A1GkWNtjrHuklnG+kY2LHTk7lMSvtwt9wUQM6+wzVj310vOr5ay1GW9OzsbNsHNOlzHSUNwFFD2QG3J3Gw0dDWYHhAS6fV8oRVINV7PPmo6Wu52/btBZ2t7ew3JHbK+fXcD7wTr653Av+NjJ9heI93Nztr6HY1eOHQfdA8jdSxQ6iOek7n4SB97VrH6bMyrzzl2vhR9Vj9fcl7y+shC2uORwOXfL92EY73xCy5BRWCb4byPHDoJZQHlPYiJf0Z6KD3nJrT7VIJMYuOyIPvIGPRY1LFlD+W9t0AgI4oO0ByMC+2EB85N4NgzZQ7ctuUQBnBOVR/+f8WDI86GEHEzUqukCxBglKPneHutRy0VCXRuQvo6c7rbgoAK6Xg9qurmr1Xf8Tqfirr5mzX0e3X9J/spB7w+AtI+k8TmBVg6q548j51Vr0POnFVPhbGz+plzE06JoFEi4WBvXzpeLKKP0VeORwMkdSsnoo8dbyD9KMC64/7tmvPXawVnnGbjmq49akqQoFZ2v+23SdDY2sJtsrmFb3ewu95Za6xv3tnawo3GWuNOsLXeIG9vbDrToiK/AbSNsuSLC6mjvW9udVZ/+rrZ925CK0qEPzrY1ae9VThf2ktF1fWHjv9/l6eHi3gvlnGLFiY2jxbJnlFojJLuWEGRZuBLVQ5m7FUu0abmOZc4yuNjS9x4jiVuzLPEsRely142WhtVxkuJhNn3MtPuCi3MtDtBx5l1LZjdgf/nveOb/d4xscNc8nnjCjbFGa8ipYJosXvgQva6At7+OZ42voLMNJGHR9edE+lKyy6WmSz6JV4rsleG53qVuIKKazEf3pjw4cs8WuhDXP5/br6ExwhXh5Z7oYNNvkA4//rvD1dLyIWX5MUI+0Y+S5Q82l58Z6F3yXeGr5lxvUlWMG73zq+S2c1JZrMNfHFmt6/dy/4X9z8CAAD//0oCJEYPLgAA"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T23:53:01Z",
                        "labels": {
                            "MODIFIED_AT": "1573516412",
                            "NAME": "berlioz",
                            "OWNER": "TILLER",
                            "STATUS": "DEPLOYED",
                            "VERSION": "1"
                        },
                        "name": "berlioz.v1",
                        "namespace": "kube-system",
                        "resourceVersion": "36082",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/berlioz.v1",
                        "uid": "65496bf0-04de-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "7c915c6d5a11d33a3244e348f7a8cd690772bf8f0be329c9367c94a68949b3e7": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[cluster-autoscaler-status]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[cluster-autoscaler-status]",
                "name": "cluster-autoscaler-status",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "72f7a181e15ba8344f3d6ec3c0c874d237abb943a154621505fb6d43a41e9ec4": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[cluster-autoscaler-status]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "status": "Cluster-autoscaler status at 2019-11-12 01:44:50.306420155 +0000 UTC:\nCluster-wide:\n  Health:      Healthy (ready=2 unready=0 notStarted=0 longNotStarted=0 registered=2 longUnregistered=0)\n               LastProbeTime:      2019-11-12 01:44:50.107400413 +0000 UTC m=+15328.497976082\n               LastTransitionTime: 2019-11-11 21:29:33.592892838 +0000 UTC m=+11.983468503\n  ScaleUp:     NoActivity (ready=2 registered=2)\n               LastProbeTime:      2019-11-12 01:44:50.107400413 +0000 UTC m=+15328.497976082\n               LastTransitionTime: 2019-11-11 21:29:33.592892838 +0000 UTC m=+11.983468503\n  ScaleDown:   NoCandidates (candidates=0)\n               LastProbeTime:      2019-11-12 01:44:50.107400413 +0000 UTC m=+15328.497976082\n               LastTransitionTime: 2019-11-11 21:29:33.592892838 +0000 UTC m=+11.983468503\n\nNodeGroups:\n  Name:        https://content.googleapis.com/compute/v1/projects/berlioz-addr-trad-2/zones/us-west1-a/instanceGroups/gke-kube-cluster-1-terraform-20191111-e8aa589d-grp\n  Health:      Healthy (ready=2 unready=0 notStarted=0 longNotStarted=0 registered=2 longUnregistered=0 cloudProviderTarget=2 (minSize=2, maxSize=4))\n               LastProbeTime:      2019-11-12 01:44:50.107400413 +0000 UTC m=+15328.497976082\n               LastTransitionTime: 2019-11-11 21:29:33.592892838 +0000 UTC m=+11.983468503\n  ScaleUp:     NoActivity (ready=2 cloudProviderTarget=2)\n               LastProbeTime:      2019-11-12 01:44:50.107400413 +0000 UTC m=+15328.497976082\n               LastTransitionTime: 2019-11-11 21:29:33.592892838 +0000 UTC m=+11.983468503\n  ScaleDown:   NoCandidates (candidates=0)\n               LastProbeTime:      2019-11-12 01:44:50.107400413 +0000 UTC m=+15328.497976082\n               LastTransitionTime: 2019-11-11 21:29:33.592892838 +0000 UTC m=+11.983468503\n\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/last-updated": "2019-11-12 01:44:50.306420155 +0000 UTC"
                        },
                        "creationTimestamp": "2019-11-11T21:29:23Z",
                        "name": "cluster-autoscaler-status",
                        "namespace": "kube-system",
                        "resourceVersion": "62188",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/cluster-autoscaler-status",
                        "uid": "548113ab-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "6dda7e469fbc4a5e40272f0fa745d0b334d7590684e0c8a6717bbd426929b15f": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[extension-apiserver-authentication]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[extension-apiserver-authentication]",
                "name": "extension-apiserver-authentication",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "b7fbc59f769fb1e3391dfe43219492b741e0f8d84cb2736609fe93bcb0a6b6dd": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[extension-apiserver-authentication]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "client-ca-file": "-----BEGIN CERTIFICATE-----\nMIIDCzCCAfOgAwIBAgIQWX0FbuvWSKH0cCsdrjeNDDANBgkqhkiG9w0BAQsFADAv\nMS0wKwYDVQQDEyQ5Zjc2NjczMS1hMTgxLTRjMzQtOTE5Zi03ZmY0ZTRiN2YyZWYw\nHhcNMTkxMTExMjAxNzIxWhcNMjQxMTA5MjExNzIxWjAvMS0wKwYDVQQDEyQ5Zjc2\nNjczMS1hMTgxLTRjMzQtOTE5Zi03ZmY0ZTRiN2YyZWYwggEiMA0GCSqGSIb3DQEB\nAQUAA4IBDwAwggEKAoIBAQDQAbk3Py+hIhf0RWlECBXa1VIgXhfGpdLnOD4x5UWA\nfZ/y4UmNNtX6CKdccmSm3DNkbewD1G2qukil0zYHzrcA8Lc+2OFdasZnaNgPDMlz\n7M+vndEp9pbqUtxcYkPw6a59GY/wmV2oOYiGadNKB6uyPbgEBH9F5csIYA7qlmvb\n+QkaLZ0yQ4cPMiNj8Oib6zr2Y8G1zVziCqybDf4ciMjmzwzHMcTN0/4wiNwiwL4y\nD0Qn9IaddQuZXafIs3JUm+hZAM2W8brZkdi/ilhbA+GX9+Zsx8FGIXAh3FxohYBR\n1DmEAsyQnOsAvJBHOFN5yETcAhGR8ILgmpmHnnHTjPRJAgMBAAGjIzAhMA4GA1Ud\nDwEB/wQEAwICBDAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQBl\nDbPb1UMFlFwvHJID2yj42Mpev8oD6Wkny3lKUNUeTbKWvi1QJlvKNxBD+iBF8lR6\n2Mw37xbwFTFoEXO8bXAq+EX6zbZrREEsYp+GZImON35msqvjDkMlVxWvdM9qWpFM\nmHexVD2Xxa9C2cgrJXwgUXaTi8/3q63cbx7BLeLynkuQbDMBSxxXi8FbmGlv3E2m\njGxvvUCfqBP1oXTiTwTY9kCE9ZMIQ7RXkXdikwi88Mr/ptLyAIj+Vp45l9OvqyNo\nqahrskEWBU0PJnY6sZ5Uqnj0vA1M6PrDRVdDozKpICPaHXYQQvN01/03Nnb9eHqc\n+zIPsua1nasX4VvBTFEi\n-----END CERTIFICATE-----\n",
                        "requestheader-allowed-names": "[\"aggregator\"]",
                        "requestheader-client-ca-file": "-----BEGIN CERTIFICATE-----\nMIIDDDCCAfSgAwIBAgIRANjNWoqdoUwrBRnJnnWO6XswDQYJKoZIhvcNAQELBQAw\nLzEtMCsGA1UEAxMkMTc2ODk0YTUtMjU1Yy00OGUzLTg0NDYtODI0MDllODE3Mjhh\nMB4XDTE5MTExMTIwMTczNFoXDTI0MTEwOTIxMTczNFowLzEtMCsGA1UEAxMkMTc2\nODk0YTUtMjU1Yy00OGUzLTg0NDYtODI0MDllODE3MjhhMIIBIjANBgkqhkiG9w0B\nAQEFAAOCAQ8AMIIBCgKCAQEAnDXosveES5YD/YH5niyu7t8O/ZfhXaSNZCeB9//t\nE5QfH51Eyl5F8FxzAW5RESdLux+bwwX+r7Oc/fVAdGMp5wCtwPYq9CUrk75kEiFH\nORiZ01AD/dM1kx3T/HiaIzZcg0ywaYLGnkj3mbDk03ILOQrKzAVJKFpziy5SMYCq\nDWnBM3JuLZBrz2/aJb/xwVYUEzpx1bSe9O8kv/xnJ4nd9FEveLqSAE5s4uuoepV6\nNfWlCDWpclPdwZlx7D+bCbi1cByp5ZsgW1ZO8ybHkSR+JNtLuSBoFSzTimXCY8DQ\nV6xxrQkoBTi5xEgD+H8rZj4eoIxO+3hebfDT2gM5PtsdkwIDAQABoyMwITAOBgNV\nHQ8BAf8EBAMCAgQwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEA\nkEpqo3+Evxdmw0rE1+2qUirVzFgZcutBjDou/KO689HGNm4Ye//JOAluf5geJh0/\nHJZyLQzHUj4aIZ0+R8idin6qUVlykc5G7sf0Fh0WWmgVQR1cnREiOcrl6wF5c2mA\nm2aGHjibf5tS5RaqnP287RgEuUiNwRMMI550zXYEziscwKZcukIUmxOaLkGAgSt/\nyz5INYvOFqduVGVUOo4LjVYJ98MpQKSUXR9oWnOhvn463ZIdlKGHYpoiiVdTlNbX\nNbKtVI9Rq6RqfwnTGxEUvPyCsSNZ6F/DWnf/73o+WbtJfVIWWfBx+JFhghXmmOrN\ncZwTRYZQCx5mE3rrzyJsjg==\n-----END CERTIFICATE-----\n",
                        "requestheader-extra-headers-prefix": "[\"X-Remote-Extra-\"]",
                        "requestheader-group-headers": "[\"X-Remote-Group\"]",
                        "requestheader-username-headers": "[\"X-Remote-User\"]"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:19:39Z",
                        "name": "extension-apiserver-authentication",
                        "namespace": "kube-system",
                        "resourceVersion": "42",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/extension-apiserver-authentication",
                        "uid": "f814d2c2-04c8-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "ad40c3ee356e02cd30c36baa95d3d84f19ded8af8c0c2c6c6d78e30fce022dc7": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[fluentd-gcp-config-v1.2.5]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[fluentd-gcp-config-v1.2.5]",
                "name": "fluentd-gcp-config-v1.2.5",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "7605417f9205f8c265b8756852b33494bca8ad3db3d04692478998ad14f35dec": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[fluentd-gcp-config-v1.2.5]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "containers.input.conf": "# This configuration file for Fluentd is used\n# to watch changes to Docker log files that live in the\n# directory /var/lib/docker/containers/ and are symbolically\n# linked to from the /var/log/containers directory using names that capture the\n# pod name and container name. These logs are then submitted to\n# Google Cloud Logging which assumes the installation of the cloud-logging plug-in.\n#\n# Example\n# =======\n# A line in the Docker log file might look like this JSON:\n#\n# {\"log\":\"2014/09/25 21:15:03 Got request with path wombat\\\\n\",\n#  \"stream\":\"stderr\",\n#   \"time\":\"2014-09-25T21:15:03.499185026Z\"}\n#\n# The original tag is derived from the log file's location.\n# For example a Docker container's logs might be in the directory:\n#  /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b\n# and in the file:\n#  997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\n# where 997599971ee6... is the Docker ID of the running container.\n# The Kubernetes kubelet makes a symbolic link to this file on the host\n# machine in the /var/log/containers directory which includes the pod name,\n# the namespace name and the Kubernetes container name:\n#    synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\n#    ->\n#    /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\n# The /var/log directory on the host is mapped to the /var/log directory in the container\n# running this instance of Fluentd and we end up collecting the file:\n#   /var/log/containers/synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\n# This results in the tag:\n#  var.log.containers.synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\n# where 'synthetic-logger-0.25lps-pod' is the pod name, 'default' is the\n# namespace name, 'synth-lgr' is the container name and '997599971ee6..' is\n# the container ID.\n# The record reformer is used to extract pod_name, namespace_name and\n# container_name from the tag and set them in a local_resource_id in the\n# format of:\n# 'k8s_container.<NAMESPACE_NAME>.<POD_NAME>.<CONTAINER_NAME>'.\n# The reformer also changes the tags to 'stderr' or 'stdout' based on the\n# value of 'stream'.\n# local_resource_id is later used by google_cloud plugin to determine the\n# monitored resource to ingest logs against.\n\n# Json Log Example:\n# {\"log\":\"[info:2016-02-16T16:04:05.930-08:00] Some log text here\\n\",\"stream\":\"stdout\",\"time\":\"2016-02-17T00:04:05.931087621Z\"}\n# CRI Log Example:\n# 2016-02-17T00:04:05.931087621Z stdout F [info:2016-02-16T16:04:05.930-08:00] Some log text here\n<source>\n  @type tail\n  path /var/log/containers/*.log\n  pos_file /var/log/gcp-containers.log.pos\n  # Tags at this point are in the format of:\n  # reform.var.log.containers.<POD_NAME>_<NAMESPACE_NAME>_<CONTAINER_NAME>-<CONTAINER_ID>.log\n  tag reform.*\n  read_from_head true\n  <parse>\n    @type multi_format\n    <pattern>\n      format json\n      time_key time\n      time_format %Y-%m-%dT%H:%M:%S.%NZ\n    </pattern>\n    <pattern>\n      format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/\n      time_format %Y-%m-%dT%H:%M:%S.%N%:z\n    </pattern>\n  </parse>\n</source>\n\n<filter reform.**>\n  @type parser\n  format /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<log>.*)/\n  reserve_data true\n  suppress_parse_error_log true\n  emit_invalid_record_to_error false\n  key_name log\n</filter>\n\n<match reform.**>\n  @type record_reformer\n  enable_ruby true\n  <record>\n    # Extract local_resource_id from tag for 'k8s_container' monitored\n    # resource. The format is:\n    # 'k8s_container.<namespace_name>.<pod_name>.<container_name>'.\n    \"logging.googleapis.com/local_resource_id\" ${\"k8s_container.#{tag_suffix[4].rpartition('.')[0].split('_')[1]}.#{tag_suffix[4].rpartition('.')[0].split('_')[0]}.#{tag_suffix[4].rpartition('.')[0].split('_')[2].rpartition('-')[0]}\"}\n    # Rename the field 'log' to a more generic field 'message'. This way the\n    # fluent-plugin-google-cloud knows to flatten the field as textPayload\n    # instead of jsonPayload after extracting 'time', 'severity' and\n    # 'stream' from the record.\n    message ${record['log']}\n    # If 'severity' is not set, assume stderr is ERROR and stdout is INFO.\n    severity ${record['severity'] || if record['stream'] == 'stderr' then 'ERROR' else 'INFO' end}\n  </record>\n  tag ${if record['stream'] == 'stderr' then 'raw.stderr' else 'raw.stdout' end}\n  remove_keys stream,log\n</match>\n\n# Detect exceptions in the log output and forward them as one log entry.\n<match {raw.stderr,raw.stdout}>\n  @type detect_exceptions\n\n  remove_tag_prefix raw\n  message message\n  stream \"logging.googleapis.com/local_resource_id\"\n  multiline_flush_interval 5\n  max_bytes 500000\n  max_lines 1000\n</match>",
                        "monitoring.conf": "# This source is used to acquire approximate process start timestamp,\n# which purpose is explained before the corresponding output plugin.\n<source>\n  @type exec\n  command /bin/sh -c 'date +%s'\n  tag process_start\n  time_format %Y-%m-%d %H:%M:%S\n  keys process_start_timestamp\n</source>\n\n# This filter is used to convert process start timestamp to integer\n# value for correct ingestion in the prometheus output plugin.\n<filter process_start>\n  @type record_transformer\n  enable_ruby true\n  auto_typecast true\n  <record>\n    process_start_timestamp ${record[\"process_start_timestamp\"].to_i}\n  </record>\n</filter>",
                        "output.conf": "# This match is placed before the all-matching output to provide metric\n# exporter with a process start timestamp for correct exporting of\n# cumulative metrics to Stackdriver.\n<match process_start>\n  @type prometheus\n\n  <metric>\n    type gauge\n    name process_start_time_seconds\n    desc Timestamp of the process start in seconds\n    key process_start_timestamp\n  </metric>\n</match>\n\n# This filter allows to count the number of log entries read by fluentd\n# before they are processed by the output plugin. This in turn allows to\n# monitor the number of log entries that were read but never sent, e.g.\n# because of liveness probe removing buffer.\n<filter **>\n  @type prometheus\n  <metric>\n    type counter\n    name logging_entry_count\n    desc Total number of log entries generated by either application containers or system components\n  </metric>\n</filter>\n\n# This section is exclusive for k8s_container logs. Those come with\n# 'stderr'/'stdout' tags.\n# TODO(instrumentation): Reconsider this workaround later.\n# Trim the entries which exceed slightly less than 100KB, to avoid\n# dropping them. It is a necessity, because Stackdriver only supports\n# entries that are up to 100KB in size.\n<filter {stderr,stdout}>\n  @type record_transformer\n  enable_ruby true\n  <record>\n    message ${record['message'].length > 100000 ? \"[Trimmed]#{record['message'][0..100000]}...\" : record['message']}\n  </record>\n</filter>\n\n# Do not collect fluentd's own logs to avoid infinite loops.\n<match fluent.**>\n  @type null\n</match>\n\n# Add a unique insertId to each log entry that doesn't already have it.\n# This helps guarantee the order and prevent log duplication.\n<filter **>\n  @type add_insert_ids\n</filter>\n\n# This section is exclusive for k8s_container logs. These logs come with\n# 'stderr'/'stdout' tags.\n# We use a separate output stanza for 'k8s_node' logs with a smaller buffer\n# because node logs are less important than user's container logs.\n<match {stderr,stdout}>\n  @type google_cloud\n\n  # Try to detect JSON formatted log entries.\n  detect_json true\n  # Collect metrics in Prometheus registry about plugin activity.\n  enable_monitoring true\n  monitoring_type prometheus\n  # Allow log entries from multiple containers to be sent in the same request.\n  split_logs_by_tag false\n  # Set the buffer type to file to improve the reliability and reduce the memory consumption\n  buffer_type file\n  buffer_path /var/log/fluentd-buffers/kubernetes.containers.buffer\n  # Set queue_full action to block because we want to pause gracefully\n  # in case of the off-the-limits load instead of throwing an exception\n  buffer_queue_full_action block\n  # Set the chunk limit conservatively to avoid exceeding the recommended\n  # chunk size of 5MB per write request.\n  buffer_chunk_limit 512k\n  # Cap the combined memory usage of this buffer and the one below to\n  # 512KiB/chunk * (6 + 2) chunks = 4 MiB\n  buffer_queue_limit 6\n  # Never wait more than 5 seconds before flushing logs in the non-error case.\n  flush_interval 5s\n  # Never wait longer than 30 seconds between retries.\n  max_retry_wait 30\n  # Disable the limit on the number of retries (retry forever).\n  disable_retry_limit\n  # Use multiple threads for processing.\n  num_threads 2\n  use_grpc true\n  # Skip timestamp adjustment as this is in a controlled environment with\n  # known timestamp format. This helps with CPU usage.\n  adjust_invalid_timestamps false\n</match>\n\n# Attach local_resource_id for 'k8s_node' monitored resource.\n<filter **>\n  @type record_transformer\n  enable_ruby true\n  <record>\n    \"logging.googleapis.com/local_resource_id\" ${\"k8s_node.#{ENV['NODE_NAME']}\"}\n  </record>\n</filter>\n\n# This section is exclusive for 'k8s_node' logs. These logs come with tags\n# that are neither 'stderr' or 'stdout'.\n# We use a separate output stanza for 'k8s_container' logs with a larger\n# buffer because user's container logs are more important than node logs.\n<match **>\n  @type google_cloud\n\n  detect_json true\n  enable_monitoring true\n  monitoring_type prometheus\n  # Allow entries from multiple system logs to be sent in the same request.\n  split_logs_by_tag false\n  detect_subservice false\n  buffer_type file\n  buffer_path /var/log/fluentd-buffers/kubernetes.system.buffer\n  buffer_queue_full_action block\n  buffer_chunk_limit 512k\n  buffer_queue_limit 2\n  flush_interval 5s\n  max_retry_wait 30\n  disable_retry_limit\n  num_threads 2\n  use_grpc true\n  # Skip timestamp adjustment as this is in a controlled environment with\n  # known timestamp format. This helps with CPU usage.\n  adjust_invalid_timestamps false\n</match>",
                        "system.input.conf": "# Example:\n# Dec 21 23:17:22 gke-foo-1-1-4b5cbd14-node-4eoj startupscript: Finished running startup script /var/run/google.startup.script\n<source>\n  @type tail\n  format syslog\n  path /var/log/startupscript.log\n  pos_file /var/log/gcp-startupscript.log.pos\n  tag startupscript\n</source>\n\n# Examples:\n# time=\"2016-02-04T06:51:03.053580605Z\" level=info msg=\"GET /containers/json\"\n# time=\"2016-02-04T07:53:57.505612354Z\" level=error msg=\"HTTP Error\" err=\"No such image: -f\" statusCode=404\n# TODO(random-liu): Remove this after cri container runtime rolls out.\n<source>\n  @type tail\n  format /^time=\"(?<time>[^)]*)\" level=(?<severity>[^ ]*) msg=\"(?<message>[^\"]*)\"( err=\"(?<error>[^\"]*)\")?( statusCode=($<status_code>\\d+))?/\n  path /var/log/docker.log\n  pos_file /var/log/gcp-docker.log.pos\n  tag docker\n</source>\n\n# Example:\n# 2016/02/04 06:52:38 filePurge: successfully removed file /var/etcd/data/member/wal/00000000000006d0-00000000010a23d1.wal\n<source>\n  @type tail\n  # Not parsing this, because it doesn't have anything particularly useful to\n  # parse out of it (like severities).\n  format none\n  path /var/log/etcd.log\n  pos_file /var/log/gcp-etcd.log.pos\n  tag etcd\n</source>\n\n# Multi-line parsing is required for all the kube logs because very large log\n# statements, such as those that include entire object bodies, get split into\n# multiple lines by glog.\n\n# Example:\n# I0204 07:32:30.020537    3368 server.go:1048] POST /stats/container/: (13.972191ms) 200 [[Go-http-client/1.1] 10.244.1.3:40537]\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kubelet.log\n  pos_file /var/log/gcp-kubelet.log.pos\n  tag kubelet\n</source>\n\n# Example:\n# I1118 21:26:53.975789       6 proxier.go:1096] Port \"nodePort for kube-system/default-http-backend:http\" (:31429/tcp) was open before and is still needed\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-proxy.log\n  pos_file /var/log/gcp-kube-proxy.log.pos\n  tag kube-proxy\n</source>\n\n# Example:\n# I0204 07:00:19.604280       5 handlers.go:131] GET /api/v1/nodes: (1.624207ms) 200 [[kube-controller-manager/v1.1.3 (linux/amd64) kubernetes/6a81b50] 127.0.0.1:38266]\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-apiserver.log\n  pos_file /var/log/gcp-kube-apiserver.log.pos\n  tag kube-apiserver\n</source>\n\n# Example:\n# I0204 06:55:31.872680       5 servicecontroller.go:277] LB already exists and doesn't need update for service kube-system/kube-ui\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-controller-manager.log\n  pos_file /var/log/gcp-kube-controller-manager.log.pos\n  tag kube-controller-manager\n</source>\n\n# Example:\n# W0204 06:49:18.239674       7 reflector.go:245] pkg/scheduler/factory/factory.go:193: watch of *api.Service ended with: 401: The event in requested index is outdated and cleared (the requested history has been cleared [2578313/2577886]) [2579312]\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/kube-scheduler.log\n  pos_file /var/log/gcp-kube-scheduler.log.pos\n  tag kube-scheduler\n</source>\n\n# Example:\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/glbc.log\n  pos_file /var/log/gcp-glbc.log.pos\n  tag glbc\n</source>\n\n# Example:\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\n<source>\n  @type tail\n  format multiline\n  multiline_flush_interval 5s\n  format_firstline /^\\w\\d{4}/\n  format1 /^(?<severity>\\w)(?<time>\\d{4} [^\\s]*)\\s+(?<pid>\\d+)\\s+(?<source>[^ \\]]+)\\] (?<message>.*)/\n  time_format %m%d %H:%M:%S.%N\n  path /var/log/cluster-autoscaler.log\n  pos_file /var/log/gcp-cluster-autoscaler.log.pos\n  tag cluster-autoscaler\n</source>\n\n# Logs from systemd-journal for interesting services.\n# TODO(random-liu): Keep this for compatibility, remove this after\n# cri container runtime rolls out.\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"docker.service\" }]\n  pos_file /var/log/gcp-journald-docker.pos\n  read_from_head true\n  tag docker\n</source>\n\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"{{ fluentd_container_runtime_service }}.service\" }]\n  pos_file /var/log/gcp-journald-container-runtime.pos\n  read_from_head true\n  tag container-runtime\n</source>\n\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"kubelet.service\" }]\n  pos_file /var/log/gcp-journald-kubelet.pos\n  read_from_head true\n  tag kubelet\n</source>\n\n<source>\n  @type systemd\n  filters [{ \"_SYSTEMD_UNIT\": \"node-problem-detector.service\" }]\n  pos_file /var/log/gcp-journald-node-problem-detector.pos\n  read_from_head true\n  tag node-problem-detector\n</source>\n\n# BEGIN_NODE_JOURNAL\n# Whether to include node-journal or not is determined when starting the\n# cluster. It is not changed when the cluster is already running.\n<source>\n  @type systemd\n  pos_file /var/log/gcp-journald.pos\n  read_from_head true\n  tag node-journal\n</source>\n\n<filter node-journal>\n  @type grep\n  <exclude>\n    key _SYSTEMD_UNIT\n    pattern ^(docker|{{ fluentd_container_runtime_service }}|kubelet|node-problem-detector)\\.service$\n  </exclude>\n</filter>\n# END_NODE_JOURNAL"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"containers.input.conf\":\"# This configuration file for Fluentd is used\\n# to watch changes to Docker log files that live in the\\n# directory /var/lib/docker/containers/ and are symbolically\\n# linked to from the /var/log/containers directory using names that capture the\\n# pod name and container name. These logs are then submitted to\\n# Google Cloud Logging which assumes the installation of the cloud-logging plug-in.\\n#\\n# Example\\n# =======\\n# A line in the Docker log file might look like this JSON:\\n#\\n# {\\\"log\\\":\\\"2014/09/25 21:15:03 Got request with path wombat\\\\\\\\n\\\",\\n#  \\\"stream\\\":\\\"stderr\\\",\\n#   \\\"time\\\":\\\"2014-09-25T21:15:03.499185026Z\\\"}\\n#\\n# The original tag is derived from the log file's location.\\n# For example a Docker container's logs might be in the directory:\\n#  /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b\\n# and in the file:\\n#  997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\\n# where 997599971ee6... is the Docker ID of the running container.\\n# The Kubernetes kubelet makes a symbolic link to this file on the host\\n# machine in the /var/log/containers directory which includes the pod name,\\n# the namespace name and the Kubernetes container name:\\n#    synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\\n#    -\\u003e\\n#    /var/lib/docker/containers/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b/997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b-json.log\\n# The /var/log directory on the host is mapped to the /var/log directory in the container\\n# running this instance of Fluentd and we end up collecting the file:\\n#   /var/log/containers/synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\\n# This results in the tag:\\n#  var.log.containers.synthetic-logger-0.25lps-pod_default_synth-lgr-997599971ee6366d4a5920d25b79286ad45ff37a74494f262e3bc98d909d0a7b.log\\n# where 'synthetic-logger-0.25lps-pod' is the pod name, 'default' is the\\n# namespace name, 'synth-lgr' is the container name and '997599971ee6..' is\\n# the container ID.\\n# The record reformer is used to extract pod_name, namespace_name and\\n# container_name from the tag and set them in a local_resource_id in the\\n# format of:\\n# 'k8s_container.\\u003cNAMESPACE_NAME\\u003e.\\u003cPOD_NAME\\u003e.\\u003cCONTAINER_NAME\\u003e'.\\n# The reformer also changes the tags to 'stderr' or 'stdout' based on the\\n# value of 'stream'.\\n# local_resource_id is later used by google_cloud plugin to determine the\\n# monitored resource to ingest logs against.\\n\\n# Json Log Example:\\n# {\\\"log\\\":\\\"[info:2016-02-16T16:04:05.930-08:00] Some log text here\\\\n\\\",\\\"stream\\\":\\\"stdout\\\",\\\"time\\\":\\\"2016-02-17T00:04:05.931087621Z\\\"}\\n# CRI Log Example:\\n# 2016-02-17T00:04:05.931087621Z stdout F [info:2016-02-16T16:04:05.930-08:00] Some log text here\\n\\u003csource\\u003e\\n  @type tail\\n  path /var/log/containers/*.log\\n  pos_file /var/log/gcp-containers.log.pos\\n  # Tags at this point are in the format of:\\n  # reform.var.log.containers.\\u003cPOD_NAME\\u003e_\\u003cNAMESPACE_NAME\\u003e_\\u003cCONTAINER_NAME\\u003e-\\u003cCONTAINER_ID\\u003e.log\\n  tag reform.*\\n  read_from_head true\\n  \\u003cparse\\u003e\\n    @type multi_format\\n    \\u003cpattern\\u003e\\n      format json\\n      time_key time\\n      time_format %Y-%m-%dT%H:%M:%S.%NZ\\n    \\u003c/pattern\\u003e\\n    \\u003cpattern\\u003e\\n      format /^(?\\u003ctime\\u003e.+) (?\\u003cstream\\u003estdout|stderr) [^ ]* (?\\u003clog\\u003e.*)$/\\n      time_format %Y-%m-%dT%H:%M:%S.%N%:z\\n    \\u003c/pattern\\u003e\\n  \\u003c/parse\\u003e\\n\\u003c/source\\u003e\\n\\n\\u003cfilter reform.**\\u003e\\n  @type parser\\n  format /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003clog\\u003e.*)/\\n  reserve_data true\\n  suppress_parse_error_log true\\n  emit_invalid_record_to_error false\\n  key_name log\\n\\u003c/filter\\u003e\\n\\n\\u003cmatch reform.**\\u003e\\n  @type record_reformer\\n  enable_ruby true\\n  \\u003crecord\\u003e\\n    # Extract local_resource_id from tag for 'k8s_container' monitored\\n    # resource. The format is:\\n    # 'k8s_container.\\u003cnamespace_name\\u003e.\\u003cpod_name\\u003e.\\u003ccontainer_name\\u003e'.\\n    \\\"logging.googleapis.com/local_resource_id\\\" ${\\\"k8s_container.#{tag_suffix[4].rpartition('.')[0].split('_')[1]}.#{tag_suffix[4].rpartition('.')[0].split('_')[0]}.#{tag_suffix[4].rpartition('.')[0].split('_')[2].rpartition('-')[0]}\\\"}\\n    # Rename the field 'log' to a more generic field 'message'. This way the\\n    # fluent-plugin-google-cloud knows to flatten the field as textPayload\\n    # instead of jsonPayload after extracting 'time', 'severity' and\\n    # 'stream' from the record.\\n    message ${record['log']}\\n    # If 'severity' is not set, assume stderr is ERROR and stdout is INFO.\\n    severity ${record['severity'] || if record['stream'] == 'stderr' then 'ERROR' else 'INFO' end}\\n  \\u003c/record\\u003e\\n  tag ${if record['stream'] == 'stderr' then 'raw.stderr' else 'raw.stdout' end}\\n  remove_keys stream,log\\n\\u003c/match\\u003e\\n\\n# Detect exceptions in the log output and forward them as one log entry.\\n\\u003cmatch {raw.stderr,raw.stdout}\\u003e\\n  @type detect_exceptions\\n\\n  remove_tag_prefix raw\\n  message message\\n  stream \\\"logging.googleapis.com/local_resource_id\\\"\\n  multiline_flush_interval 5\\n  max_bytes 500000\\n  max_lines 1000\\n\\u003c/match\\u003e\",\"monitoring.conf\":\"# This source is used to acquire approximate process start timestamp,\\n# which purpose is explained before the corresponding output plugin.\\n\\u003csource\\u003e\\n  @type exec\\n  command /bin/sh -c 'date +%s'\\n  tag process_start\\n  time_format %Y-%m-%d %H:%M:%S\\n  keys process_start_timestamp\\n\\u003c/source\\u003e\\n\\n# This filter is used to convert process start timestamp to integer\\n# value for correct ingestion in the prometheus output plugin.\\n\\u003cfilter process_start\\u003e\\n  @type record_transformer\\n  enable_ruby true\\n  auto_typecast true\\n  \\u003crecord\\u003e\\n    process_start_timestamp ${record[\\\"process_start_timestamp\\\"].to_i}\\n  \\u003c/record\\u003e\\n\\u003c/filter\\u003e\",\"output.conf\":\"# This match is placed before the all-matching output to provide metric\\n# exporter with a process start timestamp for correct exporting of\\n# cumulative metrics to Stackdriver.\\n\\u003cmatch process_start\\u003e\\n  @type prometheus\\n\\n  \\u003cmetric\\u003e\\n    type gauge\\n    name process_start_time_seconds\\n    desc Timestamp of the process start in seconds\\n    key process_start_timestamp\\n  \\u003c/metric\\u003e\\n\\u003c/match\\u003e\\n\\n# This filter allows to count the number of log entries read by fluentd\\n# before they are processed by the output plugin. This in turn allows to\\n# monitor the number of log entries that were read but never sent, e.g.\\n# because of liveness probe removing buffer.\\n\\u003cfilter **\\u003e\\n  @type prometheus\\n  \\u003cmetric\\u003e\\n    type counter\\n    name logging_entry_count\\n    desc Total number of log entries generated by either application containers or system components\\n  \\u003c/metric\\u003e\\n\\u003c/filter\\u003e\\n\\n# This section is exclusive for k8s_container logs. Those come with\\n# 'stderr'/'stdout' tags.\\n# TODO(instrumentation): Reconsider this workaround later.\\n# Trim the entries which exceed slightly less than 100KB, to avoid\\n# dropping them. It is a necessity, because Stackdriver only supports\\n# entries that are up to 100KB in size.\\n\\u003cfilter {stderr,stdout}\\u003e\\n  @type record_transformer\\n  enable_ruby true\\n  \\u003crecord\\u003e\\n    message ${record['message'].length \\u003e 100000 ? \\\"[Trimmed]#{record['message'][0..100000]}...\\\" : record['message']}\\n  \\u003c/record\\u003e\\n\\u003c/filter\\u003e\\n\\n# Do not collect fluentd's own logs to avoid infinite loops.\\n\\u003cmatch fluent.**\\u003e\\n  @type null\\n\\u003c/match\\u003e\\n\\n# Add a unique insertId to each log entry that doesn't already have it.\\n# This helps guarantee the order and prevent log duplication.\\n\\u003cfilter **\\u003e\\n  @type add_insert_ids\\n\\u003c/filter\\u003e\\n\\n# This section is exclusive for k8s_container logs. These logs come with\\n# 'stderr'/'stdout' tags.\\n# We use a separate output stanza for 'k8s_node' logs with a smaller buffer\\n# because node logs are less important than user's container logs.\\n\\u003cmatch {stderr,stdout}\\u003e\\n  @type google_cloud\\n\\n  # Try to detect JSON formatted log entries.\\n  detect_json true\\n  # Collect metrics in Prometheus registry about plugin activity.\\n  enable_monitoring true\\n  monitoring_type prometheus\\n  # Allow log entries from multiple containers to be sent in the same request.\\n  split_logs_by_tag false\\n  # Set the buffer type to file to improve the reliability and reduce the memory consumption\\n  buffer_type file\\n  buffer_path /var/log/fluentd-buffers/kubernetes.containers.buffer\\n  # Set queue_full action to block because we want to pause gracefully\\n  # in case of the off-the-limits load instead of throwing an exception\\n  buffer_queue_full_action block\\n  # Set the chunk limit conservatively to avoid exceeding the recommended\\n  # chunk size of 5MB per write request.\\n  buffer_chunk_limit 512k\\n  # Cap the combined memory usage of this buffer and the one below to\\n  # 512KiB/chunk * (6 + 2) chunks = 4 MiB\\n  buffer_queue_limit 6\\n  # Never wait more than 5 seconds before flushing logs in the non-error case.\\n  flush_interval 5s\\n  # Never wait longer than 30 seconds between retries.\\n  max_retry_wait 30\\n  # Disable the limit on the number of retries (retry forever).\\n  disable_retry_limit\\n  # Use multiple threads for processing.\\n  num_threads 2\\n  use_grpc true\\n  # Skip timestamp adjustment as this is in a controlled environment with\\n  # known timestamp format. This helps with CPU usage.\\n  adjust_invalid_timestamps false\\n\\u003c/match\\u003e\\n\\n# Attach local_resource_id for 'k8s_node' monitored resource.\\n\\u003cfilter **\\u003e\\n  @type record_transformer\\n  enable_ruby true\\n  \\u003crecord\\u003e\\n    \\\"logging.googleapis.com/local_resource_id\\\" ${\\\"k8s_node.#{ENV['NODE_NAME']}\\\"}\\n  \\u003c/record\\u003e\\n\\u003c/filter\\u003e\\n\\n# This section is exclusive for 'k8s_node' logs. These logs come with tags\\n# that are neither 'stderr' or 'stdout'.\\n# We use a separate output stanza for 'k8s_container' logs with a larger\\n# buffer because user's container logs are more important than node logs.\\n\\u003cmatch **\\u003e\\n  @type google_cloud\\n\\n  detect_json true\\n  enable_monitoring true\\n  monitoring_type prometheus\\n  # Allow entries from multiple system logs to be sent in the same request.\\n  split_logs_by_tag false\\n  detect_subservice false\\n  buffer_type file\\n  buffer_path /var/log/fluentd-buffers/kubernetes.system.buffer\\n  buffer_queue_full_action block\\n  buffer_chunk_limit 512k\\n  buffer_queue_limit 2\\n  flush_interval 5s\\n  max_retry_wait 30\\n  disable_retry_limit\\n  num_threads 2\\n  use_grpc true\\n  # Skip timestamp adjustment as this is in a controlled environment with\\n  # known timestamp format. This helps with CPU usage.\\n  adjust_invalid_timestamps false\\n\\u003c/match\\u003e\",\"system.input.conf\":\"# Example:\\n# Dec 21 23:17:22 gke-foo-1-1-4b5cbd14-node-4eoj startupscript: Finished running startup script /var/run/google.startup.script\\n\\u003csource\\u003e\\n  @type tail\\n  format syslog\\n  path /var/log/startupscript.log\\n  pos_file /var/log/gcp-startupscript.log.pos\\n  tag startupscript\\n\\u003c/source\\u003e\\n\\n# Examples:\\n# time=\\\"2016-02-04T06:51:03.053580605Z\\\" level=info msg=\\\"GET /containers/json\\\"\\n# time=\\\"2016-02-04T07:53:57.505612354Z\\\" level=error msg=\\\"HTTP Error\\\" err=\\\"No such image: -f\\\" statusCode=404\\n# TODO(random-liu): Remove this after cri container runtime rolls out.\\n\\u003csource\\u003e\\n  @type tail\\n  format /^time=\\\"(?\\u003ctime\\u003e[^)]*)\\\" level=(?\\u003cseverity\\u003e[^ ]*) msg=\\\"(?\\u003cmessage\\u003e[^\\\"]*)\\\"( err=\\\"(?\\u003cerror\\u003e[^\\\"]*)\\\")?( statusCode=($\\u003cstatus_code\\u003e\\\\d+))?/\\n  path /var/log/docker.log\\n  pos_file /var/log/gcp-docker.log.pos\\n  tag docker\\n\\u003c/source\\u003e\\n\\n# Example:\\n# 2016/02/04 06:52:38 filePurge: successfully removed file /var/etcd/data/member/wal/00000000000006d0-00000000010a23d1.wal\\n\\u003csource\\u003e\\n  @type tail\\n  # Not parsing this, because it doesn't have anything particularly useful to\\n  # parse out of it (like severities).\\n  format none\\n  path /var/log/etcd.log\\n  pos_file /var/log/gcp-etcd.log.pos\\n  tag etcd\\n\\u003c/source\\u003e\\n\\n# Multi-line parsing is required for all the kube logs because very large log\\n# statements, such as those that include entire object bodies, get split into\\n# multiple lines by glog.\\n\\n# Example:\\n# I0204 07:32:30.020537    3368 server.go:1048] POST /stats/container/: (13.972191ms) 200 [[Go-http-client/1.1] 10.244.1.3:40537]\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kubelet.log\\n  pos_file /var/log/gcp-kubelet.log.pos\\n  tag kubelet\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I1118 21:26:53.975789       6 proxier.go:1096] Port \\\"nodePort for kube-system/default-http-backend:http\\\" (:31429/tcp) was open before and is still needed\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-proxy.log\\n  pos_file /var/log/gcp-kube-proxy.log.pos\\n  tag kube-proxy\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0204 07:00:19.604280       5 handlers.go:131] GET /api/v1/nodes: (1.624207ms) 200 [[kube-controller-manager/v1.1.3 (linux/amd64) kubernetes/6a81b50] 127.0.0.1:38266]\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-apiserver.log\\n  pos_file /var/log/gcp-kube-apiserver.log.pos\\n  tag kube-apiserver\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0204 06:55:31.872680       5 servicecontroller.go:277] LB already exists and doesn't need update for service kube-system/kube-ui\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-controller-manager.log\\n  pos_file /var/log/gcp-kube-controller-manager.log.pos\\n  tag kube-controller-manager\\n\\u003c/source\\u003e\\n\\n# Example:\\n# W0204 06:49:18.239674       7 reflector.go:245] pkg/scheduler/factory/factory.go:193: watch of *api.Service ended with: 401: The event in requested index is outdated and cleared (the requested history has been cleared [2578313/2577886]) [2579312]\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/kube-scheduler.log\\n  pos_file /var/log/gcp-kube-scheduler.log.pos\\n  tag kube-scheduler\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/glbc.log\\n  pos_file /var/log/gcp-glbc.log.pos\\n  tag glbc\\n\\u003c/source\\u003e\\n\\n# Example:\\n# I0603 15:31:05.793605       6 cluster_manager.go:230] Reading config from path /etc/gce.conf\\n\\u003csource\\u003e\\n  @type tail\\n  format multiline\\n  multiline_flush_interval 5s\\n  format_firstline /^\\\\w\\\\d{4}/\\n  format1 /^(?\\u003cseverity\\u003e\\\\w)(?\\u003ctime\\u003e\\\\d{4} [^\\\\s]*)\\\\s+(?\\u003cpid\\u003e\\\\d+)\\\\s+(?\\u003csource\\u003e[^ \\\\]]+)\\\\] (?\\u003cmessage\\u003e.*)/\\n  time_format %m%d %H:%M:%S.%N\\n  path /var/log/cluster-autoscaler.log\\n  pos_file /var/log/gcp-cluster-autoscaler.log.pos\\n  tag cluster-autoscaler\\n\\u003c/source\\u003e\\n\\n# Logs from systemd-journal for interesting services.\\n# TODO(random-liu): Keep this for compatibility, remove this after\\n# cri container runtime rolls out.\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"docker.service\\\" }]\\n  pos_file /var/log/gcp-journald-docker.pos\\n  read_from_head true\\n  tag docker\\n\\u003c/source\\u003e\\n\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"{{ fluentd_container_runtime_service }}.service\\\" }]\\n  pos_file /var/log/gcp-journald-container-runtime.pos\\n  read_from_head true\\n  tag container-runtime\\n\\u003c/source\\u003e\\n\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"kubelet.service\\\" }]\\n  pos_file /var/log/gcp-journald-kubelet.pos\\n  read_from_head true\\n  tag kubelet\\n\\u003c/source\\u003e\\n\\n\\u003csource\\u003e\\n  @type systemd\\n  filters [{ \\\"_SYSTEMD_UNIT\\\": \\\"node-problem-detector.service\\\" }]\\n  pos_file /var/log/gcp-journald-node-problem-detector.pos\\n  read_from_head true\\n  tag node-problem-detector\\n\\u003c/source\\u003e\\n\\n# BEGIN_NODE_JOURNAL\\n# Whether to include node-journal or not is determined when starting the\\n# cluster. It is not changed when the cluster is already running.\\n\\u003csource\\u003e\\n  @type systemd\\n  pos_file /var/log/gcp-journald.pos\\n  read_from_head true\\n  tag node-journal\\n\\u003c/source\\u003e\\n\\n\\u003cfilter node-journal\\u003e\\n  @type grep\\n  \\u003cexclude\\u003e\\n    key _SYSTEMD_UNIT\\n    pattern ^(docker|{{ fluentd_container_runtime_service }}|kubelet|node-problem-detector)\\\\.service$\\n  \\u003c/exclude\\u003e\\n\\u003c/filter\\u003e\\n# END_NODE_JOURNAL\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"fluentd-gcp-config-v1.2.5\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2019-11-11T21:20:09Z",
                        "labels": {
                            "addonmanager.kubernetes.io/mode": "Reconcile"
                        },
                        "name": "fluentd-gcp-config-v1.2.5",
                        "namespace": "kube-system",
                        "resourceVersion": "496",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/fluentd-gcp-config-v1.2.5",
                        "uid": "0a20a18d-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "5883e979a280976d288f75b56c14cbcc2bfcdddb2e64f4b5084ea3faa5e41758": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[gke-common-webhook-lock]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[gke-common-webhook-lock]",
                "name": "gke-common-webhook-lock",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "5a57731e3489a529506e9d663509141aad5cfa7e2b56891bca56513f325d5746": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[gke-common-webhook-lock]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"gke-7521485b7b64287efb4b-2dab-8b69-vm_799a1\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2019-11-11T21:28:08Z\",\"renewTime\":\"2019-11-12T01:44:51Z\",\"leaderTransitions\":1}"
                        },
                        "creationTimestamp": "2019-11-11T21:19:38Z",
                        "name": "gke-common-webhook-lock",
                        "namespace": "kube-system",
                        "resourceVersion": "62191",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock",
                        "uid": "f80de6f3-04c8-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "977a76c946b74c3556f5b02d843a1e3ca91c0e903138c343acbb191527e6067e": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[ingress-gce-lock]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[ingress-gce-lock]",
                "name": "ingress-gce-lock",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "4b5f650c93af2d8162e6cd9c7448a4c370f938c86f0e6f4a0988f724aef9a7ee": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[ingress-gce-lock]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"gke-7521485b7b64287efb4b-2dab-8b69-vm_7173d\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2019-11-11T21:28:17Z\",\"renewTime\":\"2019-11-12T01:44:51Z\",\"leaderTransitions\":1}"
                        },
                        "creationTimestamp": "2019-11-11T21:19:59Z",
                        "name": "ingress-gce-lock",
                        "namespace": "kube-system",
                        "resourceVersion": "62193",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/ingress-gce-lock",
                        "uid": "0408b0f8-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "b2153d9031438e318a15fc2aefc9eb549a11c610130e0f8ef4e5910fcc1feeeb": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[ingress-uid]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[ingress-uid]",
                "name": "ingress-uid",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "4304af6da429b03aa9c4c65df234e04b5d50acd2f6b35c607f1a5d0a4e9175aa": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[ingress-uid]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "provider-uid": "2fda44ac48d74515",
                        "uid": "2fda44ac48d74515"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:19:46Z",
                        "name": "ingress-uid",
                        "namespace": "kube-system",
                        "resourceVersion": "217",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/ingress-uid",
                        "uid": "fc7424f3-04c8-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "bae3c80b3994f5a13e1e08f61c0f2561d8230f41af395c32ad6d1a437d3b9b59": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-init.v1]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[istio-init.v1]",
                "name": "istio-init.v1",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "5d8ee7a2601f342fa67a30ab7786971a553e05b2e72e7de9a394cc2d046c6318": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-init.v1]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "release": ""
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:29:17Z",
                        "labels": {
                            "MODIFIED_AT": "1573507760",
                            "NAME": "istio-init",
                            "OWNER": "TILLER",
                            "STATUS": "DEPLOYED",
                            "VERSION": "1"
                        },
                        "name": "istio-init.v1",
                        "namespace": "kube-system",
                        "resourceVersion": "1671",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/istio-init.v1",
                        "uid": "51036c6a-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "01be67a66b11edda1907f777140210d5f98ed918922ca23f4927f54febc3ccdf": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio.v1]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[istio.v1]",
                "name": "istio.v1",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "deeafcdf07a490e78075169a97ffbe0324ad2635442e706cc3d48b1dd3dde607": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio.v1]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "release": ""
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:30:22Z",
                        "labels": {
                            "MODIFIED_AT": "1573507827",
                            "NAME": "istio",
                            "OWNER": "TILLER",
                            "STATUS": "DEPLOYED",
                            "VERSION": "1"
                        },
                        "name": "istio.v1",
                        "namespace": "kube-system",
                        "resourceVersion": "2319",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/istio.v1",
                        "uid": "779d2484-04ca-11ea-b9e5-42010a8a0197"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "22075ca212ec0fabf6c8465bedea2d99809e6605679d6ca76d06137d4b44459b": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[kube-dns-autoscaler]",
            "kind": "configmap",
            "config_kind": "node",
            "config": {
                "rn": "configmap-[kube-dns-autoscaler]",
                "name": "kube-dns-autoscaler",
                "kind": "configmap",
                "order": 100,
                "alertCount": {
                    "warn": 1
                },
                "flags": {}
            }
        },
        "25ba53723c46246a737b6699a8ab5163fa81b9beec68caee36b46da26e60fb6b": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[kube-dns-autoscaler]",
            "kind": "configmap",
            "config_kind": "props",
            "name": "config",
            "config": {
                "kind": "yaml",
                "id": "config",
                "title": "Config",
                "config": {
                    "apiVersion": "v1",
                    "data": {
                        "linear": "{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "creationTimestamp": "2019-11-11T21:22:53Z",
                        "name": "kube-dns-autoscaler",
                        "namespace": "kube-system",
                        "resourceVersion": "1250",
                        "selfLink": "/api/v1/namespaces/kube-system/configmaps/kube-dns-autoscaler",
                        "uid": "6be5be06-04c9-11ea-bc78-42010a8a0172"
                    }
                },
                "tooltip": "Kubernetes YAML Configuration"
            }
        },
        "8a3715696317811d9abd42b4ac1ddd125fe7a0dd8155535e7ebff0fae625b6a8": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-v3.2.0]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account fluentd-gcp is not found.",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "ee3dc44293fdb853dbb07084217718d1d42e15b0542a49204d83c04cadc86583": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-agent]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account default is not found.",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "1144075da307aac376538c586dfc5c22899b9c412ac745455f9abea733ebb2e7": {
            "dn": "root/ns-[kube-system]/app-[metadata-proxy-v0.1]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account metadata-proxy is not found.",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "3a0424b77e48db6d4f08cc74f3897df9bf245fbadbfd40ae4d76313136616bab": {
            "dn": "root/ns-[kube-system]/app-[nvidia-gpu-device-plugin]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account default is not found.",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "c57c3ea1a51a39d34ee99bec137ab5c179947914f3d971ff36b4535d9a16c246": {
            "dn": "root/ns-[kube-system]/app-[prometheus-to-sd]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account prometheus-to-sd is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "a6b66c0ae1c1a79a2d1b9231a3824b026cbb1ac49b063e20ff7d3d25b98b6f0d": {
            "dn": "root/ns-[kube-system]/app-[event-exporter-v0.2.4]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account event-exporter-sa is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "2f2ded38556f25433147f19b8ab1c47277a632189325764c01bdf026a19265fc": {
            "dn": "root/ns-[kube-system]/app-[fluentd-gcp-scaler]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account fluentd-gcp-scaler is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "edaa8170eb6c1593a6133f905f51d62a7ad149900e4a5109651a73b2ded08f8b": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account default is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "f3484f16e4cd47e85759bc4ef0db51135c9ca7ea15fc1f8ada8072031c683f8f": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-web]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account default is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "c02f84469087efab147641e37f96022a8861e650486da6f22046823c5a452f5c": {
            "dn": "root/ns-[berlioz]/app-[gprod-berlioz-main-ctlr]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account gprod-berlioz-main-ctlr is not found.",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "963a39f4c54967803b469afb803e27df1d75a601af807159988624c17e88a084": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-dtrace]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account default is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "b721b622fdb596be8b6f3bb365565660c10848dc839ea450a13265cacce25932": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-grfna]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account default is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "e6069d00499b8da416e2e264d9b7b564eff87fc6ae4823e1bc532d6c039aa411": {
            "dn": "root/ns-[sprt]/app-[gprod-sprt-main-prmts]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account default is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "de50c5d872f48406ca0910679fb550e7d3738cb6521412afcd8a7b4ccd546cf5": {
            "dn": "root/ns-[kube-system]/app-[heapster]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account heapster is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "0919de9e4218767fcca96964e415fb49cf16c07309dc93fea0377a5705a5ddef": {
            "dn": "root/ns-[kube-system]/app-[kube-dns-autoscaler]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account kube-dns-autoscaler is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "ecc1927c8813f3095b8989194cfc402c37da617cf806ed76600f0a9057c96c27": {
            "dn": "root/ns-[kube-system]/app-[kube-dns]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account kube-dns is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "5e2d05cd46f463609a9328ee9815042bcdef382faac946d6d5ca533079fc5fb8": {
            "dn": "root/ns-[kube-system]/app-[l7-default-backend]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account default is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "4a140ed3f5d2f27427de7c0952f3c7a9cefe4b91777c32a102353ad4f747c842": {
            "dn": "root/ns-[kube-system]/app-[metrics-server-v0.3.1]",
            "kind": "app",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Missing",
                    "severity": "error",
                    "msg": "Service account metrics-server is not found.",
                    "date": "2020-05-01T23:11:29.028Z"
                }
            ]
        },
        "beccaaf61124e7de8750f33edd36addc1d1208f4986bf336633316ec50aded8e": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "MissingConfig",
                    "severity": "error",
                    "msg": "Could not find ConfigMap addr-gprod-addr-main-app-consumesdatabase",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "e940e49d0b92bfac8e275ea85d5ec7918504688f9ceced39faee156db05c86e8": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]/vol-[gprod-addr-main-app-consumes]",
            "kind": "vol",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "MissingConfig",
                    "severity": "error",
                    "msg": "Could not find ConfigMap addr-gprod-addr-main-app-consumesdatabase",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "4e3d6bae98c6af9767f52322c305c0ca6969d5e5e05c577babaff3b29ae39f99": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/vol-[Volumes]/vol-[gprod-addr-main-app-consumesdatabase]",
            "kind": "vol",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "MissingConfig",
                    "severity": "error",
                    "msg": "Could not find ConfigMap addr-gprod-addr-main-app-consumesdatabase",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "2ee460d945e76d665f837c53dc1033be75700310f4a92afa4e938f685cc0e34e": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "MissingConfig",
                    "severity": "error",
                    "msg": "Could not find ConfigMap addr-gprod-addr-main-app-consumesdatabase",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "0a9e3de2545e57ba6caf0866772b8a67ac8178d66b3ffd5b8edd86cb03138b56": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[gprod-addr-main-app-consumes]",
            "kind": "vol",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "MissingConfig",
                    "severity": "error",
                    "msg": "Could not find ConfigMap addr-gprod-addr-main-app-consumesdatabase",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "751f68f510c43fb49099a97280c6ca839af9472ca73889a2d42cec32d1a465c7": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[gprod-addr-main-app]/vol-[gprod-addr-main-app-consumesdatabase]",
            "kind": "vol",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "MissingConfig",
                    "severity": "error",
                    "msg": "Could not find ConfigMap addr-gprod-addr-main-app-consumesdatabase",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "9d8e433a8128d3e9c493970e361abb91e21425a89f836f0ac582beec3a7b7f6d": {
            "dn": "root/ns-[addr]/app-[gprod-addr-main-app]/cont-[cloudsql-proxy-gprod-addr-uswest1c-main-book]/vol-[google-cloud-key]",
            "kind": "vol",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "MissingConfig",
                    "severity": "error",
                    "msg": "Could not find ConfigMap addr-gprod-addr-main-app-consumesdatabase",
                    "date": "2020-05-01T23:11:29.027Z"
                }
            ]
        },
        "f4d3232a3221e172eb55ba185938a9c0c68d708135537ae2594671e8f328bf7e": {
            "dn": "root/ns-[kube-system]/app-[heapster]/service-[ClusterIP]",
            "kind": "service",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Port-8082",
                    "severity": "warn",
                    "msg": "Missing port 8082 definition.",
                    "date": "2020-05-01T23:11:29.029Z"
                }
            ]
        },
        "c33683bc1be0e0837c92861a4eafb82dfa9f32eb2e21dc57bd569df20e160358": {
            "dn": "root/ns-[berlioz]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[sql-schema]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.029Z"
                }
            ]
        },
        "42638c3088c6bdd050f41e28f45e070348a321a3542c442183f5787a86940696": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-crd-10]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.029Z"
                }
            ]
        },
        "d7e3e5263c2e083cf84ec1ca80d8600d07b551d99e9f0a5f53239b29c571f741": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-crd-11]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "a7cc6e7bb0196f2768551628922962f54fb82c1a15b080a928cf643b7915a58f": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-crd-12]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "470eb878410d1b4349ffc4501992e311cef205ad95ae8b4f9b2750d3207d3393": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-galley-configuration]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "78245564cd5634a86d171b780d6f1b8f1b20d59f215427375da2985816217e52": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-security-custom-resources]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "a38f8a636bcf39d8731cc100feaf655564e86fdf5ec658027cd3cd22488d554f": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-security]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "aecbdb007fce055ab736b8ae87af29145539579eaae5f18d2507eaa396c241b2": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-sidecar-injector]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "43786d51bdb396bdcbf4d88535b57381430301629e7e719d63ac03ff29069660": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "3a3c8c3371b1fbe261f2f336ce06751a8690bccb2fcd247c7451d7e03f726acb": {
            "dn": "root/ns-[istio-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[prometheus]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "6ce3896dda9010d88d7b3ebdde1b4372b0c6b316b829b9633901e06bf972666e": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[berlioz.v1]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "8697df448042e388b021a0feb9bf9afa21a50f69e57ba543a44ff865f7a97ab4": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[cluster-autoscaler-status]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "9fad724840040661471f849493476adb9bd75aa3925127c219e79c0136fc573b": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[extension-apiserver-authentication]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "a391b5d4d33abeef08badccb877d0c58e549dbceefc0128fbde39e6c02ba5693": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[fluentd-gcp-config-v1.2.5]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "8efbae7f273f71a4947f509dbabaa252a18fbb8df4a0ed96b87de0e7fd127e96": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[gke-common-webhook-lock]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "3871dcede1040f6fe0e368c3dfe48e25504adc4d6461f24c0253d5fc670ab67a": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[ingress-gce-lock]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "00627fe45d0642458472b45ad754f3a979a48e085968e374e59890c58b7acad3": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[ingress-uid]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "f088ae88542bd0f2d11d9b62449b3a96671d240290c32dfc467c612a7c0e9f23": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio-init.v1]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "c134130f04403819cfd9dce5666a3479611ebadc8d973500ce054e3859b89708": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[istio.v1]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        },
        "ac544002e08afea56ba8c5388b459056418be687d9254c057776f7b7740a32b2": {
            "dn": "root/ns-[kube-system]/raw-[Raw Configs]/raw-[ConfigMaps]/configmap-[kube-dns-autoscaler]",
            "kind": "configmap",
            "config_kind": "alerts",
            "config": [
                {
                    "id": "Unused",
                    "severity": "warn",
                    "msg": "ConfigMap not used.",
                    "date": "2020-05-01T23:11:29.030Z"
                }
            ]
        }
    }
}